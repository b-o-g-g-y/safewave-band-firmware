<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\band.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\band.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Thu Jul 13 13:07:56 2023
<BR><P>
<H3>Maximum Stack Usage =        672 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
app_gap_evt_cb &rArr; gatt_discovery_peer_svc &rArr; gatt_check_peer_svc &rArr; log_printf &rArr; __2printf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[2a1]">gapm_addr_renew_next_addr</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a0]">gapm_addr_fsm</a><BR>
 <LI><a href="#[38e]">smpc_tkdp_send_start</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[391]">smpc_tkdp_send_continue</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4]">ANCS_gatt_msg_handler</a> from ancs_client.o(i.ANCS_gatt_msg_handler) referenced from ancs_client.o(i.ANCS_gatt_add_client)
 <LI><a href="#[128]">BusFault_Handler</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[12b]">DebugMon_Handler</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[126]">HardFault_Handler</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[127]">MemManage_Handler</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[125]">NMI_Handler</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[12c]">PendSV_Handler</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[124]">Reset_Handler</a> from syscall.txt(ABSOLUTE) referenced from boot_vectors.o(RESET)
 <LI><a href="#[12a]">SVC_Handler</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[12d]">SysTick_Handler</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[129]">UsageFault_Handler</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[2c]">_write_uart0</a> from sys_utisl.o(i._write_uart0) referenced from sys_utisl.o(.data)
 <LI><a href="#[2c]">_write_uart0</a> from sys_utisl.o(i._write_uart0) referenced from co_log.o(i.log_init)
 <LI><a href="#[2f]">app_gap_evt_cb</a> from ble_simple_peripheral.o(i.app_gap_evt_cb) referenced from ble_simple_peripheral.o(i.simple_peripheral_init)
 <LI><a href="#[3c]">app_get_current_rssi_rsp</a> from app_task.o(i.app_get_current_rssi_rsp) referenced from app_task.o(.constdata)
 <LI><a href="#[146]">app_main</a> from entry.o(i.app_main) referenced from jump_table_host.o(jump_table_2)
 <LI><a href="#[47]">app_sec_msg_dflt_handler</a> from app_sec.o(i.app_sec_msg_dflt_handler) referenced from app_sec.o(.constdata)
 <LI><a href="#[12]">appm_adv_recv_gapm_cmp</a> from app.o(i.appm_adv_recv_gapm_cmp) referenced from app.o(i.appm_delete_act)
 <LI><a href="#[12]">appm_adv_recv_gapm_cmp</a> from app.o(i.appm_adv_recv_gapm_cmp) referenced from app.o(i.appm_set_advertising_data)
 <LI><a href="#[12]">appm_adv_recv_gapm_cmp</a> from app.o(i.appm_adv_recv_gapm_cmp) referenced from app.o(i.appm_set_per_adv_data)
 <LI><a href="#[12]">appm_adv_recv_gapm_cmp</a> from app.o(i.appm_adv_recv_gapm_cmp) referenced from app.o(i.appm_set_scan_response_data)
 <LI><a href="#[12]">appm_adv_recv_gapm_cmp</a> from app.o(i.appm_adv_recv_gapm_cmp) referenced from app.o(i.appm_start_advertising)
 <LI><a href="#[12]">appm_adv_recv_gapm_cmp</a> from app.o(i.appm_adv_recv_gapm_cmp) referenced from app.o(i.appm_stop_advertising)
 <LI><a href="#[14]">appm_conn_recv_gapm_cmp</a> from app_conn.o(i.appm_conn_recv_gapm_cmp) referenced from app_conn.o(i.appm_start_conn)
 <LI><a href="#[7]">appm_init_imp</a> from app.o(i.appm_init_imp) referenced from entry.o(i.app_main)
 <LI><a href="#[18]">appm_init_imp_for_hci</a> from app.o(i.appm_init_imp_for_hci) referenced from app.o(i.ble_stack_init)
 <LI><a href="#[33]">appm_msg_handler</a> from app_task.o(i.appm_msg_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[13]">appm_scan_recv_gapm_cmp</a> from app.o(i.appm_scan_recv_gapm_cmp) referenced from app.o(i.appm_delete_act)
 <LI><a href="#[122]">attc_err_rsp_handler</a> from attc.o(i.attc_err_rsp_handler) referenced from attc.o(.constdata)
 <LI><a href="#[118]">attc_exc_mtu_rsp_handler</a> from attc.o(i.attc_exc_mtu_rsp_handler) referenced from attc.o(.constdata)
 <LI><a href="#[121]">attc_exe_wr_rsp_handler</a> from attc.o(i.attc_exe_wr_rsp_handler) referenced from attc.o(.constdata)
 <LI><a href="#[11a]">attc_find_by_type_rsp_handler</a> from attc.o(i.attc_find_by_type_rsp_handler) referenced from attc.o(.constdata)
 <LI><a href="#[119]">attc_find_info_rsp_handler</a> from attc.o(i.attc_find_info_rsp_handler) referenced from attc.o(.constdata)
 <LI><a href="#[123]">attc_hdl_val_ntf_ind_handler</a> from attc.o(i.attc_hdl_val_ntf_ind_handler) referenced 2 times from attc.o(.constdata)
 <LI><a href="#[120]">attc_prep_wr_rsp_handler</a> from attc.o(i.attc_prep_wr_rsp_handler) referenced from attc.o(.constdata)
 <LI><a href="#[11c]">attc_rd_by_grp_type_rsp_handler</a> from attc.o(i.attc_rd_by_grp_type_rsp_handler) referenced from attc.o(.constdata)
 <LI><a href="#[11b]">attc_rd_by_type_rsp_handler</a> from attc.o(i.attc_rd_by_type_rsp_handler) referenced from attc.o(.constdata)
 <LI><a href="#[11e]">attc_rd_mult_rsp_handler</a> from attc.o(i.attc_rd_mult_rsp_handler) referenced from attc.o(.constdata)
 <LI><a href="#[11d]">attc_rd_rsp_handler</a> from attc.o(i.attc_rd_rsp_handler) referenced 2 times from attc.o(.constdata)
 <LI><a href="#[11f]">attc_wr_rsp_handler</a> from attc.o(i.attc_wr_rsp_handler) referenced from attc.o(.constdata)
 <LI><a href="#[c3]">atts_execute_write_req</a> from atts.o(i.atts_execute_write_req) referenced from atts.o(.constdata)
 <LI><a href="#[b9]">atts_find_by_type_req</a> from atts.o(i.atts_find_by_type_req) referenced from atts.o(.constdata)
 <LI><a href="#[b8]">atts_find_info_req</a> from atts.o(i.atts_find_info_req) referenced from atts.o(.constdata)
 <LI><a href="#[b7]">atts_mtu_exc_req</a> from atts.o(i.atts_mtu_exc_req) referenced from atts.o(.constdata)
 <LI><a href="#[c2]">atts_prepare_write_req</a> from atts.o(i.atts_prepare_write_req) referenced from atts.o(.constdata)
 <LI><a href="#[bd]">atts_read_blob_req</a> from atts.o(i.atts_read_blob_req) referenced from atts.o(.constdata)
 <LI><a href="#[bb]">atts_read_by_grp_type_req</a> from atts.o(i.atts_read_by_grp_type_req) referenced from atts.o(.constdata)
 <LI><a href="#[ba]">atts_read_by_type_req</a> from atts.o(i.atts_read_by_type_req) referenced from atts.o(.constdata)
 <LI><a href="#[be]">atts_read_mult_req</a> from atts.o(i.atts_read_mult_req) referenced from atts.o(.constdata)
 <LI><a href="#[bc]">atts_read_req</a> from atts.o(i.atts_read_req) referenced from atts.o(.constdata)
 <LI><a href="#[bf]">atts_write_cmd</a> from atts.o(i.atts_write_cmd) referenced from atts.o(.constdata)
 <LI><a href="#[c0]">atts_write_req</a> from atts.o(i.atts_write_req) referenced from atts.o(.constdata)
 <LI><a href="#[c1]">atts_write_signed</a> from atts.o(i.atts_write_signed) referenced from atts.o(.constdata)
 <LI><a href="#[15]">ble_bond_addr_resolve_cb</a> from user_bond_manage.o(i.ble_bond_addr_resolve_cb) referenced from user_bond_manage.o(i.ble_bond_check)
 <LI><a href="#[16]">ble_bond_get_info</a> from user_bond_manage.o(i.ble_bond_get_info) referenced from user_bond_manage.o(i.ble_bond_init)
 <LI><a href="#[17]">ble_bond_store_info</a> from user_bond_manage.o(i.ble_bond_store_info) referenced from user_bond_manage.o(i.ble_bond_init)
 <LI><a href="#[b]">con_sched_calc_target_patch_ram</a> from patch_lld.o(ram_code) referenced from entry.o(i.app_main)
 <LI><a href="#[12f]">dma_isr</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[13a]">exti_isr</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[c]">flash_erase_write_protect_imp</a> from entry.o(ram_code) referenced from entry.o(i.app_main)
 <LI><a href="#[5]">fputc</a> from syscall.txt(ABSOLUTE) referenced from printfa.o(i.__0printf)
 <LI><a href="#[5]">fputc</a> from syscall.txt(ABSOLUTE) referenced from printfa.o(i.__0vprintf)
 <LI><a href="#[2b]">fputc_uart0</a> from syscall.txt(ABSOLUTE) referenced from co_log.o(i.log_init)
 <LI><a href="#[60]">gapc_bond_cfm_handler</a> from gapc_task.o(i.gapc_bond_cfm_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[5f]">gapc_bond_cmd_handler</a> from gapc_task.o(i.gapc_bond_cmd_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[4a]">gapc_bond_ind_handler</a> from app_sec.o(i.gapc_bond_ind_handler) referenced from app_sec.o(.constdata)
 <LI><a href="#[49]">gapc_bond_req_ind_handler</a> from app_sec.o(i.gapc_bond_req_ind_handler) referenced from app_sec.o(.constdata)
 <LI><a href="#[41]">gapc_cmp_evt_handler</a> from app_task.o(i.gapc_cmp_evt_handler) referenced 4 times from app_task.o(.constdata)
 <LI><a href="#[56]">gapc_connection_cfm_handler</a> from gapc_task.o(i.gapc_connection_cfm_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[3f]">gapc_connection_req_ind_handler</a> from app_task.o(i.gapc_connection_req_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[54]">gapc_default_msg_handler</a> from gapc_task.o(i.gapc_default_msg_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[55]">gapc_disconnect_cmd_handler</a> from gapc_task.o(i.gapc_disconnect_cmd_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[42]">gapc_disconnect_ind_handler</a> from app_task.o(i.gapc_disconnect_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[62]">gapc_encrypt_cfm_handler</a> from gapc_task.o(i.gapc_encrypt_cfm_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[61]">gapc_encrypt_cmd_handler</a> from gapc_task.o(i.gapc_encrypt_cmd_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[4c]">gapc_encrypt_ind_handler</a> from app_sec.o(i.gapc_encrypt_ind_handler) referenced from app_sec.o(.constdata)
 <LI><a href="#[4b]">gapc_encrypt_req_ind_handler</a> from app_sec.o(i.gapc_encrypt_req_ind_handler) referenced from app_sec.o(.constdata)
 <LI><a href="#[6b]">gapc_gen_dh_key_ind_handler</a> from gapc_task.o(i.gapc_gen_dh_key_ind_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[6]">gapc_get_conidx_imp</a> from gapc.o(i.gapc_get_conidx_imp) referenced from entry.o(i.app_main)
 <LI><a href="#[70]">gapc_get_dev_info_cfm_handler</a> from gapc_task.o(i.gapc_get_dev_info_cfm_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[3d]">gapc_get_dev_info_req_ind_handler</a> from app_task.o(i.gapc_get_dev_info_req_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[57]">gapc_get_info_cmd_handler</a> from gapc_task.o(i.gapc_get_info_cmd_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[72]">gapc_hci_handler</a> from gapc_hci.o(i.gapc_hci_handler) referenced 4 times from gapc_task.o(.constdata)
 <LI><a href="#[6c]">gapc_key_press_notification_cmd_handler</a> from gapc_task.o(i.gapc_key_press_notification_cmd_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[5b]">gapc_param_update_cfm_handler</a> from gapc_task.o(i.gapc_param_update_cfm_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[5a]">gapc_param_update_cmd_handler</a> from gapc_task.o(i.gapc_param_update_cmd_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[40]">gapc_param_update_req_ind_handler</a> from app_task.o(i.gapc_param_update_req_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[a5]">gapc_peer_att_info_ind_handler</a> from gapm_init.o(i.gapc_peer_att_info_ind_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[44]">gapc_peer_features_ind_handler</a> from app_task.o(i.gapc_peer_features_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[43]">gapc_peer_ver_ind_handler</a> from app_task.o(i.gapc_peer_ver_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[63]">gapc_security_cmd_handler</a> from gapc_task.o(i.gapc_security_cmd_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[48]">gapc_security_ind_handler</a> from app_sec.o(i.gapc_security_ind_handler) referenced from app_sec.o(.constdata)
 <LI><a href="#[71]">gapc_set_dev_info_cfm_handler</a> from gapc_task.o(i.gapc_set_dev_info_cfm_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[3e]">gapc_set_dev_info_req_ind_handler</a> from app_task.o(i.gapc_set_dev_info_req_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[73]">gapc_set_le_ping_to_handler</a> from gapc_task.o(i.gapc_set_le_ping_to_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[74]">gapc_set_le_pkt_size_handler</a> from gapc_task.o(i.gapc_set_le_pkt_size_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[75]">gapc_set_phy_cmd_handler</a> from gapc_task.o(i.gapc_set_phy_cmd_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[5e]">gapc_set_pref_slave_latency_cmd_handler</a> from gapc_task.o(i.gapc_set_pref_slave_latency_cmd_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[64]">gapc_sign_cmd_handler</a> from gapc_task.o(i.gapc_sign_cmd_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[db]">gapc_sign_ind_handler</a> from gattc_task.o(i.gapc_sign_ind_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[6a]">gapc_smp_rep_attempts_timer_handler</a> from gapc_task.o(i.gapc_smp_rep_attempts_timer_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[69]">gapc_smp_timeout_timer_ind_handler</a> from gapc_task.o(i.gapc_smp_timeout_timer_ind_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[5d]">gapc_update_conn_param_to_ind_handler</a> from gapc_task.o(i.gapc_update_conn_param_to_ind_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[a6]">gapm_activity_create_cmd_handler</a> from gapm_actv.o(i.gapm_activity_create_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[35]">gapm_activity_created_ind_handler</a> from app_task.o(i.gapm_activity_created_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[a9]">gapm_activity_delete_cmd_handler</a> from gapm_actv.o(i.gapm_activity_delete_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[a7]">gapm_activity_start_cmd_handler</a> from gapm_actv.o(i.gapm_activity_start_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[a8]">gapm_activity_stop_cmd_handler</a> from gapm_actv.o(i.gapm_activity_stop_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[36]">gapm_activity_stopped_ind_handler</a> from app_task.o(i.gapm_activity_stopped_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[ac]">gapm_addr_renew_cmd_handler</a> from gapm_addr.o(i.gapm_addr_renew_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[ad]">gapm_addr_renew_to_ind_handler</a> from gapm_addr.o(i.gapm_addr_renew_to_ind_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[3b]">gapm_addr_solved_ind_handler</a> from app_task.o(i.gapm_addr_solved_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[1c]">gapm_adv_delete</a> from gapm_adv.o(i.gapm_adv_delete) referenced from gapm_adv.o(i.gapm_adv_create)
 <LI><a href="#[1a]">gapm_adv_start</a> from gapm_adv.o(i.gapm_adv_start) referenced from gapm_adv.o(i.gapm_adv_create)
 <LI><a href="#[1b]">gapm_adv_stop</a> from gapm_adv.o(i.gapm_adv_stop) referenced from gapm_adv.o(i.gapm_adv_create)
 <LI><a href="#[ab]">gapm_auto_conn_to_ind_handler</a> from gapm_init.o(i.gapm_auto_conn_to_ind_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[37]">gapm_cmp_evt_handler</a> from app_task.o(i.gapm_cmp_evt_handler) referenced 3 times from app_task.o(.constdata)
 <LI><a href="#[9a]">gapm_default_msg_handler</a> from gapm_task.o(i.gapm_default_msg_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[ae]">gapm_dev_bdaddr_ind_handler</a> from gapm_addr.o(i.gapm_dev_bdaddr_ind_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[45]">gapm_enc_block_ind_handler</a> from app_task.o(i.gapm_enc_block_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[39]">gapm_ext_adv_report_ind_handler</a> from app_task.o(i.gapm_ext_adv_report_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[a2]">gapm_gen_dh_key_cmd_handler</a> from gapm_smp.o(i.gapm_gen_dh_key_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[a0]">gapm_gen_rand_addr_cmd_handler</a> from gapm_smp.o(i.gapm_gen_rand_addr_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[38]">gapm_gen_rand_nb_ind_handler</a> from app_task.o(i.gapm_gen_rand_nb_ind_handler) referenced 2 times from app_task.o(.constdata)
 <LI><a href="#[9e]">gapm_get_dev_info_cmd_handler</a> from gapm_cfg.o(i.gapm_get_dev_info_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[a3]">gapm_get_pub_key_cmd_handler</a> from gapm_smp.o(i.gapm_get_pub_key_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[b1]">gapm_get_ral_addr_cmd_handler</a> from gapm_list.o(i.gapm_get_ral_addr_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[b5]">gapm_hci_handler</a> from gapm_task.o(i.gapm_hci_handler) referenced 3 times from gapm_task.o(.constdata)
 <LI><a href="#[1f]">gapm_init_delete</a> from gapm_init.o(i.gapm_init_delete) referenced from gapm_init.o(i.gapm_init_create)
 <LI><a href="#[1d]">gapm_init_start</a> from gapm_init.o(i.gapm_init_start) referenced from gapm_init.o(i.gapm_init_create)
 <LI><a href="#[1e]">gapm_init_stop</a> from gapm_init.o(i.gapm_init_stop) referenced from gapm_init.o(i.gapm_init_create)
 <LI><a href="#[b2]">gapm_list_rmv_cmd_handle</a> from gapm_list.o(i.gapm_list_rmv_cmd_handle) referenced from gapm_task.o(.constdata)
 <LI><a href="#[b0]">gapm_list_set_cmd_handler</a> from gapm_list.o(i.gapm_list_set_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[22]">gapm_per_sync_delete</a> from gapm_per_sync.o(i.gapm_per_sync_delete) referenced from gapm_per_sync.o(i.gapm_per_sync_create)
 <LI><a href="#[20]">gapm_per_sync_start</a> from gapm_per_sync.o(i.gapm_per_sync_start) referenced from gapm_per_sync.o(i.gapm_per_sync_create)
 <LI><a href="#[21]">gapm_per_sync_stop</a> from gapm_per_sync.o(i.gapm_per_sync_stop) referenced from gapm_per_sync.o(i.gapm_per_sync_create)
 <LI><a href="#[34]">gapm_profile_added_ind_handler</a> from app_task.o(i.gapm_profile_added_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[b3]">gapm_profile_task_add_cmd_handler</a> from gapm_cfg.o(i.gapm_profile_task_add_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[9b]">gapm_reset_cmd_handler</a> from gapm_cfg.o(i.gapm_reset_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[9f]">gapm_resolv_addr_cmd_handler</a> from gapm_smp.o(i.gapm_resolv_addr_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[25]">gapm_scan_delete</a> from gapm_scan.o(i.gapm_scan_delete) referenced from gapm_scan.o(i.gapm_scan_create)
 <LI><a href="#[23]">gapm_scan_start</a> from gapm_scan.o(i.gapm_scan_start) referenced from gapm_scan.o(i.gapm_scan_create)
 <LI><a href="#[24]">gapm_scan_stop</a> from gapm_scan.o(i.gapm_scan_stop) referenced from gapm_scan.o(i.gapm_scan_create)
 <LI><a href="#[aa]">gapm_set_adv_data_cmd_handler</a> from gapm_adv.o(i.gapm_set_adv_data_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[9d]">gapm_set_channel_map_cmd_handler</a> from gapm_cfg.o(i.gapm_set_channel_map_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[9c]">gapm_set_dev_config_cmd_handler</a> from gapm_cfg.o(i.gapm_set_dev_config_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[b6]">gapm_set_irk_cmd_handler</a> from gapm_cfg.o(i.gapm_set_irk_cmd_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[26]">gapm_smp_encrypt_rsp</a> from gapm_smp.o(i.gapm_smp_encrypt_rsp) referenced from gapm_smp.o(i.gapm_smp_encrypt_req)
 <LI><a href="#[27]">gapm_smp_rand_rsp</a> from gapm_smp.o(i.gapm_smp_rand_rsp) referenced from gapm_smp.o(i.gapm_smp_rand_req)
 <LI><a href="#[3a]">gapm_sync_established_ind_handler</a> from app_task.o(i.gapm_sync_established_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[b4]">gapm_unknown_task_msg_handler</a> from gapm_task.o(i.gapm_unknown_task_msg_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[a1]">gapm_use_enc_block_cmd_handler</a> from gapm_smp.o(i.gapm_use_enc_block_cmd_handler) referenced 2 times from gapm_task.o(.constdata)
 <LI><a href="#[67]">gapm_use_enc_block_ind_handler</a> from gapc_task.o(i.gapm_use_enc_block_ind_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[29]">gatt_msg_default_handler</a> from gatt_api.o(i.gatt_msg_default_handler) referenced from gatt_api.o(i.gatt_service_init)
 <LI><a href="#[28]">gatt_servcie_added</a> from gatt_api.o(i.gatt_servcie_added) referenced from gatt_api.o(i.gatt_profile_task_add)
 <LI><a href="#[145]">gatt_service_connection_cleanup</a> from gatt_api.o(i.gatt_service_connection_cleanup) referenced from gatt_api.o(.data)
 <LI><a href="#[144]">gatt_service_connection_created</a> from gatt_api.o(i.gatt_service_connection_created) referenced from gatt_api.o(.data)
 <LI><a href="#[143]">gatt_service_destroy</a> from gatt_api.o(i.gatt_service_destroy) referenced from gatt_api.o(.data)
 <LI><a href="#[142]">gatt_service_init</a> from gatt_api.o(i.gatt_service_init) referenced from gatt_api.o(.data)
 <LI><a href="#[d5]">gattc_att_info_cfm_handler</a> from gattc_task.o(i.gattc_att_info_cfm_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[6e]">gattc_att_info_req_ind_handler</a> from gapc_task.o(i.gattc_att_info_req_ind_handler) referenced 2 times from gapc_task.o(.constdata)
 <LI><a href="#[59]">gattc_cmp_evt_handler</a> from gapc_task.o(i.gattc_cmp_evt_handler) referenced 2 times from gapc_task.o(.constdata)
 <LI><a href="#[c4]">gattc_default_msg_handler</a> from gattc_task.o(i.gattc_default_msg_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[d2]">gattc_disc_char_desc_ind_handler</a> from gattc_task.o(i.gattc_disc_char_desc_ind_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[d1]">gattc_disc_char_ind_handler</a> from gattc_task.o(i.gattc_disc_char_ind_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[c6]">gattc_disc_cmd_handler</a> from gattc_task.o(i.gattc_disc_cmd_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[d0]">gattc_disc_svc_incl_ind_handler</a> from gattc_task.o(i.gattc_disc_svc_incl_ind_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[cf]">gattc_disc_svc_ind_handler</a> from gattc_task.o(i.gattc_disc_svc_ind_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[c9]">gattc_event_cfm_handler</a> from gattc_task.o(i.gattc_event_cfm_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[46]">gattc_event_ind_handler</a> from app_task.o(i.gattc_event_ind_handler) referenced from app_task.o(.constdata)
 <LI><a href="#[c5]">gattc_exc_mtu_cmd_handler</a> from gattc_task.o(i.gattc_exc_mtu_cmd_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[ca]">gattc_execute_write_cmd_handler</a> from gattc_task.o(i.gattc_execute_write_cmd_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[d3]">gattc_read_cfm_handler</a> from gattc_task.o(i.gattc_read_cfm_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[c7]">gattc_read_cmd_handler</a> from gattc_task.o(i.gattc_read_cmd_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[58]">gattc_read_ind_handler</a> from gapc_task.o(i.gattc_read_ind_handler) referenced from gapc_task.o(.constdata)
 <LI><a href="#[6f]">gattc_read_req_ind_handler</a> from gapc_task.o(i.gattc_read_req_ind_handler) referenced 2 times from gapc_task.o(.constdata)
 <LI><a href="#[cb]">gattc_reg_to_peer_evt_cmd_handler</a> from gattc_task.o(i.gattc_reg_to_peer_evt_cmd_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[cd]">gattc_sdp_svc_disc_cmd_handler</a> from gattc_task.o(i.gattc_sdp_svc_disc_cmd_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[d7]">gattc_send_evt_cmd_handler</a> from gattc_task.o(i.gattc_send_evt_cmd_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[d6]">gattc_send_svc_changed_cmd_handler</a> from gattc_task.o(i.gattc_send_svc_changed_cmd_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[cc]">gattc_timeout_handler</a> from gattc_task.o(i.gattc_timeout_handler) referenced 2 times from gattc_task.o(.constdata)
 <LI><a href="#[d4]">gattc_write_cfm_handler</a> from gattc_task.o(i.gattc_write_cfm_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[c8]">gattc_write_cmd_handler</a> from gattc_task.o(i.gattc_write_cmd_handler) referenced from gattc_task.o(.constdata)
 <LI><a href="#[6d]">gattc_write_req_ind_handler</a> from gapc_task.o(i.gattc_write_req_ind_handler) referenced 2 times from gapc_task.o(.constdata)
 <LI><a href="#[df]">gattm_default_msg_handler</a> from gattm_task.o(i.gattm_default_msg_handler) referenced from gattm_task.o(.constdata)
 <LI><a href="#[52]">hci_acl_data_handler</a> from l2cc_task.o(i.hci_acl_data_handler) referenced from l2cc_task.o(.constdata)
 <LI><a href="#[f6]">hci_auth_payl_to_exp_evt_handler</a> from gapc_hci.o(i.hci_auth_payl_to_exp_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[77]">hci_basic_cmd_cmp_evt_cfg_handler</a> from gapm_cfg.o(i.hci_basic_cmd_cmp_evt_cfg_handler) referenced 9 times from gapm_task.o(.constdata)
 <LI><a href="#[8e]">hci_basic_cmd_cmp_evt_rl_cfg_handler</a> from gapm_cfg.o(i.hci_basic_cmd_cmp_evt_rl_cfg_handler) referenced 2 times from gapm_task.o(.constdata)
 <LI><a href="#[eb]">hci_cmd_stat_event_handler</a> from gapc_hci.o(i.hci_cmd_stat_event_handler) referenced 5 times from gapc_hci.o(.constdata)
 <LI><a href="#[f4]">hci_disc_cmp_evt_handler</a> from gapc_hci.o(i.hci_disc_cmp_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[f7]">hci_enc_chg_evt_handler</a> from gapc_hci.o(i.hci_enc_chg_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[f8]">hci_enc_key_refr_evt_handler</a> from gapc_hci.o(i.hci_enc_key_refr_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[98]">hci_le_adv_set_term_evt_handler</a> from gapm_adv.o(i.hci_le_adv_set_term_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[f2]">hci_le_ch_sel_algo_evt_handler</a> from gapc_hci.o(i.hci_le_ch_sel_algo_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[8a]">hci_le_cmd_cmp_evt_addr_handler</a> from gapm_addr.o(i.hci_le_cmd_cmp_evt_addr_handler) referenced 2 times from gapm_task.o(.constdata)
 <LI><a href="#[83]">hci_le_cmd_cmp_evt_adv_handler</a> from gapm_adv.o(i.hci_le_cmd_cmp_evt_adv_handler) referenced 9 times from gapm_task.o(.constdata)
 <LI><a href="#[89]">hci_le_cmd_cmp_evt_init_handler</a> from gapm_init.o(i.hci_le_cmd_cmp_evt_init_handler) referenced 2 times from gapm_task.o(.constdata)
 <LI><a href="#[82]">hci_le_cmd_cmp_evt_list_handler</a> from gapm_list.o(i.hci_le_cmd_cmp_evt_list_handler) referenced 8 times from gapm_task.o(.constdata)
 <LI><a href="#[87]">hci_le_cmd_cmp_evt_per_sync_handler</a> from gapm_per_sync.o(i.hci_le_cmd_cmp_evt_per_sync_handler) referenced 3 times from gapm_task.o(.constdata)
 <LI><a href="#[86]">hci_le_cmd_cmp_evt_scan_handler</a> from gapm_scan.o(i.hci_le_cmd_cmp_evt_scan_handler) referenced 2 times from gapm_task.o(.constdata)
 <LI><a href="#[ee]">hci_le_con_update_cmp_evt_handler</a> from gapc_hci.o(i.hci_le_con_update_cmp_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[f0]">hci_le_data_len_chg_evt_handler</a> from gapc_hci.o(i.hci_le_data_len_chg_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[95]">hci_le_enh_con_cmp_evt_handler</a> from gapm_actv.o(i.hci_le_enh_con_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[90]">hci_le_ext_adv_report_evt_handler</a> from gapm_scan.o(i.hci_le_ext_adv_report_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[8f]">hci_le_gen_dhkey_stat_evt_handler</a> from gapm_smp.o(i.hci_le_gen_dhkey_stat_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[97]">hci_le_generate_dhkey_cmp_evt_handler</a> from gapm_smp.o(i.hci_le_generate_dhkey_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[f3]">hci_le_ltk_request_evt_handler</a> from gapc_hci.o(i.hci_le_ltk_request_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[93]">hci_le_per_adv_report_evt_handler</a> from gapm_per_sync.o(i.hci_le_per_adv_report_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[92]">hci_le_per_adv_sync_est_evt_handler</a> from gapm_per_sync.o(i.hci_le_per_adv_sync_est_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[94]">hci_le_per_adv_sync_lost_evt_handler</a> from gapm_per_sync.o(i.hci_le_per_adv_sync_lost_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[f1]">hci_le_phy_upd_cmp_evt_handler</a> from gapc_hci.o(i.hci_le_phy_upd_cmp_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[8b]">hci_le_rd_adv_chnl_tx_pw_cmd_cmp_evt_handler</a> from gapm_cfg.o(i.hci_le_rd_adv_chnl_tx_pw_cmd_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[79]">hci_le_rd_buff_size_cmd_cmp_evt_handler</a> from gapm_cfg.o(i.hci_le_rd_buff_size_cmd_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[96]">hci_le_rd_local_p256_public_key_cmp_evt_handler</a> from gapm_cfg.o(i.hci_le_rd_local_p256_public_key_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[7e]">hci_le_rd_max_data_len_cmd_cmp_evt_handler</a> from gapm_cfg.o(i.hci_le_rd_max_data_len_cmd_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[85]">hci_le_rd_nb_supp_adv_sets_cmd_cmp_evt_handler</a> from gapm_cfg.o(i.hci_le_rd_nb_supp_adv_sets_cmd_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[88]">hci_le_rd_pal_size_cmd_cmp_evt_handler</a> from gapm_list.o(i.hci_le_rd_pal_size_cmd_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[e8]">hci_le_rd_phy_cmd_cmp_evt_handler</a> from gapc_hci.o(i.hci_le_rd_phy_cmd_cmp_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[8d]">hci_le_rd_ral_addr_cmd_cmp_evt_handler</a> from gapm_list.o(i.hci_le_rd_ral_addr_cmd_cmp_evt_handler) referenced 2 times from gapm_task.o(.constdata)
 <LI><a href="#[8c]">hci_le_rd_ral_size_cmd_cmp_evt_handler</a> from gapm_list.o(i.hci_le_rd_ral_size_cmd_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[ed]">hci_le_rd_rem_feats_cmp_evt_handler</a> from gapc_hci.o(i.hci_le_rd_rem_feats_cmp_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[80]">hci_le_rd_rf_path_comp_cmd_cmp_evt_handler</a> from gapm_cfg.o(i.hci_le_rd_rf_path_comp_cmd_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[7d]">hci_le_rd_suggted_dft_data_len_cmd_cmp_evt_handler</a> from gapm_cfg.o(i.hci_le_rd_suggted_dft_data_len_cmd_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[7f]">hci_le_rd_tx_pwr_cmd_cmp_evt_handler</a> from gapm_cfg.o(i.hci_le_rd_tx_pwr_cmd_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[81]">hci_le_rd_wlst_size_cmd_cmp_evt_handler</a> from gapm_list.o(i.hci_le_rd_wlst_size_cmd_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[84]">hci_le_read_max_adv_data_len_cmd_cmp_evt_handler</a> from gapm_cfg.o(i.hci_le_read_max_adv_data_len_cmd_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[ef]">hci_le_rem_con_param_req_evt_handler</a> from gapc_hci.o(i.hci_le_rem_con_param_req_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[99]">hci_le_scan_req_rcvd_evt_handler</a> from gapm_adv.o(i.hci_le_scan_req_rcvd_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[91]">hci_le_scan_timeout_evt_handler</a> from gapm_scan.o(i.hci_le_scan_timeout_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[e7]">hci_le_set_data_len_cmd_cmp_evt_handler</a> from gapc_hci.o(i.hci_le_set_data_len_cmd_cmp_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[ec]">hci_le_start_enc_stat_evt_handler</a> from gapc_hci.o(i.hci_le_start_enc_stat_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[51]">hci_nb_cmp_pkts_evt_handler</a> from l2cc_task.o(i.hci_nb_cmp_pkts_evt_handler) referenced from l2cc_task.o(.constdata)
 <LI><a href="#[e5]">hci_rd_auth_payl_to_cmd_cmp_evt_handler</a> from gapc_hci.o(i.hci_rd_auth_payl_to_cmd_cmp_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[7c]">hci_rd_bd_addr_cmd_cmp_evt_handler</a> from gapm_cfg.o(i.hci_rd_bd_addr_cmd_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[7a]">hci_rd_buff_size_cmd_cmp_evt_handler</a> from gapm_cfg.o(i.hci_rd_buff_size_cmd_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[e4]">hci_rd_chnl_map_cmd_cmp_evt_handler</a> from gapc_hci.o(i.hci_rd_chnl_map_cmd_cmp_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[7b]">hci_rd_local_ver_info_cmd_cmp_evt_handler</a> from gapm_cfg.o(i.hci_rd_local_ver_info_cmd_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[f5]">hci_rd_rem_ver_info_cmp_evt_handler</a> from gapc_hci.o(i.hci_rd_rem_ver_info_cmp_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[e3]">hci_rd_rssi_cmd_cmp_evt_handler</a> from gapc_hci.o(i.hci_rd_rssi_cmd_cmp_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[78]">hci_test_end_cmd_cmp_evt_handler</a> from gapm_cfg.o(i.hci_test_end_cmd_cmp_evt_handler) referenced from gapm_task.o(.constdata)
 <LI><a href="#[ea]">hci_vs_set_pref_slave_latency_cmd_cmp_evt_handler</a> from gapc_hci.o(i.hci_vs_set_pref_slave_latency_cmd_cmp_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[e6]">hci_wr_auth_payl_to_cmd_cmp_evt_handler</a> from gapc_hci.o(i.hci_wr_auth_payl_to_cmd_cmp_evt_handler) referenced from gapc_hci.o(.constdata)
 <LI><a href="#[132]">i2c0_isr</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[133]">i2c1_isr</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[13f]">i2s_isr</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[1]">jump_table_memmory_init</a> from jump_table_host.o(i.jump_table_memmory_init) referenced from jump_table_host.o(jump_table_2)
 <LI><a href="#[2]">jump_table_param_get</a> from jump_table_host.o(i.jump_table_param_get) referenced from jump_table_host.o(jump_table_4)
 <LI><a href="#[3]">jump_table_param_set</a> from jump_table_host.o(i.jump_table_param_set) referenced from jump_table_host.o(jump_table_4)
 <LI><a href="#[e9]">ke_msg_discard</a> from syscall.txt(ABSOLUTE) referenced 2 times from gapc_hci.o(.constdata)
 <LI><a href="#[f]">ke_task_default_handler_get_patch</a> from entry.o(i.ke_task_default_handler_get_patch) referenced from entry.o(i.app_main)
 <LI><a href="#[e1]">l2c_code_conn_param_upd_req_handler</a> from l2cc_sig.o(i.l2c_code_conn_param_upd_req_handler) referenced 2 times from l2cc_sig.o(.constdata)
 <LI><a href="#[e2]">l2c_code_conn_param_upd_resp_handler</a> from l2cc_sig.o(i.l2c_code_conn_param_upd_resp_handler) referenced 2 times from l2cc_sig.o(.constdata)
 <LI><a href="#[e0]">l2c_code_reject_handler</a> from l2cc_sig.o(i.l2c_code_reject_handler) referenced 2 times from l2cc_sig.o(.constdata)
 <LI><a href="#[65]">l2cc_cmp_evt_handler</a> from gapc_task.o(i.l2cc_cmp_evt_handler) referenced 2 times from gapc_task.o(.constdata)
 <LI><a href="#[50]">l2cc_dbg_pdu_send_cmd_handler</a> from l2cc_task.o(i.l2cc_dbg_pdu_send_cmd_handler) referenced from l2cc_task.o(.constdata)
 <LI><a href="#[4d]">l2cc_default_msg_handler</a> from l2cc_task.o(i.l2cc_default_msg_handler) referenced from l2cc_task.o(.constdata)
 <LI><a href="#[4f]">l2cc_lecb_sdu_send_cmd_handler</a> from l2cc_task.o(i.l2cc_lecb_sdu_send_cmd_handler) referenced from l2cc_task.o(.constdata)
 <LI><a href="#[53]">l2cc_pdu_recv_ind_handler</a> from l2cc_task.o(i.l2cc_pdu_recv_ind_handler) referenced 3 times from l2cc_task.o(.constdata)
 <LI><a href="#[4e]">l2cc_pdu_send_cmd_handler</a> from l2cc_task.o(i.l2cc_pdu_send_cmd_handler) referenced from l2cc_task.o(.constdata)
 <LI><a href="#[2a]">l2cm_l2cap_tx_handler</a> from l2cm.o(i.l2cm_l2cap_tx_handler) referenced from l2cm.o(i.l2cm_init)
 <LI><a href="#[13e]">lcd_isr</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[e]">low_power_restore_entry_imp</a> from patch_rf.o(ram_code) referenced from entry.o(i.app_main)
 <LI><a href="#[d]">low_power_save_entry_imp</a> from patch_rf.o(ram_code) referenced from entry.o(i.app_main)
 <LI><a href="#[31]">main_task_timer_handler</a> from proj_main.o(i.main_task_timer_handler) referenced from proj_main.o(i.user_main)
 <LI><a href="#[19]">os_default_task_func</a> from os_task.o(i.os_default_task_func) referenced from os_task.o(i.from_task_func_to_msg_handle)
 <LI><a href="#[2e]">os_timer_ota_cb</a> from ota.o(i.os_timer_ota_cb) referenced from ota.o(i.ota_start)
 <LI><a href="#[2d]">ota_gatt_msg_handler</a> from ota_service.o(i.ota_gatt_msg_handler) referenced from ota_service.o(i.ota_gatt_add_service)
 <LI><a href="#[139]">pdm_isr</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[13b]">pmu_isr</a> from driver_pmu.o(ram_code) referenced from boot_vectors.o(RESET)
 <LI><a href="#[9]">prf_itf_get_imp</a> from app_prf.o(i.prf_itf_get_imp) referenced from entry.o(i.app_main)
 <LI><a href="#[13c]">pwm_isr</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[140]">rf_init_api_null</a> from patch_rf.o(ram_code) referenced from patch_rf.o(ram_code)
 <LI><a href="#[141]">rf_init_api_rssi_convert</a> from patch_rf.o(ram_code) referenced from patch_rf.o(ram_code)
 <LI><a href="#[a]">rf_init_app</a> from patch_rf.o(ram_code) referenced from entry.o(i.app_main)
 <LI><a href="#[8]">rwble_hl_init_imp</a> from rwble_hl.o(i.rwble_hl_init_imp) referenced from entry.o(i.app_main)
 <LI><a href="#[12e]">rwble_isr_ram</a> from patch_rf.o(ram_code) referenced from boot_vectors.o(RESET)
 <LI><a href="#[11]">rwip_slot_2_lpcycles_ram</a> from entry.o(ram_code) referenced from entry.o(i.app_main)
 <LI><a href="#[10]">sch_arb_event_start_direct_rom</a> from syscall.txt(ABSOLUTE) referenced from entry.o(i.app_main)
 <LI><a href="#[32]">sleep_timer_handler</a> from proj_main.o(i.sleep_timer_handler) referenced from proj_main.o(i.user_main)
 <LI><a href="#[107]">smpc_construcpublic_key_t_pdu</a> from smpc_util.o(i.smpc_construcpublic_key_t_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[108]">smpc_construct_dhkey_check_pdu</a> from smpc_util.o(i.smpc_construct_dhkey_check_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[101]">smpc_construct_enc_info_pdu</a> from smpc_util.o(i.smpc_construct_enc_info_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[104]">smpc_construct_id_addr_info_pdu</a> from smpc_util.o(i.smpc_construct_id_addr_info_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[103]">smpc_construct_id_info_pdu</a> from smpc_util.o(i.smpc_construct_id_info_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[109]">smpc_construct_keypress_notification_pdu</a> from smpc_util.o(i.smpc_construct_keypress_notification_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[102]">smpc_construct_mst_id_pdu</a> from smpc_util.o(i.smpc_construct_mst_id_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[fe]">smpc_construct_pair_cfm_pdu</a> from smpc_util.o(i.smpc_construct_pair_cfm_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[100]">smpc_construct_pair_fail_pdu</a> from smpc_util.o(i.smpc_construct_pair_fail_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[ff]">smpc_construct_pair_rand_pdu</a> from smpc_util.o(i.smpc_construct_pair_rand_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[fc]">smpc_construct_pair_req_pdu</a> from smpc_util.o(i.smpc_construct_pair_req_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[fd]">smpc_construct_pair_rsp_pdu</a> from smpc_util.o(i.smpc_construct_pair_rsp_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[106]">smpc_construct_sec_req_pdu</a> from smpc_util.o(i.smpc_construct_sec_req_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[105]">smpc_construct_sign_info_pdu</a> from smpc_util.o(i.smpc_construct_sign_info_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[116]">smpc_recv_dhkey_check_pdu</a> from smpc_util.o(i.smpc_recv_dhkey_check_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[10f]">smpc_recv_enc_info_pdu</a> from smpc_util.o(i.smpc_recv_enc_info_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[112]">smpc_recv_id_addr_info_pdu</a> from smpc_util.o(i.smpc_recv_id_addr_info_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[111]">smpc_recv_id_info_pdu</a> from smpc_util.o(i.smpc_recv_id_info_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[117]">smpc_recv_keypress_notification_pdu</a> from smpc_util.o(i.smpc_recv_keypress_notification_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[110]">smpc_recv_mst_id_pdu</a> from smpc_util.o(i.smpc_recv_mst_id_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[10c]">smpc_recv_pair_cfm_pdu</a> from smpc_util.o(i.smpc_recv_pair_cfm_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[10e]">smpc_recv_pair_fail_pdu</a> from smpc_util.o(i.smpc_recv_pair_fail_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[10d]">smpc_recv_pair_rand_pdu</a> from smpc_util.o(i.smpc_recv_pair_rand_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[10a]">smpc_recv_pair_req_pdu</a> from smpc_util.o(i.smpc_recv_pair_req_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[10b]">smpc_recv_pair_rsp_pdu</a> from smpc_util.o(i.smpc_recv_pair_rsp_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[115]">smpc_recv_public_key_pdu</a> from smpc_util.o(i.smpc_recv_public_key_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[114]">smpc_recv_sec_req_pdu</a> from smpc_util.o(i.smpc_recv_sec_req_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[113]">smpc_recv_sign_info_pdu</a> from smpc_util.o(i.smpc_recv_sign_info_pdu) referenced from smpc_util.o(.constdata)
 <LI><a href="#[30]">sp_gatt_msg_handler</a> from band.o(i.sp_gatt_msg_handler) referenced from band.o(i.sp_gatt_add_service)
 <LI><a href="#[134]">spim0_isr</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[135]">spim1_isr</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[136]">spis_isr</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[130]">timer0_isr</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[131]">timer1_isr</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[137]">uart0_isr</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[138]">uart1_isr</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
 <LI><a href="#[13d]">usb_isr</a> from boot_vectors.o(.text) referenced from boot_vectors.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3b9]"></a>rwip_sleep_mul_64</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_get_rc_clk (via Veneer)
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_slot_2_lpcycles_ram (via Veneer)
</UL>

<P><STRONG><a name="[124]"></a>Reset_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[23e]"></a>CPU_SR_Save</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_flash_opration (via Veneer)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_clear_isr_state (via Veneer)
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start (via Veneer)
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_init (via Veneer)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_lvd_protect_handle (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_read (via Veneer)
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_destroy (via Veneer)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_crc_cal (via Veneer)
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_flash_opration (via Veneer)
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_timer_handle (via Veneer)
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_erase (via Veneer)
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_write (via Veneer)
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_write_protect_imp (via Veneer)
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lld_cancel (via Veneer)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_data_send (via Veneer)
</UL>

<P><STRONG><a name="[23f]"></a>CPU_SR_Restore</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_flash_opration (via Veneer)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_clear_isr_state (via Veneer)
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start (via Veneer)
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_init (via Veneer)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_lvd_protect_handle (via Veneer)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_read (via Veneer)
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop (via Veneer)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_destroy (via Veneer)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_crc_cal (via Veneer)
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_flash_opration (via Veneer)
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_timer_handle (via Veneer)
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_erase (via Veneer)
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_write (via Veneer)
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_write_protect_imp (via Veneer)
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lld_cancel (via Veneer)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_data_send (via Veneer)
</UL>

<P><STRONG><a name="[23b]"></a>GLOBAL_INT_START</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init (via Veneer)
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proj_init (via Veneer)
</UL>

<P><STRONG><a name="[261]"></a>rand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler (via Veneer)
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cmd_handler (via Veneer)
</UL>

<P><STRONG><a name="[19b]"></a>srand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init (via Veneer)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[186]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_gatt_msg_handler (via Veneer)
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_name_default (via Veneer)
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_discovery_peer_svc (via Veneer)
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_name_set (via Veneer)
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_name_init (via Veneer)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_peripheral_init (via Veneer)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data (via Veneer)
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_read_data (via Veneer)
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler (via Veneer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_table_set_static_keys (via Veneer)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_table_get_static_keys (via Veneer)
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_table_param_set (via Veneer)
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_init (via Veneer)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_set_dev_config (via Veneer)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_post (via Veneer)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_write_peer_svc_to_flash (via Veneer)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_load_peer_svc_from_flash (via Veneer)
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db_ext (via Veneer)
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_value (via Veneer)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_notification_with_handle (via Veneer)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_req_with_handle (via Veneer)
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_client_uuid (via Veneer)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_init (via Veneer)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_response_data (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_per_adv_data (via Veneer)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_param (via Veneer)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_data (via Veneer)
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_name_get (via Veneer)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_unpack (via Veneer)
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_header_check (via Veneer)
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_uuid (via Veneer)
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_get_value (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_convert_to128 (via Veneer)
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lld_send (via Veneer)
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler (via Veneer)
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler (via Veneer)
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler (via Veneer)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_resolve_address (via Veneer)
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_store_info (via Veneer)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_success_ind_func (via Veneer)
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_req_ind_func (via Veneer)
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check (via Veneer)
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_pack (via Veneer)
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_dbg_pdu_pack (via Veneer)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cmd_handler (via Veneer)
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_svc_changed_cmd_handler (via Veneer)
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_sdp_svc_disc_cmd_handler (via Veneer)
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_cmd_handler (via Veneer)
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_disc_svc_incl_ind_handler (via Veneer)
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_disc_cmd_handler (via Veneer)
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_disc_char_ind_handler (via Veneer)
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_disc_char_desc_ind_handler (via Veneer)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler (via Veneer)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_sign_ind_handler (via Veneer)
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_event (via Veneer)
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_signed (via Veneer)
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_update_elmt (via Veneer)
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_req (via Veneer)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req (via Veneer)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_type_req (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_grp_type_req (via Veneer)
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_blob_req (via Veneer)
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_prepare_write_req (via Veneer)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_info_req (via Veneer)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_execute_write_req (via Veneer)
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_svc_init (via Veneer)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f6_init (via Veneer)
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f5_init (via Veneer)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_use_enc_block_cmd (via Veneer)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_start_enc_cmd (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_req_ind (via Veneer)
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_ind (via Veneer)
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_ltk_req_rsp (via Veneer)
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_gen_dh_key_cmd (via Veneer)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt (via Veneer)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_l (via Veneer)
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_e1 (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_ci (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_local_p256_public_key_cmp_evt_handler (via Veneer)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_generate_dhkey_cmp_evt_handler (via Veneer)
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_irk_cmd_handler (via Veneer)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler (via Veneer)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_pub_key_cmd_handler (via Veneer)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_gen_dh_key_cmd_handler (via Veneer)
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_peer_att_info_ind_handler (via Veneer)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_cont (via Veneer)
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_tk_exch (via Veneer)
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_oob_exch (via Veneer)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_csrk_exch (via Veneer)
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_dh_key_check_complete (via Veneer)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont (via Veneer)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler (via Veneer)
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_ind_handler (via Veneer)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_cfm_handler (via Veneer)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_read_ind (via Veneer)
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_rsp_handler (via Veneer)
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_mult_rsp_handler (via Veneer)
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_type_rsp_handler (via Veneer)
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_grp_type_rsp_handler (via Veneer)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_hdl_val_ntf_ind_handler (via Veneer)
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_find_info_rsp_handler (via Veneer)
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_find_by_type_rsp_handler (via Veneer)
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_public_key_pdu (via Veneer)
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rand_pdu (via Veneer)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_cfm_pdu (via Veneer)
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_id_info_pdu (via Veneer)
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_enc_info_pdu (via Veneer)
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_dhkey_check_pdu (via Veneer)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_construct_sign_info_pdu (via Veneer)
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_construct_pair_rand_pdu (via Veneer)
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_construct_pair_cfm_pdu (via Veneer)
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_construct_id_info_pdu (via Veneer)
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_construct_enc_info_pdu (via Veneer)
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_construct_dhkey_check_pdu (via Veneer)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_aes_cmac_continue (via Veneer)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_aes_cmac_complete (via Veneer)
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_g2_init (via Veneer)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f4_Init (via Veneer)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_resolv_op_cont (via Veneer)
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_encrypt_rsp (via Veneer)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_store_fragment (via Veneer)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_adv_report_ind (via Veneer)
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_send_adv_report_ind (via Veneer)
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_add_next_entry (via Veneer)
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_start (via Veneer)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_per_adv_data_cmd (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_scan_rsp_data_cmd (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_adv_data_cmd (via Veneer)
</UL>

<P><STRONG><a name="[1fe]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_discovery_peer_svc (via Veneer)
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_profile_task_add (via Veneer)
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_get_value (via Veneer)
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler (via Veneer)
</UL>

<P><STRONG><a name="[31e]"></a>__aeabi_memset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_table_memmory_init (via Veneer)
</UL>

<P><STRONG><a name="[22c]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_init (via Veneer)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_set_dev_config (via Veneer)
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_zalloc (via Veneer)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_load_peer_svc_from_flash (via Veneer)
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clear_remote_svc (via Veneer)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_init (via Veneer)
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler (via Veneer)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_read_info_from_flash (via Veneer)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_l (via Veneer)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_command (via Veneer)
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_confirm_gen_rand (via Veneer)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_aes_cmac_continue (via Veneer)
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_add_to_filter (via Veneer)
</UL>

<P><STRONG><a name="[192]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_flash_data (via Veneer)
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_name_init (via Veneer)
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_configure (via Veneer)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data (via Veneer)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init_imp_for_hci (via Veneer)
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init_imp (via Veneer)
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_client_uuid (via Veneer)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp (via Veneer)
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_create (via Veneer)
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_con_create (via Veneer)
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_alloc (via Veneer)
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_start (via Veneer)
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_req_handler (via Veneer)
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_check_data_sanity (via Veneer)
</UL>

<P><STRONG><a name="[1ec]"></a>memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAppID (via Veneer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_table_set_static_keys (via Veneer)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_table_get_static_keys (via Veneer)
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_uuid_comp (via Veneer)
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_con_create (via Veneer)
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_check_ediv_rand (via Veneer)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_write_info_to_flash (via Veneer)
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_addr_resolve_cb (via Veneer)
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check (via Veneer)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_by_type_req (via Veneer)
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_adv_report_evt_handler (via Veneer)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_cont (via Veneer)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont (via Veneer)
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_prep_wr_rsp_handler (via Veneer)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_resolv_op_cont (via Veneer)
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_filter_packet (via Veneer)
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_add_to_filter (via Veneer)
</UL>

<P><STRONG><a name="[449]"></a>aes_ccm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[44b]"></a>aes_cmac</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[2e5]"></a>aes_encrypt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_encrypt_req (via Veneer)
</UL>

<P><STRONG><a name="[459]"></a>aes_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[44d]"></a>aes_k1</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[44f]"></a>aes_k2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[451]"></a>aes_k3</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[453]"></a>aes_k4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[2e6]"></a>aes_rand</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_rand_req (via Veneer)
</UL>

<P><STRONG><a name="[41e]"></a>aes_result_handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[456]"></a>aes_s1</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[193]"></a>app_boot_get_storage_type</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data (via Veneer)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[19e]"></a>app_boot_load_data</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data (via Veneer)
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_read_data (via Veneer)
</UL>

<P><STRONG><a name="[32c]"></a>ble_util_buf_acl_tx_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lld_send (via Veneer)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_data_send (via Veneer)
</UL>

<P><STRONG><a name="[32f]"></a>ble_util_buf_acl_tx_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lld_evt_end_isr (via Veneer)
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lld_cancel (via Veneer)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_data_send (via Veneer)
</UL>

<P><STRONG><a name="[236]"></a>ble_util_buf_init_env</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_configure (via Veneer)
</UL>

<P><STRONG><a name="[313]"></a>ble_util_buf_rx_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_acl_data_handler (via Veneer)
</UL>

<P><STRONG><a name="[197]"></a>co_delay_100us</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_before_sleep_imp (via Veneer)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_main (via Veneer)
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_lvd_protect_handle (via Veneer)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_protect_disable (via Veneer)
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_protect_enable (via Veneer)
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_enable_internal_flash_q_read (via Veneer)
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wait_wel_clear (via Veneer)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[34a]"></a>co_delay_10us</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_sub_init (via Veneer)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_clear_isr_state (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_osc_doubler_calibration (via Veneer)
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_start (via Veneer)
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_restart (via Veneer)
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_erase (via Veneer)
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_write (via Veneer)
</UL>

<P><STRONG><a name="[308]"></a>co_list_extract</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_reg_to_peer_evt_cmd_handler (via Veneer)
</UL>

<P><STRONG><a name="[441]"></a>co_list_find</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[1d8]"></a>co_list_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init_imp_for_hci (via Veneer)
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init_imp (via Veneer)
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_create (via Veneer)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_create (via Veneer)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_read_ind (via Veneer)
</UL>

<P><STRONG><a name="[223]"></a>co_list_insert_before</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_store_prep_data (via Veneer)
</UL>

<P><STRONG><a name="[1d5]"></a>co_list_pop_front</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_exc_activity_cmp (via Veneer)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_process_pdu (via Veneer)
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_rsp_data (via Veneer)
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_prep_data (via Veneer)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cleanup (via Veneer)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_operation_cleanup (via Veneer)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_data_send (via Veneer)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_cleanup (via Veneer)
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cfm_handler (via Veneer)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_cfm_handler (via Veneer)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler (via Veneer)
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_prepare_write_req (via Veneer)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_execute_write_req (via Veneer)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_clear_fragments (via Veneer)
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_rsp_handler (via Veneer)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_adv_report_ind (via Veneer)
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_clear_fragments (via Veneer)
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_send_adv_report_ind (via Veneer)
</UL>

<P><STRONG><a name="[1d7]"></a>co_list_push_back</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd (via Veneer)
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send_cmd_handler (via Veneer)
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_dbg_pdu_send_cmd_handler (via Veneer)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_reg_to_peer_evt_cmd_handler (via Veneer)
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_disc_svc_ind_handler (via Veneer)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler (via Veneer)
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_store_prep_data (via Veneer)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req (via Veneer)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_type_req (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_grp_type_req (via Veneer)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_info_req (via Veneer)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_by_type_req (via Veneer)
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_per_adv_report_evt_handler (via Veneer)
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_rsp_handler (via Veneer)
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_type_rsp_handler (via Veneer)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_store_fragment (via Veneer)
</UL>

<P><STRONG><a name="[221]"></a>co_list_push_front</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler (via Veneer)
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_prepare_write_req (via Veneer)
</UL>

<P><STRONG><a name="[215]"></a>co_list_size</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req (via Veneer)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_type_req (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_grp_type_req (via Veneer)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_by_type_req (via Veneer)
</UL>

<P><STRONG><a name="[155]"></a>co_printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_gatt_msg_handler (via Veneer)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on (via Veneer)
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_off (via Veneer)
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock_on (via Veneer)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock_off (via Veneer)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_string (via Veneer)
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMotorData (via Veneer)
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAppID (via Veneer)
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_flash_data (via Veneer)
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_gatt_add_service (via Veneer)
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_reg (via Veneer)
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_name_init (via Veneer)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appID_list_init (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANCS_gatt_add_client (via Veneer)
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start (via Veneer)
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_task (via Veneer)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_sleep_imp (via Veneer)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_main (via Veneer)
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_timer_handler (via Veneer)
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_client (via Veneer)
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANCS_recv_data_src (via Veneer)
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_gatt_msg_handler (via Veneer)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_stop (via Veneer)
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_start (via Veneer)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_crc_cal (via Veneer)
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_ota_cb (via Veneer)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data (via Veneer)
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_timer_handle (via Veneer)
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_insert (via Veneer)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_post (via Veneer)
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_client_uuid (via Veneer)
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_store_peer_prf_info (via Veneer)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_init (via Veneer)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_init (via Veneer)
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler (via Veneer)
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_store_info (via Veneer)
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_get_info (via Veneer)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mesh_set_runtime (via Veneer)
</UL>

<P><STRONG><a name="[1ae]"></a>crc32</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data (via Veneer)
</UL>

<P><STRONG><a name="[235]"></a>em_ble_generate_base_address_table</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_configure (via Veneer)
</UL>

<P><STRONG><a name="[172]"></a>flash_read</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_flash_data (via Veneer)
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_name_init (via Veneer)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appID_list_init (via Veneer)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_crc_cal (via Veneer)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data (via Veneer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_table_set_static_keys (via Veneer)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_write_peer_svc_to_flash (via Veneer)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_load_peer_svc_from_flash (via Veneer)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_write_info_to_flash (via Veneer)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_read_info_from_flash (via Veneer)
</UL>

<P><STRONG><a name="[194]"></a>flash_read_status</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_flash_opration (via Veneer)
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_write_protect_imp (via Veneer)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[3bf]"></a>flash_set_read_quad</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_enable_internal_flash_q_read (via Veneer)
</UL>

<P><STRONG><a name="[3be]"></a>flash_wait_wip_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_enable_internal_flash_q_read (via Veneer)
</UL>

<P><STRONG><a name="[3ab]"></a>flash_write_status_volatile</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_flash_opration (via Veneer)
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_write_protect_imp (via Veneer)
</UL>

<P><STRONG><a name="[5]"></a>fputc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 2]<UL><LI> printfa.o(i.__0vprintf)
<LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[2b]"></a>fputc_uart0</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> co_log.o(i.log_init)
</UL>
<P><STRONG><a name="[3c5]"></a>fr_uart_enableFifos</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init (via Veneer)
</UL>

<P><STRONG><a name="[3a4]"></a>fr_uart_enableIrq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_sleep_imp (via Veneer)
</UL>

<P><STRONG><a name="[3c2]"></a>fr_uart_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init (via Veneer)
</UL>

<P><STRONG><a name="[3c3]"></a>fr_uart_setBaudrate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init (via Veneer)
</UL>

<P><STRONG><a name="[3c4]"></a>fr_uart_setLineControl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init (via Veneer)
</UL>

<P><STRONG><a name="[2c1]"></a>hci_basic_cmd_send_2_controller</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_set_cmd_handler (via Veneer)
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_rmv_cmd_handle (via Veneer)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_pub_key_cmd_handler (via Veneer)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_dev_info_cmd_handler (via Veneer)
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_stop (via Veneer)
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_stop (via Veneer)
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_setup_continue (via Veneer)
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_reset_continue (via Veneer)
</UL>

<P><STRONG><a name="[26e]"></a>hci_send_2_controller</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_data_send (via Veneer)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_start_enc_cmd (via Veneer)
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_ltk_req_rsp (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_list_handler (via Veneer)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_channel_map_cmd_handler (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_ral_addr_cmd_handler (via Veneer)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_dev_info_cmd_handler (via Veneer)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_gen_dh_key_cmd_handler (via Veneer)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_fsm (via Veneer)
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_pref_slave_latency_cmd_handler (via Veneer)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_phy_cmd_handler (via Veneer)
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_le_pkt_size_handler (via Veneer)
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_le_ping_to_handler (via Veneer)
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cmd_handler (via Veneer)
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cfm_handler (via Veneer)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_info_cmd_handler (via Veneer)
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_cmd_handler (via Veneer)
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_hci_le_set_ext_scan_param_cmd (via Veneer)
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_hci_le_set_ext_scan_en_cmd (via Veneer)
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_stop (via Veneer)
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_start (via Veneer)
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_rmv_next_entry (via Veneer)
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_add_next_entry (via Veneer)
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_send_hci_le_ext_create_con_cmd (via Veneer)
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_setup_continue (via Veneer)
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_reset_continue (via Veneer)
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_creating_handler (via Veneer)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_per_adv_en_cmd (via Veneer)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_per_adv_data_cmd (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_scan_rsp_data_cmd (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_adv_param_cmd (via Veneer)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_adv_en_cmd (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_adv_data_cmd (via Veneer)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_rmv_adv_set_cmd (via Veneer)
</UL>

<P><STRONG><a name="[198]"></a>intc_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[2ff]"></a>ke_check_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler (via Veneer)
</UL>

<P><STRONG><a name="[337]"></a>ke_event_callback_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_init (via Veneer)
</UL>

<P><STRONG><a name="[338]"></a>ke_event_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_init (via Veneer)
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler (via Veneer)
</UL>

<P><STRONG><a name="[31b]"></a>ke_event_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_tx_status (via Veneer)
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler (via Veneer)
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler (via Veneer)
</UL>

<P><STRONG><a name="[1c7]"></a>ke_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_free (via Veneer)
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_exc_activity_cmp (via Veneer)
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp (via Veneer)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_write_peer_svc_to_flash (via Veneer)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_load_peer_svc_from_flash (via Veneer)
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db_ext (via Veneer)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db (via Veneer)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_init (via Veneer)
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clr_peer_svc (via Veneer)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_response_data (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_per_adv_data (via Veneer)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_param (via Veneer)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_data (via Veneer)
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_rsp_data (via Veneer)
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_prep_data (via Veneer)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cleanup (via Veneer)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_operation_cleanup (via Veneer)
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_destroy (via Veneer)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_operation_cleanup (via Veneer)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cleanup (via Veneer)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_write_info_to_flash (via Veneer)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_cleanup (via Veneer)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_reg_to_peer_evt_cmd_handler (via Veneer)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_info_req (via Veneer)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_execute_write_req (via Veneer)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_actv_clean (via Veneer)
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_free (via Veneer)
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end (via Veneer)
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont (via Veneer)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_g2_complete (via Veneer)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f6_complete (via Veneer)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f5_complete (via Veneer)
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f4_complete (via Veneer)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_adv_report_ind (via Veneer)
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_clear_fragments (via Veneer)
</UL>

<P><STRONG><a name="[4db]"></a>ke_get_mem_usage</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[1d6]"></a>ke_malloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_malloc (via Veneer)
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_zalloc (via Veneer)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_write_peer_svc_to_flash (via Veneer)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_load_peer_svc_from_flash (via Veneer)
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;from_task_func_to_msg_handle (via Veneer)
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db_ext (via Veneer)
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db (via Veneer)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_init (via Veneer)
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_init (via Veneer)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_response_data (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_per_adv_data (via Veneer)
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_param (via Veneer)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_data (via Veneer)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd (via Veneer)
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_create (via Veneer)
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_add_service (via Veneer)
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_con_create (via Veneer)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_write_info_to_flash (via Veneer)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_create (via Veneer)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_reg_to_peer_evt_cmd_handler (via Veneer)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req (via Veneer)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_type_req (via Veneer)
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_grp_type_req (via Veneer)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_info_req (via Veneer)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_by_type_req (via Veneer)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f6_init (via Veneer)
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f5_init (via Veneer)
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_alloc (via Veneer)
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_command (via Veneer)
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_start (via Veneer)
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_req_handler (via Veneer)
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_g2_init (via Veneer)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f4_Init (via Veneer)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_aes_cmac_init (via Veneer)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_store_fragment (via Veneer)
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_add_to_filter (via Veneer)
</UL>

<P><STRONG><a name="[31f]"></a>ke_mem_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_table_memmory_init (via Veneer)
</UL>

<P><STRONG><a name="[1d0]"></a>ke_msg_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_discovery_peer_svc (via Veneer)
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_conn_param_update (via Veneer)
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_req (via Veneer)
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init (via Veneer)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_mtu_exchange_req (via Veneer)
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler (via Veneer)
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler (via Veneer)
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler (via Veneer)
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler (via Veneer)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_set_dev_config (via Veneer)
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_delete_act (via Veneer)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_scan_act (via Veneer)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_per_adv_act (via Veneer)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_legacy_adv_act (via Veneer)
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_conn_act (via Veneer)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_aux_adv_act (via Veneer)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_post (via Veneer)
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_profile_task_add (via Veneer)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_notification_with_handle (via Veneer)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_req_with_handle (via Veneer)
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_regist_peer_prf_info (via Veneer)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp (via Veneer)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_send_security_req (via Veneer)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising (via Veneer)
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_conn (via Veneer)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising (via Veneer)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_response_data (via Veneer)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_per_adv_data (via Veneer)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_data (via Veneer)
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_send_cmp_evt (via Veneer)
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_rx_init (via Veneer)
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_header_check (via Veneer)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc (via Veneer)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_set_mtu (via Veneer)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_error_evt (via Veneer)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt (via Veneer)
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_error_evt (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt (via Veneer)
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_error_evt (via Veneer)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_disconect_ind (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt (via Veneer)
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_con_create (via Veneer)
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler (via Veneer)
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler (via Veneer)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_resolve_address (via Veneer)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mesh_set_runtime (via Veneer)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_send_cfm (via Veneer)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_data_send (via Veneer)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler (via Veneer)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cmd_handler (via Veneer)
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_svc_changed_cmd_handler (via Veneer)
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_sdp_svc_disc_cmd_handler (via Veneer)
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler (via Veneer)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler (via Veneer)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler (via Veneer)
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_signed (via Veneer)
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_update_elmt (via Veneer)
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_prepare_write_req (via Veneer)
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_value (via Veneer)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_execute_write_req (via Veneer)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_use_enc_block_cmd (via Veneer)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_start_enc_cmd (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_req_ind (via Veneer)
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_ind (via Veneer)
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_ltk_req_rsp (via Veneer)
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_gen_dh_key_cmd (via Veneer)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt (via Veneer)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_rand (via Veneer)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_l (via Veneer)
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_e1 (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_ci (via Veneer)
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_check_repeated_attempts (via Veneer)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_test_end_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_local_ver_info_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_scan_req_rcvd_evt_handler (via Veneer)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_max_adv_data_len_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_tx_pwr_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_suggted_dft_data_len_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_rf_path_comp_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_ral_addr_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_nb_supp_adv_sets_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_max_data_len_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_local_p256_public_key_cmp_evt_handler (via Veneer)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_adv_chnl_tx_pw_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_per_adv_sync_est_evt_handler (via Veneer)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_generate_dhkey_cmp_evt_handler (via Veneer)
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_list_handler (via Veneer)
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_channel_map_cmd_handler (via Veneer)
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_task_add_cmd_handler (via Veneer)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_ral_addr_cmd_handler (via Veneer)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_pub_key_cmd_handler (via Veneer)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_dev_info_cmd_handler (via Veneer)
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_gen_dh_key_cmd_handler (via Veneer)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_auto_conn_to_ind_handler (via Veneer)
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_peer_att_info_ind_handler (via Veneer)
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler (via Veneer)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_unknown_task_msg_handler (via Veneer)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_renew_to_ind_handler (via Veneer)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_send_dev_bdaddr_ind (via Veneer)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_fsm (via Veneer)
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind (via Veneer)
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_created (via Veneer)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_send_stopped_ind (via Veneer)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_cont (via Veneer)
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_encrypt_start_handler (via Veneer)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler (via Veneer)
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler (via Veneer)
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_ind_handler (via Veneer)
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler (via Veneer)
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_conn_param_to_ind_handler (via Veneer)
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_pref_slave_latency_cmd_handler (via Veneer)
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_phy_cmd_handler (via Veneer)
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_le_pkt_size_handler (via Veneer)
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_le_ping_to_handler (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_cfm_handler (via Veneer)
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cmd_handler (via Veneer)
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cfm_handler (via Veneer)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_info_cmd_handler (via Veneer)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_cfm_handler (via Veneer)
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_cmd_handler (via Veneer)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_read_ind (via Veneer)
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_mult_rsp_handler (via Veneer)
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_type_rsp_handler (via Veneer)
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_grp_type_rsp_handler (via Veneer)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_hdl_val_ntf_ind_handler (via Veneer)
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_find_info_rsp_handler (via Veneer)
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_find_by_type_rsp_handler (via Veneer)
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_sec_req_pdu (via Veneer)
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_req_pdu (via Veneer)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_key_press_notification_ind (via Veneer)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_resolv_op_cont (via Veneer)
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_rand_rsp (via Veneer)
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_encrypt_rsp (via Veneer)
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_hci_le_set_ext_scan_param_cmd (via Veneer)
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_hci_le_set_ext_scan_en_cmd (via Veneer)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_adv_report_ind (via Veneer)
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_stop (via Veneer)
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_start (via Veneer)
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_send_adv_report_ind (via Veneer)
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_send_list_size_ind (via Veneer)
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_rmv_next_entry (via Veneer)
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_add_next_entry (via Veneer)
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_send_hci_le_ext_create_con_cmd (via Veneer)
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_setup_continue (via Veneer)
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_reset_continue (via Veneer)
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_creating_handler (via Veneer)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_per_adv_en_cmd (via Veneer)
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_per_adv_data_cmd (via Veneer)
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_scan_rsp_data_cmd (via Veneer)
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_adv_param_cmd (via Veneer)
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_adv_en_cmd (via Veneer)
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_adv_data_cmd (via Veneer)
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_rmv_adv_set_cmd (via Veneer)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_conn_param_upd_req_handler (via Veneer)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_rssi_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_rem_ver_info_cmp_evt_handler (via Veneer)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_chnl_map_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_auth_payl_to_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rem_con_param_req_evt_handler (via Veneer)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_rem_feats_cmp_evt_handler (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_phy_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_phy_upd_cmp_evt_handler (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler (via Veneer)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_data_len_chg_evt_handler (via Veneer)
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_update_cmp_evt_handler (via Veneer)
</UL>

<P><STRONG><a name="[e9]"></a>ke_msg_discard</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[285]"></a>ke_msg_forward</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_reschedule_operation (via Veneer)
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_reschedule_operation (via Veneer)
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_reject_handler (via Veneer)
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_conn_param_upd_resp_handler (via Veneer)
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_conn_param_upd_req_handler (via Veneer)
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_dev_bdaddr_ind_handler (via Veneer)
</UL>

<P><STRONG><a name="[1f6]"></a>ke_msg_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop (via Veneer)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp (via Veneer)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_process_pdu (via Veneer)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_read_cache (via Veneer)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cleanup (via Veneer)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_operation_cleanup (via Veneer)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_operation_cleanup (via Veneer)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_operation_cleanup (via Veneer)
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler (via Veneer)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_op_complete (via Veneer)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_data_send (via Veneer)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_cleanup (via Veneer)
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cfm_handler (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_cfm_handler (via Veneer)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_cfm_handler (via Veneer)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler (via Veneer)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_clear_fragments (via Veneer)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_read_ind (via Veneer)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_adv_report_ind (via Veneer)
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_send_adv_report_ind (via Veneer)
</UL>

<P><STRONG><a name="[27c]"></a>ke_msg_in_queue</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_operation_cleanup (via Veneer)
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_operation_cleanup (via Veneer)
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_operation_cleanup (via Veneer)
</UL>

<P><STRONG><a name="[1d1]"></a>ke_msg_send</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_discovery_peer_svc (via Veneer)
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_conn_param_update (via Veneer)
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_req (via Veneer)
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init (via Veneer)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_mtu_exchange_req (via Veneer)
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler (via Veneer)
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler (via Veneer)
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_req_ind_handler (via Veneer)
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler (via Veneer)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_set_dev_config (via Veneer)
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_exc_activity_cmp (via Veneer)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_scan_act (via Veneer)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_per_adv_act (via Veneer)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_legacy_adv_act (via Veneer)
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_conn_act (via Veneer)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_aux_adv_act (via Veneer)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_post (via Veneer)
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_profile_task_add (via Veneer)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_notification_with_handle (via Veneer)
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_req_with_handle (via Veneer)
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_regist_peer_prf_info (via Veneer)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp (via Veneer)
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_send_security_req (via Veneer)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd (via Veneer)
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_send_cmp_evt (via Veneer)
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_rx_init (via Veneer)
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_header_check (via Veneer)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send (via Veneer)
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_acl_data_handler (via Veneer)
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_set_mtu (via Veneer)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_error_evt (via Veneer)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt (via Veneer)
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_error_evt (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt (via Veneer)
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_error_evt (via Veneer)
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_disconect_ind (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt (via Veneer)
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_con_create (via Veneer)
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler (via Veneer)
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler (via Veneer)
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_resolve_address (via Veneer)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mesh_set_runtime (via Veneer)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_send_cfm (via Veneer)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler (via Veneer)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cmd_handler (via Veneer)
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_svc_changed_cmd_handler (via Veneer)
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_sdp_svc_disc_cmd_handler (via Veneer)
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler (via Veneer)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler (via Veneer)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler (via Veneer)
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_signed (via Veneer)
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_update_elmt (via Veneer)
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_prepare_write_req (via Veneer)
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_value (via Veneer)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_execute_write_req (via Veneer)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_use_enc_block_cmd (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_req_ind (via Veneer)
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_ind (via Veneer)
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_gen_dh_key_cmd (via Veneer)
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt (via Veneer)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_rand (via Veneer)
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_l (via Veneer)
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_e1 (via Veneer)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_ci (via Veneer)
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_check_repeated_attempts (via Veneer)
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_test_end_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_local_ver_info_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_scan_req_rcvd_evt_handler (via Veneer)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_max_adv_data_len_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_tx_pwr_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_suggted_dft_data_len_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_rf_path_comp_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_ral_addr_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_nb_supp_adv_sets_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_max_data_len_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_local_p256_public_key_cmp_evt_handler (via Veneer)
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_adv_chnl_tx_pw_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_per_adv_sync_est_evt_handler (via Veneer)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_generate_dhkey_cmp_evt_handler (via Veneer)
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_task_add_cmd_handler (via Veneer)
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_pub_key_cmd_handler (via Veneer)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_dev_info_cmd_handler (via Veneer)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_auto_conn_to_ind_handler (via Veneer)
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_peer_att_info_ind_handler (via Veneer)
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler (via Veneer)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_unknown_task_msg_handler (via Veneer)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_renew_to_ind_handler (via Veneer)
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_send_dev_bdaddr_ind (via Veneer)
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_fsm (via Veneer)
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind (via Veneer)
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_created (via Veneer)
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_send_stopped_ind (via Veneer)
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_cont (via Veneer)
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_encrypt_start_handler (via Veneer)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler (via Veneer)
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler (via Veneer)
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_ind_handler (via Veneer)
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler (via Veneer)
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_conn_param_to_ind_handler (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_cfm_handler (via Veneer)
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cmd_handler (via Veneer)
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_info_cmd_handler (via Veneer)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_cfm_handler (via Veneer)
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_read_ind (via Veneer)
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_rsp_handler (via Veneer)
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_mult_rsp_handler (via Veneer)
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_type_rsp_handler (via Veneer)
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_grp_type_rsp_handler (via Veneer)
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_hdl_val_ntf_ind_handler (via Veneer)
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_find_info_rsp_handler (via Veneer)
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_find_by_type_rsp_handler (via Veneer)
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_sec_req_pdu (via Veneer)
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_req_pdu (via Veneer)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_key_press_notification_ind (via Veneer)
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_resolv_op_cont (via Veneer)
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_rand_rsp (via Veneer)
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_encrypt_rsp (via Veneer)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_adv_report_ind (via Veneer)
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_send_adv_report_ind (via Veneer)
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_send_list_size_ind (via Veneer)
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_conn_param_upd_req_handler (via Veneer)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_rssi_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_rem_ver_info_cmp_evt_handler (via Veneer)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_chnl_map_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_auth_payl_to_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rem_con_param_req_evt_handler (via Veneer)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_rem_feats_cmp_evt_handler (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_phy_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_phy_upd_cmp_evt_handler (via Veneer)
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler (via Veneer)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_data_len_chg_evt_handler (via Veneer)
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_update_cmp_evt_handler (via Veneer)
</UL>

<P><STRONG><a name="[30b]"></a>ke_msg_send_basic</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_timeout_handler (via Veneer)
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_auth_payl_to_exp_evt_handler (via Veneer)
</UL>

<P><STRONG><a name="[278]"></a>ke_msg_src_id_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_reschedule_operation (via Veneer)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_requester (via Veneer)
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op (via Veneer)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester (via Veneer)
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_reschedule_operation (via Veneer)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_requester (via Veneer)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_process_op (via Veneer)
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_process_op (via Veneer)
</UL>

<P><STRONG><a name="[433]"></a>ke_queue_extract</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[21e]"></a>ke_state_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler (via Veneer)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_update_state (via Veneer)
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send_cmd_handler (via Veneer)
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler (via Veneer)
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_lecb_sdu_send_cmd_handler (via Veneer)
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_dbg_pdu_send_cmd_handler (via Veneer)
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_acl_data_handler (via Veneer)
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_update_state (via Veneer)
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_update_state (via Veneer)
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op (via Veneer)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_state (via Veneer)
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_con_create (via Veneer)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cleanup (via Veneer)
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler (via Veneer)
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_cmp_evt_handler (via Veneer)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler (via Veneer)
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cfm_handler (via Veneer)
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_timeout_handler (via Veneer)
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_svc_changed_cmd_handler (via Veneer)
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_cfm_handler (via Veneer)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_process_op (via Veneer)
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_event_cfm_handler (via Veneer)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_default_msg_handler (via Veneer)
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler (via Veneer)
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_cfm_handler (via Veneer)
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_sign_ind_handler (via Veneer)
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler (via Veneer)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler (via Veneer)
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_local_ver_info_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_max_adv_data_len_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_wlst_size_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_tx_pwr_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_suggted_dft_data_len_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_rf_path_comp_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_ral_size_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_ral_addr_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_pal_size_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_nb_supp_adv_sets_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_max_data_len_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_generate_dhkey_cmp_evt_handler (via Veneer)
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_gen_dhkey_stat_evt_handler (via Veneer)
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_basic_cmd_cmp_evt_rl_cfg_handler (via Veneer)
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_enh_con_cmp_evt_handler (via Veneer)
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_process_op (via Veneer)
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler (via Veneer)
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_cmp_evt_handler (via Veneer)
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler (via Veneer)
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler (via Veneer)
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_ind_handler (via Veneer)
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler (via Veneer)
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler (via Veneer)
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_use_enc_block_ind_handler (via Veneer)
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_gen_rand_nb_ind_handler (via Veneer)
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler (via Veneer)
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_conn_param_to_ind_handler (via Veneer)
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_smp_timeout_timer_ind_handler (via Veneer)
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_smp_rep_attempts_timer_handler (via Veneer)
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_cfm_handler (via Veneer)
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cfm_handler (via Veneer)
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_key_press_notification_cmd_handler (via Veneer)
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_cfm_handler (via Veneer)
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_gen_dh_key_ind_handler (via Veneer)
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_cfm_handler (via Veneer)
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_cmd_handler (via Veneer)
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_cfm_handler (via Veneer)
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_cfm_handler (via Veneer)
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_rand_rsp (via Veneer)
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_encrypt_rsp (via Veneer)
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_wr_auth_payl_to_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_vs_set_pref_slave_latency_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_rssi_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_rem_ver_info_cmp_evt_handler (via Veneer)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_chnl_map_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_auth_payl_to_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_start_enc_stat_evt_handler (via Veneer)
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_data_len_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rem_con_param_req_evt_handler (via Veneer)
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_rem_feats_cmp_evt_handler (via Veneer)
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_phy_cmd_cmp_evt_handler (via Veneer)
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_phy_upd_cmp_evt_handler (via Veneer)
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_data_len_chg_evt_handler (via Veneer)
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_update_cmp_evt_handler (via Veneer)
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler (via Veneer)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_cmd_stat_event_handler (via Veneer)
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_auth_payl_to_exp_evt_handler (via Veneer)
</UL>

<P><STRONG><a name="[179]"></a>ke_state_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler (via Veneer)
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler (via Veneer)
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_created_ind_func (via Veneer)
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_add_svc (via Veneer)
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init_imp_for_hci (via Veneer)
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init_imp (via Veneer)
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_profile_task_add (via Veneer)
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_servcie_added (via Veneer)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_update_state (via Veneer)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init (via Veneer)
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_update_state (via Veneer)
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_create (via Veneer)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cleanup (via Veneer)
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_update_state (via Veneer)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init (via Veneer)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_state (via Veneer)
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_con_create (via Veneer)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cleanup (via Veneer)
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_send_cfm (via Veneer)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_create (via Veneer)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_cleanup (via Veneer)
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_cmd_handler (via Veneer)
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_reset_continue (via Veneer)
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_cmd_stat_event_handler (via Veneer)
</UL>

<P><STRONG><a name="[419]"></a>ke_task_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[1d9]"></a>ke_task_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init_imp_for_hci (via Veneer)
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init_imp (via Veneer)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init (via Veneer)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_init (via Veneer)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init (via Veneer)
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init (via Veneer)
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_init (via Veneer)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_init (via Veneer)
</UL>

<P><STRONG><a name="[35f]"></a>ke_task_msg_flush</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init (via Veneer)
</UL>

<P><STRONG><a name="[45e]"></a>ke_time</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[27a]"></a>ke_timer_active</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_set_rand_addr (via Veneer)
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_key_press_notification_cmd_handler (via Veneer)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_keypress_notification_pdu (via Veneer)
</UL>

<P><STRONG><a name="[1eb]"></a>ke_timer_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop (via Veneer)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cleanup (via Veneer)
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_init (via Veneer)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_clear_timeout_timer (via Veneer)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cleanup (via Veneer)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_cleanup (via Veneer)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_l2cc_pdu_recv_handler (via Veneer)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler (via Veneer)
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_launch_rep_att_timer (via Veneer)
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_init_handler (via Veneer)
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind (via Veneer)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send (via Veneer)
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_stop (via Veneer)
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_conn_param_upd_resp_handler (via Veneer)
</UL>

<P><STRONG><a name="[1f2]"></a>ke_timer_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start (via Veneer)
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_timer_handle (via Veneer)
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_att_req (via Veneer)
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_event (via Veneer)
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_launch_rep_att_timer (via Veneer)
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_renew_next_addr (via Veneer)
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_set_rand_addr (via Veneer)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send (via Veneer)
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cmd_handler (via Veneer)
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_key_press_notification_cmd_handler (via Veneer)
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_keypress_notification_pdu (via Veneer)
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_start (via Veneer)
</UL>

<P><STRONG><a name="[4ba]"></a>lld_con_event_counter_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[3cf]"></a>lld_read_clock</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lld_receive (via Veneer)
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lld_send (via Veneer)
</UL>

<P><STRONG><a name="[3d2]"></a>lld_rxdesc_check</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lld_rx_isr (via Veneer)
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lld_cancel (via Veneer)
</UL>

<P><STRONG><a name="[4d2]"></a>lld_test_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[4d4]"></a>lld_test_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[3d7]"></a>llm_activity_free_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lld_init (via Veneer)
</UL>

<P><STRONG><a name="[3d4]"></a>llm_activity_free_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lld_evt_end_isr (via Veneer)
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lld_cancel (via Veneer)
</UL>

<P><STRONG><a name="[237]"></a>llm_init_act_info_buf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_configure (via Veneer)
</UL>

<P><STRONG><a name="[3b6]"></a>low_power_restore</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_enter_sleep (via Veneer)
</UL>

<P><STRONG><a name="[3b5]"></a>low_power_save</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_enter_sleep (via Veneer)
</UL>

<P><STRONG><a name="[1b0]"></a>platform_reset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data (via Veneer)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_reset_cmd_handler (via Veneer)
</UL>

<P><STRONG><a name="[3b8]"></a>qspi_stig_cmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_read (via Veneer)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_protect_disable (via Veneer)
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_protect_enable (via Veneer)
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_enable_internal_flash_q_read (via Veneer)
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_erase (via Veneer)
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_write (via Veneer)
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wait_wel_clear (via Veneer)
</UL>

<P><STRONG><a name="[3c9]"></a>rf_em_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_app (via Veneer)
</UL>

<P><STRONG><a name="[3c8]"></a>rf_init_api</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_app (via Veneer)
</UL>

<P><STRONG><a name="[3ca]"></a>rf_init_controller</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_app (via Veneer)
</UL>

<P><STRONG><a name="[3f9]"></a>rwble_sleep_enter</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[239]"></a>rwip_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init (via Veneer)
</UL>

<P><STRONG><a name="[3cb]"></a>rwip_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_ram (via Veneer)
</UL>

<P><STRONG><a name="[39e]"></a>rwip_prevent_sleep_clear</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sleep_enable (via Veneer)
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_get_rc_clk (via Veneer)
</UL>

<P><STRONG><a name="[39d]"></a>rwip_prevent_sleep_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sleep_disable (via Veneer)
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_start (via Veneer)
</UL>

<P><STRONG><a name="[23c]"></a>rwip_schedule</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_schedule (via Veneer)
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init (via Veneer)
</UL>

<P><STRONG><a name="[3b2]"></a>rwip_sleep</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_sleep_check (via Veneer)
</UL>

<P><STRONG><a name="[3ba]"></a>rwip_sleep_div_64</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_get_rc_clk (via Veneer)
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_slot_2_lpcycles_ram (via Veneer)
</UL>

<P><STRONG><a name="[3fb]"></a>rwip_sleep_time_calc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[3d8]"></a>rwip_time_get</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_recalculate_sleep_time (via Veneer)
</UL>

<P><STRONG><a name="[3b3]"></a>rwip_us_2_lpcycles</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_enter_sleep (via Veneer)
</UL>

<P><STRONG><a name="[10]"></a>sch_arb_event_start_direct_rom</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR>[Address Reference Count : 1]<UL><LI> entry.o(i.app_main)
</UL>
<P><STRONG><a name="[4e0]"></a>system_get_pclk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[4e2]"></a>system_get_pclk_config</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL></UL>

<P><STRONG><a name="[39c]"></a>system_set_pclk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_clock (via Veneer)
</UL>

<P><STRONG><a name="[191]"></a>system_set_port_mux</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init (via Veneer)
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_sleep_imp (via Veneer)
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[3c6]"></a>uart_flush_rxfifo_noint</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init (via Veneer)
</UL>

<P><STRONG><a name="[166]"></a>uart_putc_noint</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, syscall.txt(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_write_uart0 (via Veneer)
</UL>

<P><STRONG><a name="[128]"></a>BusFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[12b]"></a>DebugMon_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[126]"></a>HardFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[127]"></a>MemManage_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[125]"></a>NMI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[12c]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[12d]"></a>SysTick_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[129]"></a>UsageFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[12f]"></a>dma_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[13a]"></a>exti_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[132]"></a>i2c0_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[133]"></a>i2c1_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[13f]"></a>i2s_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[13e]"></a>lcd_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[139]"></a>pdm_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[13c]"></a>pwm_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[134]"></a>spim0_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[135]"></a>spim1_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[136]"></a>spis_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[130]"></a>timer0_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[131]"></a>timer1_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[137]"></a>uart0_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[138]"></a>uart1_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[13d]"></a>usb_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[12a]"></a>SVC_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, boot_vectors.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[147]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[503]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[165]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[149]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[504]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[148]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[505]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[506]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[14a]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[14e]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[14f]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[150]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[151]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[152]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[162]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[14b]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[507]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[14d]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[14c]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[153]"></a>ANCS_gatt_add_client</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ancs_client.o(i.ANCS_gatt_add_client))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = ANCS_gatt_add_client &rArr; gatt_add_client &rArr; gatt_add_client_uuid &rArr; gatt_write_peer_svc_to_flash &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_client
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_peripheral_init
</UL>

<P><STRONG><a name="[4]"></a>ANCS_gatt_msg_handler</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, ancs_client.o(i.ANCS_gatt_msg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = ANCS_gatt_msg_handler &rArr; ANCS_recv_data_src &rArr; findAppID &rArr; getMotorData &rArr; motor_init &rArr; pwm2_update &rArr; pwm_config
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_enable_ntf
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANCS_recv_ntf_src
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANCS_recv_data_src
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancs_client.o(i.ANCS_gatt_add_client)
</UL>
<P><STRONG><a name="[159]"></a>ANCS_gatt_write_req</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ancs_client.o(i.ANCS_gatt_write_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ANCS_gatt_write_req &rArr; gatt_client_write_req &rArr; gatt_client_write_req_with_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_req
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANCS_recv_ntf_src
</UL>

<P><STRONG><a name="[157]"></a>ANCS_recv_data_src</STRONG> (Thumb, 362 bytes, Stack size 40 bytes, ancs_client.o(i.ANCS_recv_data_src))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = ANCS_recv_data_src &rArr; findAppID &rArr; getMotorData &rArr; motor_init &rArr; pwm2_update &rArr; pwm_config
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_string
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAppID
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANCS_gatt_msg_handler
</UL>

<P><STRONG><a name="[156]"></a>ANCS_recv_ntf_src</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, ancs_client.o(i.ANCS_recv_ntf_src))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ANCS_recv_ntf_src &rArr; ANCS_gatt_write_req &rArr; gatt_client_write_req &rArr; gatt_client_write_req_with_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANCS_gatt_write_req
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_get_mtu
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANCS_gatt_msg_handler
</UL>

<P><STRONG><a name="[15e]"></a>__0printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[508]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[33d]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>

<P><STRONG><a name="[509]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[50a]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[160]"></a>__0vprintf</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, printfa.o(i.__0vprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[50b]"></a>__1vprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vprintf), UNUSED)

<P><STRONG><a name="[50c]"></a>__2vprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vprintf), UNUSED)

<P><STRONG><a name="[50d]"></a>__c89vprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vprintf), UNUSED)

<P><STRONG><a name="[33e]"></a>vprintf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfa.o(i.__0vprintf))
<BR><BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>

<P><STRONG><a name="[2c]"></a>_write_uart0</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, sys_utisl.o(i._write_uart0))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _write_uart0
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putc_noint (via Veneer)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> co_log.o(i.log_init)
<LI> sys_utisl.o(.data)
</UL>
<P><STRONG><a name="[17f]"></a>adc_Channel_ConvertConfig</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, driver_adc.o(i.adc_Channel_ConvertConfig))
<BR><BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adc_init
</UL>

<P><STRONG><a name="[167]"></a>adc_convert_enable</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, driver_adc.o(i.adc_convert_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = adc_convert_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_fifo_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adc_init
</UL>

<P><STRONG><a name="[168]"></a>adc_fifo_clear</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, driver_adc.o(i.adc_fifo_clear))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_convert_enable
</UL>

<P><STRONG><a name="[16d]"></a>adc_get_channel_data</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, driver_adc.o(i.adc_get_channel_data))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_task
</UL>

<P><STRONG><a name="[169]"></a>adc_init</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, driver_adc.o(i.adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = adc_init &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adc_init
</UL>

<P><STRONG><a name="[16c]"></a>adc_task</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, app_adc.o(i.adc_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = adc_task &rArr; ntf_data &rArr; gatt_notification &rArr; gatt_notification_with_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntf_data
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_get_channel_data
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_task_timer_handler
</UL>

<P><STRONG><a name="[16f]"></a>appID_list_default</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, device_info_flash.o(i.appID_list_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = appID_list_default &rArr; appID_list_save &rArr; app_device_flash_opration &rArr; flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appID_list_save
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_gatt_msg_handler
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appID_list_init
</UL>

<P><STRONG><a name="[171]"></a>appID_list_init</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, device_info_flash.o(i.appID_list_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = appID_list_init &rArr; appID_list_default &rArr; appID_list_save &rArr; app_device_flash_opration &rArr; flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read (via Veneer)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_string
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appID_list_default
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_gatt_msg_handler
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_peripheral_init
</UL>

<P><STRONG><a name="[170]"></a>appID_list_save</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, device_info_flash.o(i.appID_list_save))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = appID_list_save &rArr; app_device_flash_opration &rArr; flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_flash_opration (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_gatt_msg_handler
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appID_list_default
</UL>

<P><STRONG><a name="[174]"></a>app_act_created_ind_func</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, app_proj_event.o(i.app_act_created_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_act_created_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_add_svc
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_tb_state_is_feature_sup
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_scan_recv_gapm_cmp
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_period_sync_recv_gapm_cmp
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_conn_recv_gapm_cmp
</UL>

<P><STRONG><a name="[17a]"></a>app_act_deleted_ind_func</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, app_proj_event.o(i.app_act_deleted_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_act_deleted_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_scan_recv_gapm_cmp
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_period_sync_recv_gapm_cmp
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_conn_recv_gapm_cmp
</UL>

<P><STRONG><a name="[17b]"></a>app_adc_deinit</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, app_adc.o(i.app_adc_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_adc_deinit &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_read_pin
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_timer_handler
</UL>

<P><STRONG><a name="[17e]"></a>app_adc_init</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, app_adc.o(i.app_adc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_adc_init &rArr; adc_init &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_convert_enable
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_Channel_ConvertConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_main
</UL>

<P><STRONG><a name="[2a6]"></a>app_addr_resolve_result_ind_func</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, app_proj_event.o(i.app_addr_resolve_result_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_addr_resolve_result_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_solved_ind_handler
</UL>

<P><STRONG><a name="[180]"></a>app_adv_complete_ind_func</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, app_proj_event.o(i.app_adv_complete_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_adv_complete_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stopped_ind_handler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
</UL>

<P><STRONG><a name="[2be]"></a>app_adv_report_ind_func</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, app_proj_event.o(i.app_adv_report_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_adv_report_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_ext_adv_report_ind_handler
</UL>

<P><STRONG><a name="[181]"></a>app_conn_complete_ind_func</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, app_proj_event.o(i.app_conn_complete_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_conn_complete_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stopped_ind_handler
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_conn_recv_gapm_cmp
</UL>

<P><STRONG><a name="[182]"></a>app_connection_master_encrypt_compeleted_ind_func</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, app_proj_event.o(i.app_connection_master_encrypt_compeleted_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_connection_master_encrypt_compeleted_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
</UL>

<P><STRONG><a name="[183]"></a>app_connection_master_encrypted_ind_func</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, app_proj_event.o(i.app_connection_master_encrypted_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_connection_master_encrypted_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_ind_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[184]"></a>app_connection_paring_info_ind_func</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, app_proj_event.o(i.app_connection_paring_info_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_connection_paring_info_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[185]"></a>app_connection_req_ind_func</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, app_proj_event.o(i.app_connection_req_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_connection_req_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_addr_resolve_cb
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check
</UL>

<P><STRONG><a name="[187]"></a>app_connection_slave_encrypted_ind_func</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, app_proj_event.o(i.app_connection_slave_encrypted_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_connection_slave_encrypted_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_ind_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[188]"></a>app_connection_success_ind_func</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, app_proj_event.o(i.app_connection_success_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_connection_success_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_addr_resolve_cb
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check
</UL>

<P><STRONG><a name="[2b2]"></a>app_db_init_complete_ind_func</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_proj_event.o(i.app_db_init_complete_ind_func))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[189]"></a>app_disconnect_ind_func</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, app_proj_event.o(i.app_disconnect_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_disconnect_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_ind_handler
</UL>

<P><STRONG><a name="[2f]"></a>app_gap_evt_cb</STRONG> (Thumb, 410 bytes, Stack size 48 bytes, ble_simple_peripheral.o(i.app_gap_evt_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 672<LI>Call Chain = app_gap_evt_cb &rArr; gatt_discovery_peer_svc &rArr; gatt_check_peer_svc &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_reg
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_discovery_peer_svc
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_security_req
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_connect_num
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_start_adv
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_simple_peripheral.o(i.simple_peripheral_init)
</UL>
<P><STRONG><a name="[281]"></a>app_get_info_ind_func</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, app_proj_event.o(i.app_get_info_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_get_info_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_peer_features_ind_handler
</UL>

<P><STRONG><a name="[18f]"></a>app_io_init</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, app_key.o(i.app_io_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_io_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_write_pin
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_read_pin
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_sleep_imp (via Veneer)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_main
</UL>

<P><STRONG><a name="[146]"></a>app_main</STRONG> (Thumb, 340 bytes, Stack size 16 bytes, entry.o(i.app_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = app_main &rArr; user_main &rArr; pmu_sub_init &rArr; pmu_ft_trim_config &rArr; flash_OTP_read
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_port_mux (via Veneer)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_100us (via Veneer)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_main
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_status (via Veneer)
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_status (via Veneer)
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_boot_get_storage_type (via Veneer)
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trng_init
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_ioldo_ref_sel (via Veneer)
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trng_read_rand_num
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intc_init (via Veneer)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand (via Veneer)
</UL>

<P><STRONG><a name="[19d]"></a>app_otas_read_data</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ota.o(i.app_otas_read_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_otas_read_data
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_boot_load_data (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_gatt_msg_handler
</UL>

<P><STRONG><a name="[19f]"></a>app_otas_recv_data</STRONG> (Thumb, 832 bytes, Stack size 184 bytes, ota.o(i.app_otas_recv_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = app_otas_recv_data &rArr; ota_start &rArr; os_timer_start &rArr; os_timer_stop &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read (via Veneer)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_conn_param_update
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_req
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_stop
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_start
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_recover_flash_pin
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_change_flash_pin
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via Veneer)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_gatt_report_notify
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_malloc
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_free
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_mtu_exchange_req
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_get_mtu
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32 (via Veneer)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_boot_load_data (via Veneer)
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_boot_get_storage_type (via Veneer)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_crc_cal (via Veneer)
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_ota_state (via Veneer)
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_erase (via Veneer)
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_save_data (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_gatt_msg_handler
</UL>

<P><STRONG><a name="[1b2]"></a>app_per_sync_completed_ind_func</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, app_proj_event.o(i.app_per_sync_completed_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_per_sync_completed_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stopped_ind_handler
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_period_sync_recv_gapm_cmp
</UL>

<P><STRONG><a name="[1b3]"></a>app_per_sync_established_ind_func</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, app_proj_event.o(i.app_per_sync_established_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_per_sync_established_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_sync_established_ind_handler
</UL>

<P><STRONG><a name="[1b4]"></a>app_pwm_deinit</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, app_pwm.o(i.app_pwm_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_pwm_deinit &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_output_disable
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm2_update
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_update
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_write_pin
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_timer_handler
</UL>

<P><STRONG><a name="[1b8]"></a>app_pwm_init</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, app_pwm.o(i.app_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_pwm_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_output_enable
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_config
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_main
</UL>

<P><STRONG><a name="[1bb]"></a>app_reset_complete_ind_func</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_proj_event.o(i.app_reset_complete_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_reset_complete_ind_func &rArr; ble_gap_set_dev_config
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_gap_set_dev_config
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[1bd]"></a>app_scanning_completed_ind_func</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, app_proj_event.o(i.app_scanning_completed_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_scanning_completed_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stopped_ind_handler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_scan_recv_gapm_cmp
</UL>

<P><STRONG><a name="[1be]"></a>app_set_dev_config_complete_ind_func</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, app_proj_event.o(i.app_set_dev_config_complete_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_set_dev_config_complete_ind_func &rArr; appm_create_scan_act
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_scan_act
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_conn_act
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_adv_act
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[1c2]"></a>app_set_phy_ind_func</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, app_proj_event.o(i.app_set_phy_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_set_phy_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_msg_handler
</UL>

<P><STRONG><a name="[2d4]"></a>app_svc_added_ind_func</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_proj_event.o(i.app_svc_added_ind_func))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler
</UL>

<P><STRONG><a name="[262]"></a>app_tk_exch_ind_func</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, app_proj_event.o(i.app_tk_exch_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_tk_exch_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
</UL>

<P><STRONG><a name="[265]"></a>app_update_params_complete_ind_func</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_proj_event.o(i.app_update_params_complete_ind_func))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
</UL>

<P><STRONG><a name="[1c3]"></a>app_update_params_rejected_ind_func</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, app_proj_event.o(i.app_update_params_rejected_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_update_params_rejected_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
</UL>

<P><STRONG><a name="[1c4]"></a>app_update_params_update_ind_func</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, app_proj_event.o(i.app_update_params_update_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_update_params_update_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_msg_handler
</UL>

<P><STRONG><a name="[1c5]"></a>app_update_phy_rejected_ind_func</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, app_proj_event.o(i.app_update_phy_rejected_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_update_phy_rejected_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
</UL>

<P><STRONG><a name="[1c6]"></a>app_white_list_ind_func</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, app_proj_event.o(i.app_white_list_ind_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_white_list_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[1de]"></a>appm_adv_get_defer_op</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app.o(i.appm_adv_get_defer_op))
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_response_data
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_per_adv_data
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_data
</UL>

<P><STRONG><a name="[12]"></a>appm_adv_recv_gapm_cmp</STRONG> (Thumb, 404 bytes, Stack size 40 bytes, app.o(i.appm_adv_recv_gapm_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = appm_adv_recv_gapm_cmp &rArr; app_adv_complete_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_complete_ind_func
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_deleted_ind_func
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_created_ind_func
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_adv_act
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_response_data
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_per_adv_data
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_data
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>
<BR>[Address Reference Count : 6]<UL><LI> app.o(i.appm_delete_act)
<LI> app.o(i.appm_set_advertising_data)
<LI> app.o(i.appm_set_per_adv_data)
<LI> app.o(i.appm_set_scan_response_data)
<LI> app.o(i.appm_start_advertising)
<LI> app.o(i.appm_stop_advertising)
</UL>
<P><STRONG><a name="[1df]"></a>appm_adv_set_defer_op</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app.o(i.appm_adv_set_defer_op))
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_response_data
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_per_adv_data
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_param
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_data
</UL>

<P><STRONG><a name="[14]"></a>appm_conn_recv_gapm_cmp</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, app_conn.o(i.appm_conn_recv_gapm_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = appm_conn_recv_gapm_cmp &rArr; app_act_created_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_deleted_ind_func
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_created_ind_func
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_conn_complete_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_conn.o(i.appm_start_conn)
</UL>
<P><STRONG><a name="[1c0]"></a>appm_create_adv_act</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, app.o(i.appm_create_adv_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = appm_create_adv_act &rArr; appm_create_legacy_adv_act
</UL>
<BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_per_adv_act
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_legacy_adv_act
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_aux_adv_act
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_param
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_dev_config_complete_ind_func
</UL>

<P><STRONG><a name="[1ce]"></a>appm_create_aux_adv_act</STRONG> (Thumb, 172 bytes, Stack size 8 bytes, app.o(i.appm_create_aux_adv_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = appm_create_aux_adv_act
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_adv_act
</UL>

<P><STRONG><a name="[1bf]"></a>appm_create_conn_act</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, app.o(i.appm_create_conn_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = appm_create_conn_act
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_dev_config_complete_ind_func
</UL>

<P><STRONG><a name="[1cf]"></a>appm_create_legacy_adv_act</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, app.o(i.appm_create_legacy_adv_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = appm_create_legacy_adv_act
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_adv_act
</UL>

<P><STRONG><a name="[1cd]"></a>appm_create_per_adv_act</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, app.o(i.appm_create_per_adv_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = appm_create_per_adv_act
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_adv_act
</UL>

<P><STRONG><a name="[1c1]"></a>appm_create_scan_act</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, app.o(i.appm_create_scan_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = appm_create_scan_act
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_dev_config_complete_ind_func
</UL>

<P><STRONG><a name="[1d2]"></a>appm_delete_act</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, app.o(i.appm_delete_act))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = appm_delete_act &rArr; appm_execute_activity_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_param
</UL>

<P><STRONG><a name="[1d4]"></a>appm_exc_activity_cmp</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, app.o(i.appm_exc_activity_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = appm_exc_activity_cmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[1d3]"></a>appm_execute_activity_cmd</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, app.o(i.appm_execute_activity_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = appm_execute_activity_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_delete_act
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_conn
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_response_data
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_per_adv_data
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_data
</UL>

<P><STRONG><a name="[7]"></a>appm_init_imp</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, app.o(i.appm_init_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = appm_init_imp &rArr; ble_sec_init &rArr; get_stored_info_req &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_init
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create (via Veneer)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry.o(i.app_main)
</UL>
<P><STRONG><a name="[18]"></a>appm_init_imp_for_hci</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app.o(i.appm_init_imp_for_hci))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = appm_init_imp_for_hci
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create (via Veneer)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[1dd]"></a>appm_period_sync_recv_gapm_cmp</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, app.o(i.appm_period_sync_recv_gapm_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = appm_period_sync_recv_gapm_cmp &rArr; app_act_created_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_per_sync_completed_ind_func
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_deleted_ind_func
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_created_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[13]"></a>appm_scan_recv_gapm_cmp</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, app.o(i.appm_scan_recv_gapm_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = appm_scan_recv_gapm_cmp &rArr; app_act_created_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scanning_completed_ind_func
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_deleted_ind_func
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_created_ind_func
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.appm_delete_act)
</UL>
<P><STRONG><a name="[1c9]"></a>appm_set_advertising_data</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, app.o(i.appm_set_advertising_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = appm_set_advertising_data &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_set_defer_op
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_get_defer_op
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_advertising_data
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
</UL>

<P><STRONG><a name="[1e0]"></a>appm_set_advertising_param</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, app.o(i.appm_set_advertising_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = appm_set_advertising_param &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_delete_act
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_create_adv_act
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_set_defer_op
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_advertising_param
</UL>

<P><STRONG><a name="[1cb]"></a>appm_set_per_adv_data</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, app.o(i.appm_set_per_adv_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = appm_set_per_adv_data &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_set_defer_op
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_get_defer_op
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
</UL>

<P><STRONG><a name="[1ca]"></a>appm_set_scan_response_data</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, app.o(i.appm_set_scan_response_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = appm_set_scan_response_data &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_set_defer_op
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_get_defer_op
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_advertising_rsp_data
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
</UL>

<P><STRONG><a name="[1cc]"></a>appm_start_advertising</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, app.o(i.appm_start_advertising))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = appm_start_advertising &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_set_defer_op
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_get_defer_op
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_start_advertising
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
</UL>

<P><STRONG><a name="[1e1]"></a>appm_start_conn</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, app_conn.o(i.appm_start_conn))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = appm_start_conn &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
</UL>

<P><STRONG><a name="[1c8]"></a>appm_stop_advertising</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, app.o(i.appm_stop_advertising))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = appm_stop_advertising &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_set_defer_op
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_get_defer_op
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_execute_activity_cmd
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_stop_advertising
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
</UL>

<P><STRONG><a name="[1ea]"></a>attc_l2cc_pdu_recv_handler</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, attc.o(i.attc_l2cc_pdu_recv_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = attc_l2cc_pdu_recv_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler
</UL>

<P><STRONG><a name="[1ef]"></a>attc_send_att_req</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, attc.o(i.attc_send_att_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = attc_send_att_req
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set (via Veneer)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_hdl_cfm
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_execute
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cmd_handler
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_cmd_handler
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_exc_mtu_cmd_handler
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_disc_cmd_handler
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_sign_ind_handler
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_type_rsp_handler
</UL>

<P><STRONG><a name="[1f4]"></a>attc_send_execute</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, attc.o(i.attc_send_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = attc_send_execute &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_att_req
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cmd_handler
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_execute_write_cmd_handler
</UL>

<P><STRONG><a name="[1f5]"></a>attc_send_hdl_cfm</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, attc.o(i.attc_send_hdl_cfm))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = attc_send_hdl_cfm &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_att_req
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_event_cfm_handler
</UL>

<P><STRONG><a name="[1f1]"></a>attc_send_read_ind</STRONG> (Thumb, 228 bytes, Stack size 40 bytes, attc.o(i.attc_send_read_ind))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = attc_send_read_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init (via Veneer)
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_requester
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_rsp_handler
</UL>

<P><STRONG><a name="[1f7]"></a>attm_att_set_value</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, attm.o(i.attm_att_set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = attm_att_set_value &rArr; attmdb_get_attribute &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_uuid16_comp
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_attribute
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_init
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init_attr
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_svc_changed_cmd_handler
</UL>

<P><STRONG><a name="[1fa]"></a>attm_att_update_perm</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, attm.o(i.attm_att_update_perm))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = attm_att_update_perm &rArr; attmdb_get_attribute &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_uuid16_comp
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_attribute
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler
</UL>

<P><STRONG><a name="[1fb]"></a>attm_convert_to128</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, attm.o(i.attm_convert_to128))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_uuid
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_uuid_comp
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_cmd_handler
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_disc_cmd_handler
</UL>

<P><STRONG><a name="[1fc]"></a>attm_get_value</STRONG> (Thumb, 376 bytes, Stack size 96 bytes, attm.o(i.attm_get_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = attm_get_value &rArr; attmdb_get_uuid &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_uuid16_comp
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_uuid
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_attribute
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_value
</UL>

<P><STRONG><a name="[1ff]"></a>attm_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, attm.o(i.attm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = attm_init &rArr; attmdb_destroy
</UL>
<BR>[Calls]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_destroy
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init_imp
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[20c]"></a>attm_is_bt16_uuid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, attm.o(i.attm_is_bt16_uuid))
<BR><BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_svc_calc_len
</UL>

<P><STRONG><a name="[20d]"></a>attm_is_bt32_uuid</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, attm.o(i.attm_is_bt32_uuid))
<BR><BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_svc_calc_len
</UL>

<P><STRONG><a name="[201]"></a>attm_svc_create_db</STRONG> (Thumb, 256 bytes, Stack size 56 bytes, attm.o(i.attm_svc_create_db))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = attm_svc_create_db &rArr; attmdb_add_service &rArr; attmdb_svc_init &rArr; attm_uuid16_comp &rArr; attm_uuid_comp &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_add_service
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_init
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init_attr
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_attr
</UL>

<P><STRONG><a name="[203]"></a>attm_svc_create_db_ext</STRONG> (Thumb, 356 bytes, Stack size 56 bytes, attm.o(i.attm_svc_create_db_ext))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = attm_svc_create_db_ext &rArr; attmdb_add_service &rArr; attmdb_svc_init &rArr; attm_uuid16_comp &rArr; attm_uuid_comp &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_add_service
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_init
</UL>

<P><STRONG><a name="[204]"></a>attm_svc_get_permission</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, attm.o(i.attm_svc_get_permission))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = attm_svc_get_permission &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_service
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_att_get_permission
</UL>

<P><STRONG><a name="[206]"></a>attm_uuid16_comp</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, attm.o(i.attm_uuid16_comp))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = attm_uuid16_comp &rArr; attm_uuid_comp &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_uuid_comp
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_svc_init
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_svc_calc_len
</UL>

<P><STRONG><a name="[1ed]"></a>attm_uuid_comp</STRONG> (Thumb, 86 bytes, Stack size 48 bytes, attm.o(i.attm_uuid_comp))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = attm_uuid_comp &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_convert_to128
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_extract_svc_info_uuid_128
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_uuid16_comp
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_value_by_uuid
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_by_type_req
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_type_rsp_handler
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_grp_type_rsp_handler
</UL>

<P><STRONG><a name="[202]"></a>attmdb_add_service</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, attm_db.o(i.attmdb_add_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = attmdb_add_service &rArr; attmdb_svc_init &rArr; attm_uuid16_comp &rArr; attm_uuid_comp &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_svc_check_hdl
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_svc_init
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_svc_calc_len
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db_ext
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
</UL>

<P><STRONG><a name="[20a]"></a>attmdb_att_get_permission</STRONG> (Thumb, 272 bytes, Stack size 40 bytes, attm_db.o(i.attmdb_att_get_permission))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = attmdb_att_get_permission &rArr; attmdb_get_attribute &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_uuid16_comp
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_attribute
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_get_permission
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_att_chk_perm
</UL>

<P><STRONG><a name="[200]"></a>attmdb_destroy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, attm_db.o(i.attmdb_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = attmdb_destroy
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler
</UL>

<P><STRONG><a name="[1f8]"></a>attmdb_get_attribute</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, attm_db.o(i.attmdb_get_attribute))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = attmdb_get_attribute &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_service
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_value
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_get_value
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_update_perm
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_end
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_execute_write_req
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_att_get_permission
</UL>

<P><STRONG><a name="[20b]"></a>attmdb_get_max_len</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, attm_db.o(i.attmdb_get_max_len))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = attmdb_get_max_len
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_uuid16_comp
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_check_length_and_offset
</UL>

<P><STRONG><a name="[217]"></a>attmdb_get_next_att</STRONG> (Thumb, 114 bytes, Stack size 20 bytes, attm_db.o(i.attmdb_get_next_att))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = attmdb_get_next_att
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_value_by_uuid
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_info_req
</UL>

<P><STRONG><a name="[205]"></a>attmdb_get_service</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, attm_db.o(i.attmdb_get_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = attmdb_get_service
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_attribute
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_get_permission
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_dest_task
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_end
</UL>

<P><STRONG><a name="[1fd]"></a>attmdb_get_uuid</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, attm_db.o(i.attmdb_get_uuid))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = attmdb_get_uuid &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_convert_to128
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_get_value
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_value_by_uuid
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_info_req
</UL>

<P><STRONG><a name="[207]"></a>attmdb_svc_check_hdl</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, attm_db.o(i.attmdb_svc_check_hdl))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = attmdb_svc_check_hdl
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_add_service
</UL>

<P><STRONG><a name="[1f9]"></a>attmdb_uuid16_comp</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, attm_db.o(i.attmdb_uuid16_comp))
<BR><BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_value
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_get_value
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_update_perm
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_end
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_max_len
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_att_get_permission
</UL>

<P><STRONG><a name="[20f]"></a>atts_clear_prep_data</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, atts.o(i.atts_clear_prep_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = atts_clear_prep_data
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cleanup
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cfm_handler
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_execute_write_req
</UL>

<P><STRONG><a name="[210]"></a>atts_clear_read_cache</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, atts.o(i.atts_clear_read_cache))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = atts_clear_read_cache
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cleanup
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cfm_handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_evt_cmd_handler
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_req
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_type_req
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_grp_type_req
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_blob_req
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_value
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_by_type_req
</UL>

<P><STRONG><a name="[211]"></a>atts_clear_rsp_data</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, atts.o(i.atts_clear_rsp_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = atts_clear_rsp_data
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_process_pdu
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cleanup
</UL>

<P><STRONG><a name="[21d]"></a>atts_l2cc_pdu_recv_handler</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, atts.o(i.atts_l2cc_pdu_recv_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = atts_l2cc_pdu_recv_handler &rArr; atts_process_pdu &rArr; atts_clear_rsp_data
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_process_pdu
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler
</UL>

<P><STRONG><a name="[21f]"></a>atts_process_pdu</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, atts.o(i.atts_process_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = atts_process_pdu &rArr; atts_clear_rsp_data
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_rsp_data
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_con_enable
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cfm_handler
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_cfm_handler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_cfm_handler
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler
</UL>

<P><STRONG><a name="[212]"></a>atts_send_error</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, atts.o(i.atts_send_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = atts_send_error &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cfm_handler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_cfm_handler
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_rsp_send
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_req
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_req
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_type_req
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_grp_type_req
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_blob_req
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_prepare_write_req
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_info_req
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_by_type_req
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_execute_write_req
</UL>

<P><STRONG><a name="[222]"></a>atts_send_event</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, atts.o(i.atts_send_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = atts_send_event &rArr; atts_get_att_chk_perm &rArr; attmdb_att_get_permission &rArr; attmdb_get_attribute &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_mtu
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set (via Veneer)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_att_chk_perm
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_evt_cmd_handler
</UL>

<P><STRONG><a name="[225]"></a>atts_write_rsp_send</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, atts.o(i.atts_write_rsp_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = atts_write_rsp_send &rArr; atts_send_error &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_error
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cfm_handler
</UL>

<P><STRONG><a name="[226]"></a>atts_write_signed_cfm</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, atts.o(i.atts_write_signed_cfm))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = atts_write_signed_cfm &rArr; atts_get_att_chk_perm &rArr; attmdb_att_get_permission &rArr; attmdb_get_attribute &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_update_elmt
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_att_chk_perm
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_sign_ind_handler
</UL>

<P><STRONG><a name="[178]"></a>ble_add_svc</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, app.o(i.ble_add_svc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_add_svc
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_created_ind_func
</UL>

<P><STRONG><a name="[229]"></a>ble_bond_check</STRONG> (Thumb, 286 bytes, Stack size 32 bytes, user_bond_manage.o(i.ble_bond_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ble_bond_check &rArr; app_connection_success_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_init
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_set_evt_func
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_resolve_address
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_success_ind_func
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_req_ind_func
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_send_cfm
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[16]"></a>ble_bond_get_info</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, user_bond_manage.o(i.ble_bond_get_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ble_bond_get_info &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_bond_manage.o(i.ble_bond_init)
</UL>
<P><STRONG><a name="[22b]"></a>ble_bond_init</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, user_bond_manage.o(i.ble_bond_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ble_bond_init &rArr; ble_bond_read_info_from_flash &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_set_evt_func
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_read_info_from_flash
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_bond_manager_init
</UL>

<P><STRONG><a name="[22d]"></a>ble_bond_read_info_from_flash</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, user_bond_manage.o(i.ble_bond_read_info_from_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_bond_read_info_from_flash &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_init
</UL>

<P><STRONG><a name="[17]"></a>ble_bond_store_info</STRONG> (Thumb, 386 bytes, Stack size 32 bytes, user_bond_manage.o(i.ble_bond_store_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ble_bond_store_info &rArr; ble_bond_write_info_to_flash &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_write_info_to_flash
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_bond_manage.o(i.ble_bond_init)
</UL>
<P><STRONG><a name="[22e]"></a>ble_bond_write_info_to_flash</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, user_bond_manage.o(i.ble_bond_write_info_to_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_bond_write_info_to_flash &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write (via Veneer)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read (via Veneer)
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_store_info
</UL>

<P><STRONG><a name="[1bc]"></a>ble_gap_set_dev_config</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, app.o(i.ble_gap_set_dev_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_gap_set_dev_config
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_reset_complete_ind_func
</UL>

<P><STRONG><a name="[231]"></a>ble_sec_check_ediv_rand</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, app_sec.o(i.ble_sec_check_ediv_rand))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_sec_check_ediv_rand
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
</UL>

<P><STRONG><a name="[26c]"></a>ble_sec_get_bond_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, app_sec.o(i.ble_sec_get_bond_status))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_send_cfm
</UL>

<P><STRONG><a name="[1da]"></a>ble_sec_init</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, app_sec.o(i.ble_sec_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ble_sec_init &rArr; get_stored_info_req &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stored_info_req
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_init_imp
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_addr_resolve_cb
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check
</UL>

<P><STRONG><a name="[22a]"></a>ble_sec_resolve_address</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, app_sec.o(i.ble_sec_resolve_address))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_sec_resolve_address
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check
</UL>

<P><STRONG><a name="[233]"></a>ble_sec_send_security_req</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_sec.o(i.ble_sec_send_security_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_sec_send_security_req
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_security_req
</UL>

<P><STRONG><a name="[24b]"></a>ble_sec_set_pairing_param</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_sec.o(i.ble_sec_set_pairing_param))
<BR><BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_security_param_init
</UL>

<P><STRONG><a name="[227]"></a>ble_set_evt_func</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app.o(i.ble_set_evt_func))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_profile_task_add
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_init
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_addr_resolve_cb
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check
</UL>

<P><STRONG><a name="[234]"></a>ble_stack_configure</STRONG> (Thumb, 284 bytes, Stack size 40 bytes, jump_table_host.o(i.ble_stack_configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_stack_configure
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_init_act_info_buf (via Veneer)
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;em_ble_generate_base_address_table (via Veneer)
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_init_env (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_main
</UL>

<P><STRONG><a name="[238]"></a>ble_stack_init</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, app.o(i.ble_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_stack_init &rArr; trng_read_rand_num
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sleep_disable
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLOBAL_INT_START (via Veneer)
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trng_read_rand_num
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule (via Veneer)
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_init (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_main
</UL>

<P><STRONG><a name="[3d5]"></a>calib_meter_evt_end</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adv_check_mode.o(i.calib_meter_evt_end))
<BR><BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lld_evt_end_isr (via Veneer)
</UL>

<P><STRONG><a name="[3d1]"></a>calib_meter_recv_msg</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, adv_check_mode.o(i.calib_meter_recv_msg))
<BR><BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lld_rx_isr (via Veneer)
</UL>

<P><STRONG><a name="[23d]"></a>charge_task</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, app_adc.o(i.charge_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = charge_task &rArr; gpio_write_pin
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_write_pin
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_read_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_task_timer_handler
</UL>

<P><STRONG><a name="[1db]"></a>check_timer_handle</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, os_timer.o(i.check_timer_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = check_timer_handle &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_msg_handler
</UL>

<P><STRONG><a name="[240]"></a>device_name_default</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, device_info_flash.o(i.device_name_default))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = device_name_default &rArr; device_name_save &rArr; app_device_flash_opration &rArr; flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_name_save
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_gatt_msg_handler
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_name_init
</UL>

<P><STRONG><a name="[242]"></a>device_name_init</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, device_info_flash.o(i.device_name_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = device_name_init &rArr; device_name_default &rArr; device_name_save &rArr; app_device_flash_opration &rArr; flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read (via Veneer)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_string
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_name_default
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_peripheral_init
</UL>

<P><STRONG><a name="[241]"></a>device_name_save</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, device_info_flash.o(i.device_name_save))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = device_name_save &rArr; app_device_flash_opration &rArr; flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_flash_opration (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_gatt_msg_handler
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_name_default
</UL>

<P><STRONG><a name="[243]"></a>dis_flash_data</STRONG> (Thumb, 544 bytes, Stack size 272 bytes, device_info_flash.o(i.dis_flash_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = dis_flash_data
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read (via Veneer)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_gatt_msg_handler
</UL>

<P><STRONG><a name="[39f]"></a>eFuse_read</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, driver_efuse.o(i.eFuse_read))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_main
</UL>

<P><STRONG><a name="[15c]"></a>findAppID</STRONG> (Thumb, 124 bytes, Stack size 136 bytes, device_info_flash.o(i.findAppID))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = findAppID &rArr; getMotorData &rArr; motor_init &rArr; pwm2_update &rArr; pwm_config
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_string
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMotorData
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANCS_recv_data_src
</UL>

<P><STRONG><a name="[245]"></a>from_task_func_to_msg_handle</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, os_task.o(i.from_task_func_to_msg_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = from_task_func_to_msg_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_init
</UL>

<P><STRONG><a name="[364]"></a>gap_address_get</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gap_api.o(i.gap_address_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gap_address_get
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_peripheral_init
</UL>

<P><STRONG><a name="[3a0]"></a>gap_address_set</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gap_api.o(i.gap_address_set))
<BR><BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_main
</UL>

<P><STRONG><a name="[246]"></a>gap_bond_manager_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_api.o(i.gap_bond_manager_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gap_bond_manager_init &rArr; ble_bond_init &rArr; ble_bond_read_info_from_flash &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_init
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_main
</UL>

<P><STRONG><a name="[1a0]"></a>gap_conn_param_update</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, gap_api.o(i.gap_conn_param_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gap_conn_param_update
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data
</UL>

<P><STRONG><a name="[247]"></a>gap_dev_name_get</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gap_api.o(i.gap_dev_name_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gap_dev_name_get
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
</UL>

<P><STRONG><a name="[248]"></a>gap_dev_name_set</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gap_api.o(i.gap_dev_name_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gap_dev_name_set
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_peripheral_init
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
</UL>

<P><STRONG><a name="[1a9]"></a>gap_disconnect_req</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, gap_api.o(i.gap_disconnect_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gap_disconnect_req &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_connect_status
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_gatt_msg_handler
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_goto_sleep
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
</UL>

<P><STRONG><a name="[18c]"></a>gap_get_connect_num</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gap_api.o(i.gap_get_connect_num))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_evt_cb
</UL>

<P><STRONG><a name="[249]"></a>gap_get_connect_status</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gap_api.o(i.gap_get_connect_status))
<BR><BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_req
</UL>

<P><STRONG><a name="[275]"></a>gap_get_dev_appearance</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gap_api.o(i.gap_get_dev_appearance))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_req_ind_handler
</UL>

<P><STRONG><a name="[24a]"></a>gap_security_param_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_api.o(i.gap_security_param_init))
<BR><BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_set_pairing_param
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_peripheral_init
</UL>

<P><STRONG><a name="[18e]"></a>gap_security_req</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gap_api.o(i.gap_security_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gap_security_req &rArr; ble_sec_send_security_req
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_send_security_req
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_evt_cb
</UL>

<P><STRONG><a name="[24c]"></a>gap_set_advertising_data</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gap_api.o(i.gap_set_advertising_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gap_set_advertising_data &rArr; appm_set_advertising_data &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_data
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_start_adv
</UL>

<P><STRONG><a name="[24d]"></a>gap_set_advertising_param</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gap_api.o(i.gap_set_advertising_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gap_set_advertising_param &rArr; appm_set_advertising_param &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_param
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_start_adv
</UL>

<P><STRONG><a name="[24e]"></a>gap_set_advertising_rsp_data</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gap_api.o(i.gap_set_advertising_rsp_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gap_set_advertising_rsp_data &rArr; appm_set_scan_response_data &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_response_data
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_start_adv
</UL>

<P><STRONG><a name="[363]"></a>gap_set_cb_func</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gap_api.o(i.gap_set_cb_func))
<BR><BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_peripheral_init
</UL>

<P><STRONG><a name="[288]"></a>gap_set_dev_appearance</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gap_api.o(i.gap_set_dev_appearance))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_req_ind_handler
</UL>

<P><STRONG><a name="[24f]"></a>gap_start_advertising</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gap_api.o(i.gap_start_advertising))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gap_start_advertising &rArr; appm_start_advertising &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_start_adv
</UL>

<P><STRONG><a name="[250]"></a>gap_stop_advertising</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gap_api.o(i.gap_stop_advertising))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gap_stop_advertising &rArr; appm_stop_advertising &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_goto_sleep
</UL>

<P><STRONG><a name="[38d]"></a>gapc_auth_get</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gapc.o(i.gapc_auth_get))
<BR><BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt
</UL>

<P><STRONG><a name="[269]"></a>gapc_auth_set</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, gapc.o(i.gapc_auth_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapc_auth_set
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_ind
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_cfm_handler
</UL>

<P><STRONG><a name="[a4]"></a>gapc_cmp_evt_handler</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gapm_init.o(i.gapc_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gapc_cmp_evt_handler &rArr; gapm_actv_stopped &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_stopped
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[267]"></a>gapc_con_cleanup</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gapc.o(i.gapc_con_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gapc_con_cleanup &rArr; gapc_cleanup &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_con_cleanup
</UL>

<P><STRONG><a name="[268]"></a>gapc_con_create</STRONG> (Thumb, 366 bytes, Stack size 48 bytes, gapc.o(i.gapc_con_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapc_con_create
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_con_create
</UL>

<P><STRONG><a name="[228]"></a>gapc_connection_send_cfm</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, app_task.o(i.gapc_connection_send_cfm))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapc_connection_send_cfm
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_get_bond_status
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_addr_resolve_cb
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check
</UL>

<P><STRONG><a name="[21c]"></a>gapc_enc_keysize_get</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gapc.o(i.gapc_enc_keysize_get))
<BR><BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_att_chk_perm
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_req_ind
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_ltk_exch
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_mst_id_pdu
</UL>

<P><STRONG><a name="[37f]"></a>gapc_enc_keysize_set</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gapc.o(i.gapc_enc_keysize_set))
<BR><BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_check_max_key_size
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_encrypt_start
</UL>

<P><STRONG><a name="[25f]"></a>gapc_get_bdaddr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gapc.o(i.gapc_get_bdaddr))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_e1
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_cfm
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_peer_att_info_ind_handler
</UL>

<P><STRONG><a name="[276]"></a>gapc_get_chan_sel_algo</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gapc.o(i.gapc_get_chan_sel_algo))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_info_cmd_handler
</UL>

<P><STRONG><a name="[26d]"></a>gapc_get_conhdl</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gapc.o(i.gapc_get_conhdl))
<BR><BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_data_send
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_start_enc_cmd
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_ltk_req_rsp
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_pref_slave_latency_cmd_handler
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_phy_cmd_handler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_le_pkt_size_handler
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_le_ping_to_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cmd_handler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cfm_handler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_info_cmd_handler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_cmd_handler
</UL>

<P><STRONG><a name="[6]"></a>gapc_get_conidx_imp</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gapc.o(i.gapc_get_conidx_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapc_get_conidx_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry.o(i.app_main)
</UL>
<P><STRONG><a name="[389]"></a>gapc_get_csrk</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gapc.o(i.gapc_get_csrk))
<BR><BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_l
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_ci
</UL>

<P><STRONG><a name="[1e9]"></a>gapc_get_dest_task</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gapc.o(i.gapc_get_dest_task))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_set_mtu
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_timeout_handler
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_req_ind
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_ind
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_check_repeated_attempts
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_cont
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_encrypt_start_handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cmd_handler
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_hdl_val_ntf_ind_handler
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_sec_req_pdu
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_key_press_notification_ind
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_phy_cmd_cmp_evt_handler
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_phy_upd_cmp_evt_handler
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_data_len_chg_evt_handler
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_update_cmp_evt_handler
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_auth_payl_to_exp_evt_handler
</UL>

<P><STRONG><a name="[27e]"></a>gapc_get_operation</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gapc.o(i.gapc_get_operation))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_cmp_evt_handler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_ind_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_use_enc_block_ind_handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_gen_rand_nb_ind_handler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_conn_param_to_ind_handler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cfm_handler
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_reject_handler
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_conn_param_upd_resp_handler
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_rssi_cmd_cmp_evt_handler
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_rem_ver_info_cmp_evt_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_chnl_map_cmd_cmp_evt_handler
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_rem_feats_cmp_evt_handler
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_phy_upd_cmp_evt_handler
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_cmd_stat_event_handler
</UL>

<P><STRONG><a name="[27d]"></a>gapc_get_operation_ptr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gapc.o(i.gapc_get_operation_ptr))
<BR><BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_cont
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_process_op
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cfm_handler
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_reject_handler
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_conn_param_upd_resp_handler
</UL>

<P><STRONG><a name="[277]"></a>gapc_get_requester</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gapc.o(i.gapc_get_requester))
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_src_id_get (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_cont
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_ind_handler
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_rssi_cmd_cmp_evt_handler
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_rem_ver_info_cmp_evt_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_chnl_map_cmd_cmp_evt_handler
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_auth_payl_to_cmd_cmp_evt_handler
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_rem_feats_cmp_evt_handler
</UL>

<P><STRONG><a name="[253]"></a>gapc_get_role</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gapc.o(i.gapc_get_role))
<BR><BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_conn_param_upd_resp_handler
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_conn_param_upd_req_handler
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_req_ind
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_initiate_dhkey_verification
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_initiate_dhkey_check
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_init_mac_key_calculation
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_recv
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_tk_exch
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_rsp
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_oob_exch
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_nc_exch
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_ltk_exch
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_irk_exch
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_csrk_exch
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_confirm_gen_rand
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_smp_timeout_timer_ind_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_security_cmd_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_cmd_handler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_cfm_handler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_cmd_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_cfm_handler
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_sign_info_pdu
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_sec_req_pdu
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_public_key_pdu
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rsp_pdu
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_req_pdu
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rand_pdu
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_fail_pdu
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_cfm_pdu
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_mst_id_pdu
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_id_info_pdu
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_id_addr_info_pdu
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_enc_info_pdu
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_dhkey_check_pdu
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_enc_key_refr_evt_handler
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_enc_chg_evt_handler
</UL>

<P><STRONG><a name="[39a]"></a>gapc_get_sign_counter</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gapc.o(i.gapc_get_sign_counter))
<BR><BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_cont
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_command
</UL>

<P><STRONG><a name="[72]"></a>gapc_hci_handler</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gapc_hci.o(i.gapc_hci_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapc_hci_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[279]"></a>gapc_init</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gapc.o(i.gapc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gapc_init &rArr; gapc_cleanup &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create (via Veneer)
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init
</UL>

<P><STRONG><a name="[30a]"></a>gapc_is_disc_connection</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gapc.o(i.gapc_is_disc_connection))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_timeout_handler
</UL>

<P><STRONG><a name="[21b]"></a>gapc_is_sec_set</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gapc.o(i.gapc_is_sec_set))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cmd_handler
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_att_chk_perm
</UL>

<P><STRONG><a name="[38c]"></a>gapc_link_encrypted</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gapc.o(i.gapc_link_encrypted))
<BR><BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_ind
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt
</UL>

<P><STRONG><a name="[21a]"></a>gapc_lk_sec_lvl_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gapc.o(i.gapc_lk_sec_lvl_get))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cmd_handler
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_att_chk_perm
</UL>

<P><STRONG><a name="[280]"></a>gapc_param_update_sanity</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gapc.o(i.gapc_param_update_sanity))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapc_param_update_sanity
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cmd_handler
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_conn_param_upd_req_handler
</UL>

<P><STRONG><a name="[a5]"></a>gapc_peer_att_info_ind_handler</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, gapm_init.o(i.gapc_peer_att_info_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapc_peer_att_info_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_bdaddr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[25b]"></a>gapc_process_op</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, gapc_task.o(i.gapc_process_op))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gapc_process_op &rArr; gapc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_src_id_get (via Veneer)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_state
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_operation_ptr
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_error_evt
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_sign_cmd_handler
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_pref_slave_latency_cmd_handler
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_phy_cmd_handler
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_le_pkt_size_handler
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_le_ping_to_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_security_cmd_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cmd_handler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_key_press_notification_cmd_handler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_info_cmd_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_cmd_handler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_cmd_handler
</UL>

<P><STRONG><a name="[284]"></a>gapc_reschedule_operation</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, gapc.o(i.gapc_reschedule_operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapc_reschedule_operation
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_src_id_get (via Veneer)
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_forward (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_update_cmp_evt_handler
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_cmd_stat_event_handler
</UL>

<P><STRONG><a name="[25e]"></a>gapc_send_complete_evt</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, gapc.o(i.gapc_send_complete_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_state
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_requester
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_operation_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cleanup
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_ltk_req_rsp
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_cont
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_cmp_evt_handler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_conn_param_to_ind_handler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_sign_cmd_handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_security_cmd_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cmd_handler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cfm_handler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_info_cmd_handler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_cmd_handler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_cmd_handler
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_reject_handler
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_conn_param_upd_resp_handler
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_wr_auth_payl_to_cmd_cmp_evt_handler
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_vs_set_pref_slave_latency_cmd_cmp_evt_handler
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_rssi_cmd_cmp_evt_handler
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_rem_ver_info_cmp_evt_handler
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_chnl_map_cmd_cmp_evt_handler
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_auth_payl_to_cmd_cmp_evt_handler
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_start_enc_stat_evt_handler
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_set_data_len_cmd_cmp_evt_handler
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_rem_feats_cmp_evt_handler
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_phy_cmd_cmp_evt_handler
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_phy_upd_cmp_evt_handler
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_con_update_cmp_evt_handler
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_cmd_stat_event_handler
</UL>

<P><STRONG><a name="[287]"></a>gapc_send_disconect_ind</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gapc.o(i.gapc_send_disconect_ind))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapc_send_disconect_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler
</UL>

<P><STRONG><a name="[26f]"></a>gapc_send_error_evt</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gapc.o(i.gapc_send_error_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapc_send_error_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_process_op
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_disconnect_cmd_handler
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_cmd_stat_event_handler
</UL>

<P><STRONG><a name="[2c7]"></a>gapc_set_local_addr</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gapc.o(i.gapc_set_local_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapc_set_local_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_adv_set_term_evt_handler
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind
</UL>

<P><STRONG><a name="[282]"></a>gapc_set_operation_ptr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gapc.o(i.gapc_set_operation_ptr))
<BR><BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_process_op
</UL>

<P><STRONG><a name="[334]"></a>gapc_sig_pdu_recv_handler</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gapc_sig.o(i.gapc_sig_pdu_recv_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapc_sig_pdu_recv_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler
</UL>

<P><STRONG><a name="[27f]"></a>gapc_sig_send_param_resp</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gapc_sig.o(i.gapc_sig_send_param_resp))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapc_sig_send_param_resp &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cfm_handler
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_conn_param_upd_req_handler
</UL>

<P><STRONG><a name="[307]"></a>gapc_svc_chg_ccc_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gapc.o(i.gapc_svc_chg_ccc_get))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_svc_changed_cmd_handler
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[30c]"></a>gapc_svc_chg_ccc_set</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gapc.o(i.gapc_svc_chg_ccc_set))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
</UL>

<P><STRONG><a name="[283]"></a>gapc_update_state</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gapc.o(i.gapc_update_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_start_enc_cmd
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_ltk_req_rsp
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_process_op
</UL>

<P><STRONG><a name="[a6]"></a>gapm_activity_create_cmd_handler</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, gapm_actv.o(i.gapm_activity_create_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gapm_activity_create_cmd_handler &rArr; gapm_scan_create &rArr; gapm_actv_created &rArr; gapm_addr_set_rand_addr &rArr; gapm_addr_fsm &rArr; gapm_addr_renew_next_addr &rArr;  gapm_addr_fsm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_create
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_create
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[a9]"></a>gapm_activity_delete_cmd_handler</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, gapm_actv.o(i.gapm_activity_delete_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gapm_activity_delete_cmd_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_get_next
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[a7]"></a>gapm_activity_start_cmd_handler</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gapm_actv.o(i.gapm_activity_start_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gapm_activity_start_cmd_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[a8]"></a>gapm_activity_stop_cmd_handler</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, gapm_actv.o(i.gapm_activity_stop_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gapm_activity_stop_cmd_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_get_next
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[291]"></a>gapm_actv_alloc</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gapm_actv.o(i.gapm_actv_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_actv_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_create
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_create
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_create
</UL>

<P><STRONG><a name="[292]"></a>gapm_actv_created</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gapm_actv.o(i.gapm_actv_created))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gapm_actv_created &rArr; gapm_addr_set_rand_addr &rArr; gapm_addr_fsm &rArr; gapm_addr_renew_next_addr &rArr;  gapm_addr_fsm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_set_rand_addr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_free
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_create
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_create
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_creating_handler
</UL>

<P><STRONG><a name="[295]"></a>gapm_actv_deleted</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, gapm_actv.o(i.gapm_actv_deleted))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapm_actv_deleted &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_get_next
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_free
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_adv_handler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_delete
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_delete
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_delete
</UL>

<P><STRONG><a name="[299]"></a>gapm_actv_get_hci_own_addr_type</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gapm_actv.o(i.gapm_actv_get_hci_own_addr_type))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapm_actv_get_hci_own_addr_type
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_address_type
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_hci_le_set_ext_scan_param_cmd
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_send_hci_le_ext_create_con_cmd
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_adv_param_cmd
</UL>

<P><STRONG><a name="[29b]"></a>gapm_actv_init</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gapm_actv.o(i.gapm_actv_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapm_actv_init &rArr; gapm_actv_free &rArr; gapm_scan_actv_clean &rArr; gapm_scan_clear_fragments
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_free
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init
</UL>

<P><STRONG><a name="[29c]"></a>gapm_actv_rand_addr_set_ind</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gapm_actv.o(i.gapm_actv_rand_addr_set_ind))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gapm_actv_rand_addr_set_ind &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_fsm
</UL>

<P><STRONG><a name="[29d]"></a>gapm_actv_retrieve_cmd_cmp_evt</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gapm_actv.o(i.gapm_actv_retrieve_cmd_cmp_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_actv_retrieve_cmd_cmp_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_scan_handler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_per_sync_handler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_init_handler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_adv_handler
</UL>

<P><STRONG><a name="[29f]"></a>gapm_actv_started</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gapm_actv.o(i.gapm_actv_started))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gapm_actv_started &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_scan_handler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_per_sync_handler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_init_handler
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_starting_handler
</UL>

<P><STRONG><a name="[266]"></a>gapm_actv_stopped</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, gapm_actv.o(i.gapm_actv_stopped))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gapm_actv_stopped &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_send_stopped_ind
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_get_next
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_scan_timeout_evt_handler
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_per_adv_sync_lost_evt_handler
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_per_adv_sync_est_evt_handler
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_scan_handler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_per_sync_handler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_init_handler
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_adv_set_term_evt_handler
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_adv_handler
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind
</UL>

<P><STRONG><a name="[2a2]"></a>gapm_addr_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gapm_addr.o(i.gapm_addr_init))
<BR><BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init
</UL>

<P><STRONG><a name="[ac]"></a>gapm_addr_renew_cmd_handler</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gapm_addr.o(i.gapm_addr_renew_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gapm_addr_renew_cmd_handler &rArr; gapm_addr_renew_next_addr &rArr;  gapm_addr_fsm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_renew_next_addr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[ad]"></a>gapm_addr_renew_to_ind_handler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gapm_addr.o(i.gapm_addr_renew_to_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapm_addr_renew_to_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[294]"></a>gapm_addr_set_rand_addr</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, gapm_addr.o(i.gapm_addr_set_rand_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gapm_addr_set_rand_addr &rArr; gapm_addr_fsm &rArr; gapm_addr_renew_next_addr &rArr;  gapm_addr_fsm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_active (via Veneer)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_al_get_local_addr
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_send_dev_bdaddr_ind
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_fsm
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_created
</UL>

<P><STRONG><a name="[28b]"></a>gapm_adv_create</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, gapm_adv.o(i.gapm_adv_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapm_adv_create &rArr; gapm_adv_send_hci_le_set_ext_adv_param_cmd &rArr; gapm_actv_get_hci_own_addr_type
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_alloc
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_adv_param_cmd
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_check_param
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler
</UL>

<P><STRONG><a name="[ab]"></a>gapm_auto_conn_to_ind_handler</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gapm_init.o(i.gapm_auto_conn_to_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_auto_conn_to_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[af]"></a>gapm_cmp_evt_handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gapm_addr.o(i.gapm_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gapm_cmp_evt_handler &rArr; gapm_addr_fsm &rArr; gapm_addr_renew_next_addr &rArr;  gapm_addr_fsm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_fsm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[2b5]"></a>gapm_con_cleanup</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gapm.o(i.gapm_con_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gapm_con_cleanup &rArr; l2cm_cleanup &rArr; l2cc_cleanup &rArr; l2cc_op_complete &rArr; l2cc_send_cmp_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_cleanup
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_cleanup
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_cleanup
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_con_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_disc_cmp_evt_handler
</UL>

<P><STRONG><a name="[2b9]"></a>gapm_con_create</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gapm.o(i.gapm_con_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gapm_con_create &rArr; gapc_con_create
</UL>
<BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_create
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_create
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_create
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_address_type
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_con_create
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_enh_con_cmp_evt_handler
</UL>

<P><STRONG><a name="[26a]"></a>gapm_con_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gapm.o(i.gapm_con_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapm_con_enable &rArr; gattc_con_enable &rArr; atts_process_pdu &rArr; atts_clear_rsp_data
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_con_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_cfm_handler
</UL>

<P><STRONG><a name="[ae]"></a>gapm_dev_bdaddr_ind_handler</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gapm_addr.o(i.gapm_dev_bdaddr_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_dev_bdaddr_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_forward (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[2e0]"></a>gapm_dle_val_check</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gapm.o(i.gapm_dle_val_check))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler
</UL>

<P><STRONG><a name="[a2]"></a>gapm_gen_dh_key_cmd_handler</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gapm_smp.o(i.gapm_gen_dh_key_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapm_gen_dh_key_cmd_handler &rArr; gapm_process_op &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[a0]"></a>gapm_gen_rand_addr_cmd_handler</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gapm_smp.o(i.gapm_gen_rand_addr_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gapm_gen_rand_addr_cmd_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_rand_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[29a]"></a>gapm_get_address_type</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gapm.o(i.gapm_get_address_type))
<BR><BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_con_create
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_send_continue
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_dev_info_cmd_handler
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_get_hci_own_addr_type
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_construct_id_addr_info_pdu
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_adv_param_cmd
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_check_param
</UL>

<P><STRONG><a name="[274]"></a>gapm_get_att_handle</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gapm.o(i.gapm_get_att_handle))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_req_ind_handler
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_dev_info_cfm_handler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dev_info_cfm_handler
</UL>

<P><STRONG><a name="[385]"></a>gapm_get_bdaddr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gapm.o(i.gapm_get_bdaddr))
<BR><BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_send_continue
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_construct_id_addr_info_pdu
</UL>

<P><STRONG><a name="[9e]"></a>gapm_get_dev_info_cmd_handler</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, gapm_cfg.o(i.gapm_get_dev_info_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gapm_get_dev_info_cmd_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_basic_cmd_send_2_controller (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_address_type
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[2e7]"></a>gapm_get_irk</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gapm.o(i.gapm_get_irk))
<BR><BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_send_continue
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_rand_rsp
</UL>

<P><STRONG><a name="[372]"></a>gapm_get_local_public_key</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gapm.o(i.gapm_get_local_public_key))
<BR><BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_confirm_gen_rand
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_public_key_pdu
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rsp_pdu
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[1e3]"></a>gapm_get_max_mtu</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gapm.o(i.gapm_get_max_mtu))
<BR><BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_header_check
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_dbg_pdu_send_cmd_handler
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_pack
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_exc_mtu_cmd_handler
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_mtu_exc_req
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_exc_mtu_rsp_handler
</UL>

<P><STRONG><a name="[296]"></a>gapm_get_operation</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gapm.o(i.gapm_get_operation))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_local_ver_info_cmd_cmp_evt_handler
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_bd_addr_cmd_cmp_evt_handler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_max_adv_data_len_cmd_cmp_evt_handler
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_wlst_size_cmd_cmp_evt_handler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_tx_pwr_cmd_cmp_evt_handler
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_rf_path_comp_cmd_cmp_evt_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_ral_size_cmd_cmp_evt_handler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_ral_addr_cmd_cmp_evt_handler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_pal_size_cmd_cmp_evt_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_nb_supp_adv_sets_cmd_cmp_evt_handler
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_local_p256_public_key_cmp_evt_handler
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_adv_chnl_tx_pw_cmd_cmp_evt_handler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_generate_dhkey_cmp_evt_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_gen_dhkey_stat_evt_handler
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_list_handler
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_fsm
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_stopped
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_retrieve_cmd_cmp_evt
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_deleted
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_rand_rsp
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_encrypt_rsp
</UL>

<P><STRONG><a name="[a3]"></a>gapm_get_pub_key_cmd_handler</STRONG> (Thumb, 146 bytes, Stack size 88 bytes, gapm_smp.o(i.gapm_get_pub_key_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = gapm_get_pub_key_cmd_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_basic_cmd_send_2_controller (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[b1]"></a>gapm_get_ral_addr_cmd_handler</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, gapm_list.o(i.gapm_get_ral_addr_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gapm_get_ral_addr_cmd_handler &rArr; gapm_process_op &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[2a9]"></a>gapm_get_requester</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gapm.o(i.gapm_get_requester))
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_src_id_get (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_test_end_cmd_cmp_evt_handler
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_local_ver_info_cmd_cmp_evt_handler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_max_adv_data_len_cmd_cmp_evt_handler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_tx_pwr_cmd_cmp_evt_handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_suggted_dft_data_len_cmd_cmp_evt_handler
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_rf_path_comp_cmd_cmp_evt_handler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_ral_addr_cmd_cmp_evt_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_nb_supp_adv_sets_cmd_cmp_evt_handler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_max_data_len_cmd_cmp_evt_handler
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_local_p256_public_key_cmp_evt_handler
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_adv_chnl_tx_pw_cmd_cmp_evt_handler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_generate_dhkey_cmp_evt_handler
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_pub_key_cmd_handler
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_create
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_create
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_create
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_resolv_op_cont
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_rand_rsp
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_encrypt_rsp
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_send_list_size_ind
</UL>

<P><STRONG><a name="[2c2]"></a>gapm_init</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gapm.o(i.gapm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gapm_init &rArr; gapc_init &rArr; gapc_cleanup &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create (via Veneer)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_init
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_init
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_operation_cleanup
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init_imp
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[2c5]"></a>gapm_init_attr</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, gapm.o(i.gapm_init_attr))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = gapm_init_attr &rArr; attm_svc_create_db &rArr; attmdb_add_service &rArr; attmdb_svc_init &rArr; attm_uuid16_comp &rArr; attm_uuid_comp &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler
</UL>

<P><STRONG><a name="[2c6]"></a>gapm_init_connection_ind</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, gapm_init.o(i.gapm_init_connection_ind))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gapm_init_connection_ind &rArr; gapm_actv_stopped &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_address_type
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_local_addr
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_stopped
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_send_hci_le_ext_create_con_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_enh_con_cmp_evt_handler
</UL>

<P><STRONG><a name="[28f]"></a>gapm_init_create</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, gapm_init.o(i.gapm_init_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = gapm_init_create &rArr; gapm_actv_created &rArr; gapm_addr_set_rand_addr &rArr; gapm_addr_fsm &rArr; gapm_addr_renew_next_addr &rArr;  gapm_addr_fsm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_address_type
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_is_addr_type_valid
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_created
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler
</UL>

<P><STRONG><a name="[2c9]"></a>gapm_is_addr_type_valid</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gapm_addr.o(i.gapm_is_addr_type_valid))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_is_addr_type_valid
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_create
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_create
</UL>

<P><STRONG><a name="[394]"></a>gapm_is_legacy_pairing_supp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gapm.o(i.gapm_is_legacy_pairing_supp))
<BR><BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_security_req_send
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_start
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_rsp
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_sec_req_pdu
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rsp_pdu
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_req_pdu
</UL>

<P><STRONG><a name="[306]"></a>gapm_is_pref_con_param_pres</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gapm.o(i.gapm_is_pref_con_param_pres))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
</UL>

<P><STRONG><a name="[393]"></a>gapm_is_sec_con_pairing_supp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gapm.o(i.gapm_is_sec_con_pairing_supp))
<BR><BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_security_req_send
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_start
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_rsp
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_req_pdu
</UL>

<P><STRONG><a name="[b2]"></a>gapm_list_rmv_cmd_handle</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, gapm_list.o(i.gapm_list_rmv_cmd_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapm_list_rmv_cmd_handle &rArr; gapm_process_op &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_basic_cmd_send_2_controller (via Veneer)
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_rmv_next_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[b0]"></a>gapm_list_set_cmd_handler</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gapm_list.o(i.gapm_list_set_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapm_list_set_cmd_handler &rArr; gapm_process_op &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_basic_cmd_send_2_controller (via Veneer)
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_add_next_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[298]"></a>gapm_per_sync_clear_fragments</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gapm_per_sync.o(i.gapm_per_sync_clear_fragments))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_per_sync_clear_fragments
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_per_adv_report_evt_handler
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_free
</UL>

<P><STRONG><a name="[28e]"></a>gapm_per_sync_create</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gapm_per_sync.o(i.gapm_per_sync_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = gapm_per_sync_create &rArr; gapm_actv_created &rArr; gapm_addr_set_rand_addr &rArr; gapm_addr_fsm &rArr; gapm_addr_renew_next_addr &rArr;  gapm_addr_fsm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_created
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler
</UL>

<P><STRONG><a name="[28a]"></a>gapm_process_op</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, gapm.o(i.gapm_process_op))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gapm_process_op &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_src_id_get (via Veneer)
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_update_state
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_error_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_use_enc_block_cmd_handler
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_irk_cmd_handler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_channel_map_cmd_handler
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_adv_data_cmd_handler
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_resolv_addr_cmd_handler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_task_add_cmd_handler
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_set_cmd_handler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_rmv_cmd_handle
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_ral_addr_cmd_handler
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_pub_key_cmd_handler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_dev_info_cmd_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_gen_rand_addr_cmd_handler
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_gen_dh_key_cmd_handler
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_renew_cmd_handler
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stop_cmd_handler
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_start_cmd_handler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_delete_cmd_handler
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler
</UL>

<P><STRONG><a name="[b3]"></a>gapm_profile_task_add_cmd_handler</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, gapm_cfg.o(i.gapm_profile_task_add_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gapm_profile_task_add_cmd_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_add_profile
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>gapm_reset_cmd_handler</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gapm_cfg.o(i.gapm_reset_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = gapm_reset_cmd_handler &rArr; rwble_hl_reset &rArr; l2cm_init &rArr; l2cc_init &rArr; l2cc_cleanup &rArr; l2cc_op_complete &rArr; l2cc_send_cmp_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_reset (via Veneer)
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_error_evt
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_reset_continue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[9f]"></a>gapm_resolv_addr_cmd_handler</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gapm_smp.o(i.gapm_resolv_addr_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gapm_resolv_addr_cmd_handler &rArr; gapm_smp_resolv_op_cont &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_resolv_op_cont
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[297]"></a>gapm_scan_actv_clean</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gapm_scan.o(i.gapm_scan_actv_clean))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapm_scan_actv_clean &rArr; gapm_scan_clear_fragments
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_clear_fragments
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_free
</UL>

<P><STRONG><a name="[28c]"></a>gapm_scan_create</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gapm_scan.o(i.gapm_scan_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = gapm_scan_create &rArr; gapm_actv_created &rArr; gapm_addr_set_rand_addr &rArr; gapm_addr_fsm &rArr; gapm_addr_renew_next_addr &rArr;  gapm_addr_fsm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_is_addr_type_valid
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_created
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler
</UL>

<P><STRONG><a name="[28d]"></a>gapm_send_complete_evt</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, gapm.o(i.gapm_send_complete_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_operation_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_test_end_cmd_cmp_evt_handler
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_local_ver_info_cmd_cmp_evt_handler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_max_adv_data_len_cmd_cmp_evt_handler
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_wlst_size_cmd_cmp_evt_handler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_tx_pwr_cmd_cmp_evt_handler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_suggted_dft_data_len_cmd_cmp_evt_handler
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_rf_path_comp_cmd_cmp_evt_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_ral_size_cmd_cmp_evt_handler
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_ral_addr_cmd_cmp_evt_handler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_pal_size_cmd_cmp_evt_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_nb_supp_adv_sets_cmd_cmp_evt_handler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_max_data_len_cmd_cmp_evt_handler
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_local_p256_public_key_cmp_evt_handler
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_adv_chnl_tx_pw_cmd_cmp_evt_handler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_generate_dhkey_cmp_evt_handler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_gen_dhkey_stat_evt_handler
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_list_handler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_basic_cmd_cmp_evt_rl_cfg_handler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_basic_cmd_cmp_evt_cfg_handler
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_irk_cmd_handler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_channel_map_cmd_handler
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_adv_data_cmd_handler
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_task_add_cmd_handler
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_pub_key_cmd_handler
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_dev_info_cmd_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_gen_rand_addr_cmd_handler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_adv_handler
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_renew_next_addr
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_stopped
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_started
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_rand_addr_set_ind
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_deleted
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_created
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stop_cmd_handler
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_start_cmd_handler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_delete_cmd_handler
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_create_cmd_handler
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_resolv_op_cont
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_rand_rsp
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_encrypt_rsp
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_setup_continue
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_reset_continue
</UL>

<P><STRONG><a name="[2d3]"></a>gapm_send_error_evt</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gapm.o(i.gapm_send_error_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_send_error_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_reset_cmd_handler
</UL>

<P><STRONG><a name="[aa]"></a>gapm_set_adv_data_cmd_handler</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, gapm_adv.o(i.gapm_set_adv_data_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gapm_set_adv_data_cmd_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_set_data
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_check_data_sanity
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[9d]"></a>gapm_set_channel_map_cmd_handler</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, gapm_cfg.o(i.gapm_set_channel_map_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gapm_set_channel_map_cmd_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[9c]"></a>gapm_set_dev_config_cmd_handler</STRONG> (Thumb, 412 bytes, Stack size 104 bytes, gapm_cfg.o(i.gapm_set_dev_config_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = gapm_set_dev_config_cmd_handler &rArr; gattm_init_attr &rArr; attm_svc_create_db &rArr; attmdb_add_service &rArr; attmdb_svc_init &rArr; attm_uuid16_comp &rArr; attm_uuid_comp &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_max_mtu
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_max_mps
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init_attr
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_destroy
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_update_perm
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_init
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_attr
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_att_handle
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_dle_val_check
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_setup_continue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[b6]"></a>gapm_set_irk_cmd_handler</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gapm_cfg.o(i.gapm_set_irk_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gapm_set_irk_cmd_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[2e3]"></a>gapm_set_max_mps</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gapm.o(i.gapm_set_max_mps))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler
</UL>

<P><STRONG><a name="[2e2]"></a>gapm_set_max_mtu</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gapm.o(i.gapm_set_max_mtu))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler
</UL>

<P><STRONG><a name="[309]"></a>gapm_svc_chg_en</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gapm.o(i.gapm_svc_chg_en))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init_attr
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_svc_changed_cmd_handler
</UL>

<P><STRONG><a name="[2d0]"></a>gapm_update_state</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gapm.o(i.gapm_update_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_operation_cleanup
</UL>

<P><STRONG><a name="[a1]"></a>gapm_use_enc_block_cmd_handler</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, gapm_smp.o(i.gapm_use_enc_block_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapm_use_enc_block_cmd_handler &rArr; gapm_process_op &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_process_op
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_rand_req
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_encrypt_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[154]"></a>gatt_add_client</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, gatt_api.o(i.gatt_add_client))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = gatt_add_client &rArr; gatt_add_client_uuid &rArr; gatt_write_peer_svc_to_flash &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_profile_task_add
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_client_uuid
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANCS_gatt_add_client
</UL>

<P><STRONG><a name="[2eb]"></a>gatt_add_client_uuid</STRONG> (Thumb, 642 bytes, Stack size 280 bytes, gatt_api.o(i.gatt_add_client_uuid))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = gatt_add_client_uuid &rArr; gatt_write_peer_svc_to_flash &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_write_peer_svc_to_flash
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_regist_peer_prf_info
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clr_peer_svc
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_client
</UL>

<P><STRONG><a name="[2f0]"></a>gatt_add_service</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, gatt_api.o(i.gatt_add_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gatt_add_service &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_profile_task_add
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_gatt_add_service
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_gatt_add_service
</UL>

<P><STRONG><a name="[26b]"></a>gatt_clear_remote_svc</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gatt_api.o(i.gatt_clear_remote_svc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gatt_clear_remote_svc
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_req_ind_handler
</UL>

<P><STRONG><a name="[158]"></a>gatt_client_enable_ntf</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gatt_api.o(i.gatt_client_enable_ntf))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gatt_client_enable_ntf &rArr; gatt_client_write_req_with_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_req_with_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANCS_gatt_msg_handler
</UL>

<P><STRONG><a name="[15a]"></a>gatt_client_write_req</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gatt_api.o(i.gatt_client_write_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gatt_client_write_req &rArr; gatt_client_write_req_with_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_req_with_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANCS_gatt_write_req
</UL>

<P><STRONG><a name="[2f2]"></a>gatt_client_write_req_with_handle</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, gatt_api.o(i.gatt_client_write_req_with_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gatt_client_write_req_with_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_write_req
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_client_enable_ntf
</UL>

<P><STRONG><a name="[18a]"></a>gatt_discovery_peer_svc</STRONG> (Thumb, 200 bytes, Stack size 512 bytes, gatt_api.o(i.gatt_discovery_peer_svc))
<BR><BR>[Stack]<UL><LI>Max Depth = 624<LI>Call Chain = gatt_discovery_peer_svc &rArr; gatt_check_peer_svc &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_load_peer_svc_from_flash
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_regist_peer_prf_info
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_check_peer_svc
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_evt_cb
</UL>

<P><STRONG><a name="[2fa]"></a>gatt_get_free_svc_id</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gatt_api.o(i.gatt_get_free_svc_id))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_profile_task_add
</UL>

<P><STRONG><a name="[15d]"></a>gatt_get_mtu</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gatt_api.o(i.gatt_get_mtu))
<BR><BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_mtu
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANCS_recv_ntf_src
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data
</UL>

<P><STRONG><a name="[2f3]"></a>gatt_load_peer_svc_from_flash</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, user_bond_manage.o(i.gatt_load_peer_svc_from_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gatt_load_peer_svc_from_flash &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read (via Veneer)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_discovery_peer_svc
</UL>

<P><STRONG><a name="[1a1]"></a>gatt_mtu_exchange_req</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gatt_api.o(i.gatt_mtu_exchange_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gatt_mtu_exchange_req
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data
</UL>

<P><STRONG><a name="[2f8]"></a>gatt_notification</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gatt_api.o(i.gatt_notification))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gatt_notification &rArr; gatt_notification_with_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_notification_with_handle
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntf_data
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_gatt_report_notify
</UL>

<P><STRONG><a name="[2f9]"></a>gatt_notification_with_handle</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, gatt_api.o(i.gatt_notification_with_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gatt_notification_with_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_notification
</UL>

<P><STRONG><a name="[2ea]"></a>gatt_profile_task_add</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, gatt_api.o(i.gatt_profile_task_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gatt_profile_task_add
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_set_evt_func
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_get_free_svc_id
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_service
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_client
</UL>

<P><STRONG><a name="[2ee]"></a>gatt_write_peer_svc_to_flash</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, user_bond_manage.o(i.gatt_write_peer_svc_to_flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gatt_write_peer_svc_to_flash &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write (via Veneer)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read (via Veneer)
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase (via Veneer)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_client_uuid
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
</UL>

<P><STRONG><a name="[2fd]"></a>gattc_cleanup</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, gattc.o(i.gattc_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gattc_cleanup &rArr; gattc_send_complete_evt &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_rsp_data
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_read_cache
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_prep_data
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_operation_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_init
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_cleanup
</UL>

<P><STRONG><a name="[2bd]"></a>gattc_con_enable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gattc.o(i.gattc_con_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gattc_con_enable &rArr; atts_process_pdu &rArr; atts_clear_rsp_data
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_process_pdu
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_update_state
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_con_enable
</UL>

<P><STRONG><a name="[301]"></a>gattc_create</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, gattc.o(i.gattc_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gattc_create &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init (via Veneer)
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_update_state
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_create
</UL>

<P><STRONG><a name="[1f0]"></a>gattc_get_mtu</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gattc.o(i.gattc_get_mtu))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_get_mtu
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_header_check
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cmd_handler
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_event
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_req
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_type_req
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_grp_type_req
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_blob_req
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_info_req
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_by_type_req
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_rsp_handler
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_type_rsp_handler
</UL>

<P><STRONG><a name="[1e5]"></a>gattc_get_operation</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gattc.o(i.gattc_get_operation))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_cmp_evt_handler
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_disc_svc_ind_handler
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_disc_svc_incl_ind_handler
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_disc_char_ind_handler
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_disc_char_desc_ind_handler
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_sign_ind_handler
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_wr_rsp_handler
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_rsp_handler
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_mult_rsp_handler
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_type_rsp_handler
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_grp_type_rsp_handler
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_prep_wr_rsp_handler
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_find_info_rsp_handler
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_find_by_type_rsp_handler
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_exe_wr_rsp_handler
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_exc_mtu_rsp_handler
</UL>

<P><STRONG><a name="[1e6]"></a>gattc_get_operation_ptr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gattc.o(i.gattc_get_operation_ptr))
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_sdp_svc_disc_cmd_handler
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_process_op
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_sign_ind_handler
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_read_ind
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_rsp_handler
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_mult_rsp_handler
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_type_rsp_handler
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_grp_type_rsp_handler
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_prep_wr_rsp_handler
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_find_info_rsp_handler
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_find_by_type_rsp_handler
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_exe_wr_rsp_handler
</UL>

<P><STRONG><a name="[1e7]"></a>gattc_get_requester</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gattc.o(i.gattc_get_requester))
<BR><BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_src_id_get (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_read_ind
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_mult_rsp_handler
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_type_rsp_handler
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_grp_type_rsp_handler
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_find_info_rsp_handler
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_find_by_type_rsp_handler
</UL>

<P><STRONG><a name="[303]"></a>gattc_init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gattc.o(i.gattc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gattc_init &rArr; gattc_cleanup &rArr; gattc_send_complete_evt &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create (via Veneer)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init
</UL>

<P><STRONG><a name="[1e8]"></a>gattc_reschedule_operation</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, gattc.o(i.gattc_reschedule_operation))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattc_reschedule_operation
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_src_id_get (via Veneer)
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_forward (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_rsp_handler
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_type_rsp_handler
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_grp_type_rsp_handler
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_prep_wr_rsp_handler
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_find_info_rsp_handler
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_find_by_type_rsp_handler
</UL>

<P><STRONG><a name="[1e2]"></a>gattc_send_complete_evt</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gattc.o(i.gattc_send_complete_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gattc_send_complete_evt &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_update_state
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_requester
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_operation_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cleanup
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_cmp_evt_handler
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cmd_handler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_timeout_handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_evt_cmd_handler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_sdp_svc_disc_cmd_handler
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_reg_to_peer_evt_cmd_handler
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_cmd_handler
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_disc_cmd_handler
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cmp_evt_handler
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_sign_ind_handler
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_wr_rsp_handler
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_rsp_handler
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_mult_rsp_handler
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_type_rsp_handler
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_grp_type_rsp_handler
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_prep_wr_rsp_handler
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_find_info_rsp_handler
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_find_by_type_rsp_handler
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_exe_wr_rsp_handler
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_exc_mtu_rsp_handler
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_err_rsp_handler
</UL>

<P><STRONG><a name="[304]"></a>gattc_send_error_evt</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gattc.o(i.gattc_send_error_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattc_send_error_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_svc_changed_cmd_handler
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_process_op
</UL>

<P><STRONG><a name="[1e4]"></a>gattc_set_mtu</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, gattc.o(i.gattc_set_mtu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattc_set_mtu
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_mtu_exc_req
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_exc_mtu_rsp_handler
</UL>

<P><STRONG><a name="[305]"></a>gattc_set_operation_ptr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gattc.o(i.gattc_set_operation_ptr))
<BR><BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_process_op
</UL>

<P><STRONG><a name="[300]"></a>gattc_update_state</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gattc.o(i.gattc_update_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_create
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_con_enable
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_process_op
</UL>

<P><STRONG><a name="[2b7]"></a>gattm_cleanup</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gattm.o(i.gattm_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gattm_cleanup &rArr; gattc_cleanup &rArr; gattc_send_complete_evt &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_con_cleanup
</UL>

<P><STRONG><a name="[2bb]"></a>gattm_create</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gattm.o(i.gattm_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gattm_create &rArr; gattc_create &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_create
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_con_create
</UL>

<P><STRONG><a name="[30d]"></a>gattm_init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gattm.o(i.gattm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gattm_init &rArr; gattc_init &rArr; gattc_cleanup &rArr; gattc_send_complete_evt &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create (via Veneer)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init_imp
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[2e1]"></a>gattm_init_attr</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, gattm.o(i.gattm_init_attr))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = gattm_init_attr &rArr; attm_svc_create_db &rArr; attmdb_add_service &rArr; attmdb_svc_init &rArr; attm_uuid16_comp &rArr; attm_uuid_comp &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_value
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_svc_chg_en
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler
</UL>

<P><STRONG><a name="[2fc]"></a>gattm_svc_get_start_hdl</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gattm.o(i.gattm_svc_get_start_hdl))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_svc_changed_cmd_handler
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_req_ind_handler
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_att_info_req_ind_handler
</UL>

<P><STRONG><a name="[244]"></a>getMotorData</STRONG> (Thumb, 250 bytes, Stack size 24 bytes, device_info_flash.o(i.getMotorData))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = getMotorData &rArr; motor_init &rArr; pwm2_update &rArr; pwm_config
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;str_to_char
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAppID
</UL>

<P><STRONG><a name="[360]"></a>get_gatt_default_itf</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gatt_api.o(i.get_gatt_default_itf))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_itf_get_imp
</UL>

<P><STRONG><a name="[232]"></a>get_stored_info_req</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, app_proj_event.o(i.get_stored_info_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = get_stored_info_req &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_init
</UL>

<P><STRONG><a name="[17c]"></a>gpio_init</STRONG> (Thumb, 696 bytes, Stack size 40 bytes, driver_gpio.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_deinit
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adc_init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adc_deinit
</UL>

<P><STRONG><a name="[17d]"></a>gpio_read_pin</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, driver_gpio.o(i.gpio_read_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_read_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyTask
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charge_task
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adc_deinit
</UL>

<P><STRONG><a name="[190]"></a>gpio_write_pin</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, driver_gpio.o(i.gpio_write_pin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_write_pin
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charge_task
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_deinit
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
</UL>

<P><STRONG><a name="[77]"></a>hci_basic_cmd_cmp_evt_cfg_handler</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, gapm_cfg.o(i.hci_basic_cmd_cmp_evt_cfg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hci_basic_cmd_cmp_evt_cfg_handler &rArr; gapm_op_setup_continue &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_setup_continue
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_reset_continue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>hci_basic_cmd_cmp_evt_rl_cfg_handler</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gapm_cfg.o(i.hci_basic_cmd_cmp_evt_rl_cfg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hci_basic_cmd_cmp_evt_rl_cfg_handler &rArr; gapm_op_setup_continue &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_setup_continue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[98]"></a>hci_le_adv_set_term_evt_handler</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gapm_adv.o(i.hci_le_adv_set_term_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hci_le_adv_set_term_evt_handler &rArr; gapm_actv_stopped &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_set_local_addr
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_stopped
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[f2]"></a>hci_le_ch_sel_algo_evt_handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gapc_hci.o(i.hci_le_ch_sel_algo_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_le_ch_sel_algo_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[8a]"></a>hci_le_cmd_cmp_evt_addr_handler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gapm_addr.o(i.hci_le_cmd_cmp_evt_addr_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = hci_le_cmd_cmp_evt_addr_handler &rArr; hci_le_cmd_cmp_evt_adv_handler &rArr; hci_le_cmd_cmp_evt_creating_handler &rArr; gapm_actv_created &rArr; gapm_addr_set_rand_addr &rArr; gapm_addr_fsm &rArr; gapm_addr_renew_next_addr &rArr;  gapm_addr_fsm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_adv_handler
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_fsm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>hci_le_cmd_cmp_evt_adv_handler</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, gapm_adv.o(i.hci_le_cmd_cmp_evt_adv_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = hci_le_cmd_cmp_evt_adv_handler &rArr; hci_le_cmd_cmp_evt_creating_handler &rArr; gapm_actv_created &rArr; gapm_addr_set_rand_addr &rArr; gapm_addr_fsm &rArr; gapm_addr_renew_next_addr &rArr;  gapm_addr_fsm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_stopped
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_retrieve_cmd_cmp_evt
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_deleted
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_starting_handler
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_creating_handler
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_set_data
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_per_adv_en_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_addr_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[89]"></a>hci_le_cmd_cmp_evt_init_handler</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, gapm_init.o(i.hci_le_cmd_cmp_evt_init_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hci_le_cmd_cmp_evt_init_handler &rArr; gapm_actv_stopped &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_stopped
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_started
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_retrieve_cmd_cmp_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[82]"></a>hci_le_cmd_cmp_evt_list_handler</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, gapm_list.o(i.hci_le_cmd_cmp_evt_list_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hci_le_cmd_cmp_evt_list_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_rmv_next_entry
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_add_next_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>hci_le_cmd_cmp_evt_per_sync_handler</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gapm_per_sync.o(i.hci_le_cmd_cmp_evt_per_sync_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hci_le_cmd_cmp_evt_per_sync_handler &rArr; gapm_actv_stopped &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_stopped
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_started
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_retrieve_cmd_cmp_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>hci_le_cmd_cmp_evt_scan_handler</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gapm_scan.o(i.hci_le_cmd_cmp_evt_scan_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hci_le_cmd_cmp_evt_scan_handler &rArr; gapm_actv_stopped &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_stopped
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_started
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_retrieve_cmd_cmp_evt
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_hci_le_set_ext_scan_en_cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>hci_le_enh_con_cmp_evt_handler</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gapm_actv.o(i.hci_le_enh_con_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = hci_le_enh_con_cmp_evt_handler &rArr; gapm_init_connection_ind &rArr; gapm_actv_stopped &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_con_create
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>hci_le_ext_adv_report_evt_handler</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, gapm_scan.o(i.hci_le_ext_adv_report_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = hci_le_ext_adv_report_evt_handler &rArr; gapm_scan_send_adv_report_ind &rArr; gapm_scan_filter_packet &rArr; gapm_scan_add_to_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_store_fragment
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_adv_report_ind
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_clear_fragments
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[8f]"></a>hci_le_gen_dhkey_stat_evt_handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gapm_smp.o(i.hci_le_gen_dhkey_stat_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hci_le_gen_dhkey_stat_evt_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>hci_le_generate_dhkey_cmp_evt_handler</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, gapm_smp.o(i.hci_le_generate_dhkey_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hci_le_generate_dhkey_cmp_evt_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[93]"></a>hci_le_per_adv_report_evt_handler</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, gapm_per_sync.o(i.hci_le_per_adv_report_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hci_le_per_adv_report_evt_handler &rArr; gapm_per_sync_send_adv_report_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_clear_fragments
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_send_adv_report_ind
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_get_activity
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>hci_le_per_adv_sync_est_evt_handler</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, gapm_per_sync.o(i.hci_le_per_adv_sync_est_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hci_le_per_adv_sync_est_evt_handler &rArr; gapm_actv_stopped &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_stopped
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_get_activity
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>hci_le_per_adv_sync_lost_evt_handler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gapm_per_sync.o(i.hci_le_per_adv_sync_lost_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hci_le_per_adv_sync_lost_evt_handler &rArr; gapm_actv_stopped &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_stopped
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_get_activity
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>hci_le_rd_adv_chnl_tx_pw_cmd_cmp_evt_handler</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gapm_cfg.o(i.hci_le_rd_adv_chnl_tx_pw_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hci_le_rd_adv_chnl_tx_pw_cmd_cmp_evt_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[79]"></a>hci_le_rd_buff_size_cmd_cmp_evt_handler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gapm_cfg.o(i.hci_le_rd_buff_size_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hci_le_rd_buff_size_cmd_cmp_evt_handler &rArr; gapm_op_reset_continue &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_reset_continue
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_set_link_layer_buff_size
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[96]"></a>hci_le_rd_local_p256_public_key_cmp_evt_handler</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, gapm_cfg.o(i.hci_le_rd_local_p256_public_key_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hci_le_rd_local_p256_public_key_cmp_evt_handler &rArr; gapm_op_setup_continue &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_setup_continue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>hci_le_rd_max_data_len_cmd_cmp_evt_handler</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, gapm_cfg.o(i.hci_le_rd_max_data_len_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hci_le_rd_max_data_len_cmd_cmp_evt_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>hci_le_rd_nb_supp_adv_sets_cmd_cmp_evt_handler</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gapm_cfg.o(i.hci_le_rd_nb_supp_adv_sets_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hci_le_rd_nb_supp_adv_sets_cmd_cmp_evt_handler &rArr; gapm_op_reset_continue &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_reset_continue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>hci_le_rd_pal_size_cmd_cmp_evt_handler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gapm_list.o(i.hci_le_rd_pal_size_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hci_le_rd_pal_size_cmd_cmp_evt_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_send_list_size_ind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[8d]"></a>hci_le_rd_ral_addr_cmd_cmp_evt_handler</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, gapm_list.o(i.hci_le_rd_ral_addr_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hci_le_rd_ral_addr_cmd_cmp_evt_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[8c]"></a>hci_le_rd_ral_size_cmd_cmp_evt_handler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gapm_list.o(i.hci_le_rd_ral_size_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hci_le_rd_ral_size_cmd_cmp_evt_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_send_list_size_ind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>hci_le_rd_rf_path_comp_cmd_cmp_evt_handler</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gapm_cfg.o(i.hci_le_rd_rf_path_comp_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hci_le_rd_rf_path_comp_cmd_cmp_evt_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[7d]"></a>hci_le_rd_suggted_dft_data_len_cmd_cmp_evt_handler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gapm_cfg.o(i.hci_le_rd_suggted_dft_data_len_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hci_le_rd_suggted_dft_data_len_cmd_cmp_evt_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>hci_le_rd_tx_pwr_cmd_cmp_evt_handler</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gapm_cfg.o(i.hci_le_rd_tx_pwr_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hci_le_rd_tx_pwr_cmd_cmp_evt_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>hci_le_rd_wlst_size_cmd_cmp_evt_handler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gapm_list.o(i.hci_le_rd_wlst_size_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hci_le_rd_wlst_size_cmd_cmp_evt_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_send_list_size_ind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>hci_le_read_max_adv_data_len_cmd_cmp_evt_handler</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, gapm_cfg.o(i.hci_le_read_max_adv_data_len_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hci_le_read_max_adv_data_len_cmd_cmp_evt_handler &rArr; gapm_op_reset_continue &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_reset_continue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[99]"></a>hci_le_scan_req_rcvd_evt_handler</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gapm_adv.o(i.hci_le_scan_req_rcvd_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hci_le_scan_req_rcvd_evt_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[91]"></a>hci_le_scan_timeout_evt_handler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gapm_scan.o(i.hci_le_scan_timeout_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hci_le_scan_timeout_evt_handler &rArr; gapm_actv_stopped &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_stopped
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[7c]"></a>hci_rd_bd_addr_cmd_cmp_evt_handler</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, gapm_cfg.o(i.hci_rd_bd_addr_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hci_rd_bd_addr_cmd_cmp_evt_handler &rArr; gapm_op_setup_continue &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_setup_continue
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_reset_continue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[7a]"></a>hci_rd_buff_size_cmd_cmp_evt_handler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gapm_cfg.o(i.hci_rd_buff_size_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hci_rd_buff_size_cmd_cmp_evt_handler &rArr; gapm_op_reset_continue &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_reset_continue
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_set_link_layer_buff_size
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>hci_rd_local_ver_info_cmd_cmp_evt_handler</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, gapm_cfg.o(i.hci_rd_local_ver_info_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hci_rd_local_ver_info_cmd_cmp_evt_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[78]"></a>hci_test_end_cmd_cmp_evt_handler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gapm_cfg.o(i.hci_test_end_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hci_test_end_cmd_cmp_evt_handler &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[2b4]"></a>jump_table_get_static_keys</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, jump_table_host.o(i.jump_table_get_static_keys))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = jump_table_get_static_keys &rArr; flash_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase (via Veneer)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_table_param_get
</UL>

<P><STRONG><a name="[1]"></a>jump_table_memmory_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, jump_table_host.o(i.jump_table_memmory_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = jump_table_memmory_init
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_mem_init (via Veneer)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table_host.o(jump_table_2)
</UL>
<P><STRONG><a name="[2b3]"></a>jump_table_set_static_keys</STRONG> (Thumb, 140 bytes, Stack size 144 bytes, jump_table_host.o(i.jump_table_set_static_keys))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = jump_table_set_static_keys &rArr; flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write (via Veneer)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read (via Veneer)
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase (via Veneer)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_table_param_set
</UL>

<P><STRONG><a name="[320]"></a>keyTask</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, app_key.o(i.keyTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = keyTask &rArr; power_on &rArr; sp_start_adv &rArr; gap_set_advertising_rsp_data &rArr; appm_set_scan_response_data &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_off
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock_on
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock_off
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_read_pin
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_task_timer_handler
</UL>

<P><STRONG><a name="[327]"></a>l2cc_cleanup</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, l2cc.o(i.l2cc_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = l2cc_cleanup &rArr; l2cc_op_complete &rArr; l2cc_send_cmp_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_send_cmp_evt
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_op_complete
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_cleanup
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_init
</UL>

<P><STRONG><a name="[32a]"></a>l2cc_create</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, l2cc.o(i.l2cc_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = l2cc_create
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_create
</UL>

<P><STRONG><a name="[32b]"></a>l2cc_data_send</STRONG> (Thumb, 370 bytes, Stack size 56 bytes, l2cc.o(i.l2cc_data_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = l2cc_data_send &rArr; l2cc_pdu_pack
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_acl_tx_free (via Veneer)
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_acl_tx_alloc (via Veneer)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_tx_status
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_send_cmp_evt
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_pack
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_dbg_pdu_pack
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_l2cap_tx_handler
</UL>

<P><STRONG><a name="[32e]"></a>l2cc_dbg_pdu_pack</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, l2cc_pdu.o(i.l2cc_dbg_pdu_pack))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = l2cc_dbg_pdu_pack
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_data_send
</UL>

<P><STRONG><a name="[331]"></a>l2cc_init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, l2cc.o(i.l2cc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = l2cc_init &rArr; l2cc_cleanup &rArr; l2cc_op_complete &rArr; l2cc_send_cmp_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create (via Veneer)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_init
</UL>

<P><STRONG><a name="[328]"></a>l2cc_op_complete</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, l2cc.o(i.l2cc_op_complete))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = l2cc_op_complete &rArr; l2cc_send_cmp_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_update_state
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_send_cmp_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_cleanup
</UL>

<P><STRONG><a name="[1ee]"></a>l2cc_pdu_alloc</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, l2cc_task.o(i.l2cc_pdu_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_sig_send_cmd_reject
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_hdl_cfm
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_execute
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cmd_handler
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_cmd_handler
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_exc_mtu_cmd_handler
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_disc_cmd_handler
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_sign_ind_handler
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_rsp_send
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_event
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_error
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_req
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_type_req
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_grp_type_req
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_blob_req
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_prepare_write_req
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_mtu_exc_req
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_info_req
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_by_type_req
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_execute_write_req
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_sig_send_param_resp
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cmd_handler
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_rd_by_type_rsp_handler
</UL>

<P><STRONG><a name="[311]"></a>l2cc_pdu_header_check</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, l2cc_pdu.o(i.l2cc_pdu_header_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = l2cc_pdu_header_check
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_mtu
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_max_mtu
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_acl_data_handler
</UL>

<P><STRONG><a name="[32d]"></a>l2cc_pdu_pack</STRONG> (Thumb, 690 bytes, Stack size 48 bytes, l2cc_pdu.o(i.l2cc_pdu_pack))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = l2cc_pdu_pack
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_max_mtu
</UL>
<BR>[Called By]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_data_send
</UL>

<P><STRONG><a name="[310]"></a>l2cc_pdu_rx_init</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, l2cc_pdu.o(i.l2cc_pdu_rx_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = l2cc_pdu_rx_init
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_acl_data_handler
</UL>

<P><STRONG><a name="[1f3]"></a>l2cc_pdu_send</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, l2cc_task.o(i.l2cc_pdu_send))
<BR><BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_sig_send_cmd_reject
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_att_req
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_rsp_send
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_event
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_error
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_req
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_type_req
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_grp_type_req
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_blob_req
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_prepare_write_req
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_mtu_exc_req
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_info_req
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_by_type_req
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_execute_write_req
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_sig_send_param_resp
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_cmd_handler
</UL>

<P><STRONG><a name="[312]"></a>l2cc_pdu_unpack</STRONG> (Thumb, 656 bytes, Stack size 80 bytes, l2cc_pdu.o(i.l2cc_pdu_unpack))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = l2cc_pdu_unpack
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_acl_data_handler
</UL>

<P><STRONG><a name="[329]"></a>l2cc_send_cmp_evt</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, l2cc.o(i.l2cc_send_cmp_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = l2cc_send_cmp_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send_cmd_handler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_lecb_sdu_send_cmd_handler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_dbg_pdu_send_cmd_handler
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_op_complete
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_data_send
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_cleanup
</UL>

<P><STRONG><a name="[333]"></a>l2cc_sig_pdu_recv_handler</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, l2cc_sig.o(i.l2cc_sig_pdu_recv_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = l2cc_sig_pdu_recv_handler &rArr; l2cc_sig_send_cmd_reject &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_sig_send_cmd_reject
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler
</UL>

<P><STRONG><a name="[326]"></a>l2cc_sig_send_cmd_reject</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, l2cc_sig.o(i.l2cc_sig_send_cmd_reject))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = l2cc_sig_send_cmd_reject &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_sig_pdu_recv_handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_conn_param_upd_resp_handler
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2c_code_conn_param_upd_req_handler
</UL>

<P><STRONG><a name="[332]"></a>l2cc_update_state</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, l2cc.o(i.l2cc_update_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = l2cc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_op_complete
</UL>

<P><STRONG><a name="[2b6]"></a>l2cm_cleanup</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, l2cm.o(i.l2cm_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = l2cm_cleanup &rArr; l2cc_cleanup &rArr; l2cc_op_complete &rArr; l2cc_send_cmp_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_tx_status
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_con_cleanup
</UL>

<P><STRONG><a name="[2ba]"></a>l2cm_create</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, l2cm.o(i.l2cm_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = l2cm_create &rArr; l2cc_create
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_create
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_con_create
</UL>

<P><STRONG><a name="[2ce]"></a>l2cm_get_nb_buffer_available</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, l2cm.o(i.l2cm_get_nb_buffer_available))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_nb_cmp_pkts_evt_handler
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_op_reset_continue
</UL>

<P><STRONG><a name="[336]"></a>l2cm_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, l2cm.o(i.l2cm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = l2cm_init &rArr; l2cc_init &rArr; l2cc_cleanup &rArr; l2cc_op_complete &rArr; l2cc_send_cmp_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_clear (via Veneer)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_callback_set (via Veneer)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_init_imp
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_hl_reset
</UL>

<P><STRONG><a name="[31a]"></a>l2cm_set_link_layer_buff_size</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, l2cm.o(i.l2cm_set_link_layer_buff_size))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_buff_size_cmd_cmp_evt_handler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_buff_size_cmd_cmp_evt_handler
</UL>

<P><STRONG><a name="[330]"></a>l2cm_tx_status</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, l2cm.o(i.l2cm_tx_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = l2cm_tx_status
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send_cmd_handler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_dbg_pdu_send_cmd_handler
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_cleanup
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_data_send
</UL>

<P><STRONG><a name="[322]"></a>lock_off</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_key.o(i.lock_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = lock_off &rArr; sp_start_adv &rArr; gap_set_advertising_rsp_data &rArr; appm_set_scan_response_data &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_start_adv
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyTask
</UL>

<P><STRONG><a name="[323]"></a>lock_on</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_key.o(i.lock_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = lock_on &rArr; rf_goto_sleep &rArr; os_timer_start &rArr; os_timer_stop &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_goto_sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyTask
</UL>

<P><STRONG><a name="[33a]"></a>log_init</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, co_log.o(i.log_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = log_init &rArr; uart_init
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init (via Veneer)
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_port_mux (via Veneer)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_port_pull
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_main
</UL>

<P><STRONG><a name="[176]"></a>log_printf</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, co_log.o(i.log_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vprintf
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_service
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_evt_cb
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_start_adv
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_init
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_req
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proj_init
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_client
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_destroy
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_timer_handle
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_insert
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scanning_completed_ind_func
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_per_sync_completed_ind_func
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_complete_ind_func
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_deleted_ind_func
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_created_ind_func
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_write_peer_svc_to_flash
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_load_peer_svc_from_flash
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_check_peer_svc
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_conn
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_response_data
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_per_adv_data
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_param
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_data
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_security_ind_handler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_write_info_to_flash
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_store_info
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_read_info_from_flash
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_get_info
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_addr_resolve_cb
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stored_info_req
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_success_ind_func
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_slave_encrypted_ind_func
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_req_ind_func
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_paring_info_ind_func
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_master_encrypted_ind_func
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_white_list_ind_func
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_phy_rejected_ind_func
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_params_update_ind_func
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_params_rejected_ind_func
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_phy_ind_func
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_per_sync_established_ind_func
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_disconnect_ind_func
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_master_encrypt_compeleted_ind_func
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_conn_complete_ind_func
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_disc_svc_ind_handler
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_public_key_pdu
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_keypress_notification_pdu
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_dhkey_check_pdu
</UL>

<P><STRONG><a name="[175]"></a>log_printf_level</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, co_log.o(i.log_printf_level))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = log_printf_level &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_service
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_evt_cb
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_start_adv
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_init
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_req
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proj_init
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_client
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_destroy
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cmp_evt_handler
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_timer_handle
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_insert
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scanning_completed_ind_func
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_per_sync_completed_ind_func
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_complete_ind_func
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_deleted_ind_func
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_created_ind_func
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_write_peer_svc_to_flash
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_load_peer_svc_from_flash
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_check_peer_svc
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_stop_advertising
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_conn
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_advertising
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_scan_response_data
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_per_adv_data
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_param
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_set_advertising_data
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_security_ind_handler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_req_ind_handler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_ind_handler
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_write_info_to_flash
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_store_info
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_read_info_from_flash
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_get_info
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_addr_resolve_cb
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stored_info_req
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_success_ind_func
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_slave_encrypted_ind_func
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_req_ind_func
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_paring_info_ind_func
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_master_encrypted_ind_func
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_white_list_ind_func
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_phy_rejected_ind_func
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_params_update_ind_func
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_params_rejected_ind_func
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_phy_ind_func
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_per_sync_established_ind_func
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_disconnect_ind_func
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_master_encrypt_compeleted_ind_func
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_conn_complete_ind_func
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_disc_svc_ind_handler
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_public_key_pdu
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_keypress_notification_pdu
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_dhkey_check_pdu
</UL>

<P><STRONG><a name="[33f]"></a>lvd_threshold</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, driver_pmu.o(i.lvd_threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lvd_threshold &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_lvd_en
</UL>

<P><STRONG><a name="[2a5]"></a>m_al_get_local_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, m_al_task.o(i.m_al_get_local_addr))
<BR><BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_set_rand_addr
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_creating_handler
</UL>

<P><STRONG><a name="[177]"></a>m_tb_state_is_feature_sup</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, m_tb_state.o(i.m_tb_state_is_feature_sup))
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_act_created_ind_func
</UL>

<P><STRONG><a name="[2d5]"></a>mesh_set_runtime</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, mesh_api.o(i.mesh_set_runtime))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = mesh_set_runtime &rArr; prf_get_task_from_id
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_get_task_from_id
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_added_ind_handler
</UL>

<P><STRONG><a name="[30f]"></a>motor_init</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_pwm.o(i.motor_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = motor_init &rArr; pwm2_update &rArr; pwm_config
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm2_update
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_update
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_gatt_msg_handler
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_off
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock_on
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock_off
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMotorData
</UL>

<P><STRONG><a name="[321]"></a>motor_stop</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_pwm.o(i.motor_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = motor_stop &rArr; pwm2_update &rArr; pwm_config
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm2_update
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_update
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyTask
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_task_timer_handler
</UL>

<P><STRONG><a name="[340]"></a>motor_task</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, app_pwm.o(i.motor_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = motor_task &rArr; pwm2_update &rArr; pwm_config
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm2_update
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_update
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_task_timer_handler
</UL>

<P><STRONG><a name="[16e]"></a>ntf_data</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, band.o(i.ntf_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ntf_data &rArr; gatt_notification &rArr; gatt_notification_with_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_notification
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_gatt_msg_handler
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_task
</UL>

<P><STRONG><a name="[1ab]"></a>os_free</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, os_mem.o(i.os_free))
<BR><BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_crc_cal (via Veneer)
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_deinit
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data
</UL>

<P><STRONG><a name="[1a3]"></a>os_malloc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, os_mem.o(i.os_malloc))
<BR><BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_crc_cal (via Veneer)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data
</UL>

<P><STRONG><a name="[2f6]"></a>os_msg_post</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, os_msg_q.o(i.os_msg_post))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = os_msg_post
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
</UL>

<P><STRONG><a name="[341]"></a>os_timer_destroy</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, os_timer.o(i.os_timer_destroy))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = os_timer_destroy &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_time_evt_id
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_stop
</UL>

<P><STRONG><a name="[343]"></a>os_timer_init</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, os_timer.o(i.os_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = os_timer_init &rArr; timer_insert &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_main
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_start
</UL>

<P><STRONG><a name="[2e]"></a>os_timer_ota_cb</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ota.o(i.os_timer_ota_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = os_timer_ota_cb &rArr; ota_stop &rArr; os_timer_stop &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ota.o(i.ota_start)
</UL>
<P><STRONG><a name="[1a6]"></a>os_timer_start</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, os_timer.o(i.os_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = os_timer_start &rArr; os_timer_stop &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_valid_tim_evt_id
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_goto_sleep
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proj_init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_task_timer_handler
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_start
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data
</UL>

<P><STRONG><a name="[1a5]"></a>os_timer_stop</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, os_timer.o(i.os_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = os_timer_stop &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_time_evt_id
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_active (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_stop
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data
</UL>

<P><STRONG><a name="[2ec]"></a>os_zalloc</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, os_mem.o(i.os_zalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = os_zalloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_client_uuid
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_store_peer_prf_info
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_service_init
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_check_peer_svc
</UL>

<P><STRONG><a name="[1a7]"></a>ota_change_flash_pin</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ota.o(i.ota_change_flash_pin))
<BR><BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data
</UL>

<P><STRONG><a name="[346]"></a>ota_deinit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ota.o(i.ota_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ota_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_free
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_ota_state (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_gatt_msg_handler
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_stop
</UL>

<P><STRONG><a name="[347]"></a>ota_gatt_add_service</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ota_service.o(i.ota_gatt_add_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ota_gatt_add_service &rArr; gatt_add_service &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_service
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_peripheral_init
</UL>

<P><STRONG><a name="[1b1]"></a>ota_gatt_report_notify</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ota_service.o(i.ota_gatt_report_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ota_gatt_report_notify &rArr; gatt_notification &rArr; gatt_notification_with_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_notification
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data
</UL>

<P><STRONG><a name="[348]"></a>ota_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ota.o(i.ota_init))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_gatt_msg_handler
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_stop
</UL>

<P><STRONG><a name="[1a8]"></a>ota_recover_flash_pin</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ota.o(i.ota_recover_flash_pin))
<BR><BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data
</UL>

<P><STRONG><a name="[1a4]"></a>ota_start</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ota.o(i.ota_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ota_start &rArr; os_timer_start &rArr; os_timer_stop &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data
</UL>

<P><STRONG><a name="[1ac]"></a>ota_stop</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, ota.o(i.ota_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ota_stop &rArr; os_timer_stop &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_destroy
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_init
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_deinit
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_ota_cb
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data
</UL>

<P><STRONG><a name="[349]"></a>pmu_calibration_restart</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, sys_utisl.o(i.pmu_calibration_restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pmu_calibration_restart &rArr; pmu_clear_isr_state &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_clear_isr_state (via Veneer)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_10us (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr (via Veneer)
</UL>

<P><STRONG><a name="[34c]"></a>pmu_cp_trim_config</STRONG> (Thumb, 332 bytes, Stack size 24 bytes, driver_pmu.o(i.pmu_cp_trim_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pmu_cp_trim_config &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_sub_init
</UL>

<P><STRONG><a name="[34d]"></a>pmu_ft_trim_config</STRONG> (Thumb, 532 bytes, Stack size 16 bytes, driver_pmu.o(i.pmu_ft_trim_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = pmu_ft_trim_config &rArr; flash_OTP_read
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_OTP_read (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_sub_init
</UL>

<P><STRONG><a name="[34f]"></a>pmu_get_isr_state</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, driver_pmu.o(i.pmu_get_isr_state))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pmu_get_isr_state &rArr; frspim_rd
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr (via Veneer)
</UL>

<P><STRONG><a name="[3b0]"></a>pmu_gpio_isr</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, driver_pmu.o(i.pmu_gpio_isr))
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr (via Veneer)
</UL>

<P><STRONG><a name="[350]"></a>pmu_lvd_en</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, driver_pmu.o(i.pmu_lvd_en))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pmu_lvd_en &rArr; pmu_enable_isr &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_enable_isr (via Veneer)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvd_threshold
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_sub_init
</UL>

<P><STRONG><a name="[352]"></a>pmu_port_wakeup_func_set</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, driver_pmu.o(i.pmu_port_wakeup_func_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pmu_port_wakeup_func_set &rArr; pmu_set_pin_to_PMU &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_to_PMU
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_pull
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_dir
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_enable_isr (via Veneer)
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_xor_en
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_before_sleep_imp (via Veneer)
</UL>

<P><STRONG><a name="[357]"></a>pmu_reset_internal_cnt</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, driver_pmu.o(i.pmu_reset_internal_cnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pmu_reset_internal_cnt &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_sub_init
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_enter_sleep (via Veneer)
</UL>

<P><STRONG><a name="[355]"></a>pmu_set_pin_dir</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, driver_pmu.o(i.pmu_set_pin_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pmu_set_pin_dir &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_port_wakeup_func_set
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_before_sleep_imp (via Veneer)
</UL>

<P><STRONG><a name="[354]"></a>pmu_set_pin_pull</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, driver_pmu.o(i.pmu_set_pin_pull))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pmu_set_pin_pull &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_port_wakeup_func_set
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_before_sleep_imp (via Veneer)
</UL>

<P><STRONG><a name="[358]"></a>pmu_set_pin_to_CPU</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, driver_pmu.o(i.pmu_set_pin_to_CPU))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pmu_set_pin_to_CPU &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_sleep_imp (via Veneer)
</UL>

<P><STRONG><a name="[353]"></a>pmu_set_pin_to_PMU</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, driver_pmu.o(i.pmu_set_pin_to_PMU))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pmu_set_pin_to_PMU &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_port_wakeup_func_set
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_before_sleep_imp (via Veneer)
</UL>

<P><STRONG><a name="[356]"></a>pmu_set_pin_xor_en</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, driver_pmu.o(i.pmu_set_pin_xor_en))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pmu_set_pin_xor_en &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_port_wakeup_func_set
</UL>

<P><STRONG><a name="[359]"></a>pmu_sub_init</STRONG> (Thumb, 1008 bytes, Stack size 384 bytes, driver_pmu.o(i.pmu_sub_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = pmu_sub_init &rArr; pmu_ft_trim_config &rArr; flash_OTP_read
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_tx_power
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_osc_doubler_calibration (via Veneer)
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_get_rc_clk (via Veneer)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_stop (via Veneer)
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_start (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_10us (via Veneer)
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_reset_internal_cnt
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_lvd_en
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_ft_trim_config
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_cp_trim_config
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_main
</UL>

<P><STRONG><a name="[324]"></a>power_off</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_key.o(i.power_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = power_off &rArr; rf_goto_sleep &rArr; os_timer_start &rArr; os_timer_stop &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_goto_sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyTask
</UL>

<P><STRONG><a name="[325]"></a>power_on</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, app_key.o(i.power_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = power_on &rArr; sp_start_adv &rArr; gap_set_advertising_rsp_data &rArr; appm_set_scan_response_data &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_start_adv
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyTask
</UL>

<P><STRONG><a name="[2d6]"></a>prf_add_profile</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, prf.o(i.prf_add_profile))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prf_add_profile
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_profile_task_add_cmd_handler
</UL>

<P><STRONG><a name="[2b8]"></a>prf_cleanup</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, prf.o(i.prf_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prf_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_con_cleanup
</UL>

<P><STRONG><a name="[2bc]"></a>prf_create</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, prf.o(i.prf_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prf_create
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_con_create
</UL>

<P><STRONG><a name="[2fb]"></a>prf_extract_svc_info_uuid_128</STRONG> (Thumb, 414 bytes, Stack size 112 bytes, prf_utils.o(i.prf_extract_svc_info_uuid_128))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = prf_extract_svc_info_uuid_128 &rArr; attm_uuid_comp &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_uuid_comp
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_store_peer_prf_info
</UL>

<P><STRONG><a name="[2a4]"></a>prf_get_task_from_id</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, prf.o(i.prf_get_task_from_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = prf_get_task_from_id
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mesh_set_runtime
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_set_rand_addr
</UL>

<P><STRONG><a name="[2c3]"></a>prf_init</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, prf.o(i.prf_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prf_init
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_msg_flush (via Veneer)
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_task_create (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler
</UL>

<P><STRONG><a name="[9]"></a>prf_itf_get_imp</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, app_prf.o(i.prf_itf_get_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prf_itf_get_imp
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gatt_default_itf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry.o(i.app_main)
</UL>
<P><STRONG><a name="[361]"></a>proj_init</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, proj_main.o(i.proj_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = proj_init &rArr; simple_peripheral_init &rArr; ANCS_gatt_add_client &rArr; gatt_add_client &rArr; gatt_add_client_uuid &rArr; gatt_write_peer_svc_to_flash &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sleep_disable
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_peripheral_init
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLOBAL_INT_START (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_main
</UL>

<P><STRONG><a name="[1b6]"></a>pwm1_update</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, app_pwm.o(i.pwm1_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = pwm1_update &rArr; pwm_config
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_output_enable
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_config
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_task
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_deinit
</UL>

<P><STRONG><a name="[1b7]"></a>pwm2_update</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, app_pwm.o(i.pwm2_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = pwm2_update &rArr; pwm_config
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_output_enable
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_config
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_task
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_deinit
</UL>

<P><STRONG><a name="[1b9]"></a>pwm_config</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, driver_pwm.o(i.pwm_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pwm_config
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm2_update
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_update
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[1b5]"></a>pwm_output_disable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, driver_pwm.o(i.pwm_output_disable))
<BR><BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_deinit
</UL>

<P><STRONG><a name="[1ba]"></a>pwm_output_enable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, driver_pwm.o(i.pwm_output_enable))
<BR><BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm2_update
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_update
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[339]"></a>rf_goto_sleep</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, proj_main.o(i.rf_goto_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = rf_goto_sleep &rArr; os_timer_start &rArr; os_timer_stop &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_stop_advertising
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_req
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_off
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock_on
</UL>

<P><STRONG><a name="[8]"></a>rwble_hl_init_imp</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, rwble_hl.o(i.rwble_hl_init_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = rwble_hl_init_imp &rArr; l2cm_init &rArr; l2cc_init &rArr; l2cc_cleanup &rArr; l2cc_op_complete &rArr; l2cc_send_cmp_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_init
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_init
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry.o(i.app_main)
</UL>
<P><STRONG><a name="[2d7]"></a>rwble_hl_reset</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, rwble_hl.o(i.rwble_hl_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = rwble_hl_reset &rArr; l2cm_init &rArr; l2cc_init &rArr; l2cc_cleanup &rArr; l2cc_op_complete &rArr; l2cc_send_cmp_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_init
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_init
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_init
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_reset_cmd_handler
</UL>

<P><STRONG><a name="[18d]"></a>show_reg</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, band.o(i.show_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = show_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_gatt_msg_handler
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_evt_cb
</UL>

<P><STRONG><a name="[15b]"></a>show_string</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, device_info_flash.o(i.show_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = show_string
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_gatt_msg_handler
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findAppID
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_name_init
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appID_list_init
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANCS_recv_data_src
</UL>

<P><STRONG><a name="[362]"></a>simple_peripheral_init</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, ble_simple_peripheral.o(i.simple_peripheral_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = simple_peripheral_init &rArr; ANCS_gatt_add_client &rArr; gatt_add_client &rArr; gatt_add_client_uuid &rArr; gatt_write_peer_svc_to_flash &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_gatt_add_service
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_gatt_add_service
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_cb_func
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_security_param_init
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_name_set
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_address_get
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_name_init
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appID_list_init
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANCS_gatt_add_client
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proj_init
</UL>

<P><STRONG><a name="[36b]"></a>smpc_ShiftLeft1Bit16ByteNum</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, smpc_crypto.o(i.smpc_ShiftLeft1Bit16ByteNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpc_ShiftLeft1Bit16ByteNum
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_aes_cmac_continue
</UL>

<P><STRONG><a name="[368]"></a>smpc_XOR_16_Byte_Array</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, smpc_crypto.o(i.smpc_XOR_16_Byte_Array))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = smpc_XOR_16_Byte_Array
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_aes_cmac_continue
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_aes_cmac_complete
</UL>

<P><STRONG><a name="[367]"></a>smpc_aes_cmac_complete</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, smpc_crypto.o(i.smpc_aes_cmac_complete))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = smpc_aes_cmac_complete &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_use_enc_block_cmd
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_XOR_16_Byte_Array
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_process_aes_cmac
</UL>

<P><STRONG><a name="[36a]"></a>smpc_aes_cmac_continue</STRONG> (Thumb, 330 bytes, Stack size 56 bytes, smpc_crypto.o(i.smpc_aes_cmac_continue))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = smpc_aes_cmac_continue &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_use_enc_block_cmd
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_XOR_16_Byte_Array
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_ShiftLeft1Bit16ByteNum
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_process_aes_cmac
</UL>

<P><STRONG><a name="[36c]"></a>smpc_aes_cmac_init</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, smpc_crypto.o(i.smpc_aes_cmac_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_use_enc_block_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f6_init
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f5_init
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_g2_init
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f4_Init
</UL>

<P><STRONG><a name="[2e8]"></a>smpc_calc_confirm_cont</STRONG> (Thumb, 1360 bytes, Stack size 56 bytes, smpc_api.o(i.smpc_calc_confirm_cont))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = smpc_calc_confirm_cont &rArr; smpc_initiate_dhkey_verification &rArr; smpc_f6_init &rArr; smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_local_public_key
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_enc_keysize_get
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_start_enc_cmd
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_req_ind
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_ltk_req_rsp
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_initiate_dhkey_verification
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_initiate_dhkey_check
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_init_mac_key_calculation
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_stk
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_rand
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_cfm
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_process_aes_cmac
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_g2_init
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_g2_complete
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f6_complete
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f5_complete
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f4_complete
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_aes_cmac_init
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_use_enc_block_ind_handler
</UL>

<P><STRONG><a name="[37b]"></a>smpc_calc_subkeys</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, smpc.o(i.smpc_calc_subkeys))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = smpc_calc_subkeys &rArr; smpc_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_xor
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_cont
</UL>

<P><STRONG><a name="[37d]"></a>smpc_check_key_distrib</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, smpc.o(i.smpc_check_key_distrib))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = smpc_check_key_distrib
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_secure_connections_enabled
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_rsp
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rsp_pdu
</UL>

<P><STRONG><a name="[37e]"></a>smpc_check_max_key_size</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, smpc.o(i.smpc_check_max_key_size))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpc_check_max_key_size
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_enc_keysize_set
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_rsp
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rsp_pdu
</UL>

<P><STRONG><a name="[396]"></a>smpc_check_pairing_feat</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, smpc.o(i.smpc_check_pairing_feat))
<BR><BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_start
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rsp_pdu
</UL>

<P><STRONG><a name="[397]"></a>smpc_check_param</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, smpc_util.o(i.smpc_check_param))
<BR><BR>[Called By]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_recv
</UL>

<P><STRONG><a name="[380]"></a>smpc_check_repeated_attempts</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, smpc.o(i.smpc_check_repeated_attempts))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = smpc_check_repeated_attempts &rArr; smpc_launch_rep_att_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_launch_rep_att_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_sec_req_pdu
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_req_pdu
</UL>

<P><STRONG><a name="[27b]"></a>smpc_clear_timeout_timer</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, smpc.o(i.smpc_clear_timeout_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_operation_cleanup
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
</UL>

<P><STRONG><a name="[2c0]"></a>smpc_confirm_gen_rand</STRONG> (Thumb, 578 bytes, Stack size 32 bytes, smpc_api.o(i.smpc_confirm_gen_rand))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = smpc_confirm_gen_rand &rArr; smpc_init_mac_key_calculation &rArr; smpc_f5_init &rArr; smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_local_public_key
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_req_ind
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_init_mac_key_calculation
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_get_next_passkey_bit
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_rand
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_e1
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f4_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_gen_rand_nb_ind_handler
</UL>

<P><STRONG><a name="[270]"></a>smpc_encrypt_cfm</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, smpc_api.o(i.smpc_encrypt_cfm))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = smpc_encrypt_cfm &rArr; smpc_send_ltk_req_rsp &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_ltk_req_rsp
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_cfm_handler
</UL>

<P><STRONG><a name="[272]"></a>smpc_encrypt_start</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, smpc_api.o(i.smpc_encrypt_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = smpc_encrypt_start &rArr; smpc_send_start_enc_cmd &rArr; gapc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_enc_keysize_set
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_start_enc_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_cmd_handler
</UL>

<P><STRONG><a name="[271]"></a>smpc_encrypt_start_handler</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, smpc_api.o(i.smpc_encrypt_start_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smpc_encrypt_start_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_encrypt_cmd_handler
</UL>

<P><STRONG><a name="[384]"></a>smpc_f4_Init</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, smpc_crypto.o(i.smpc_f4_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = smpc_f4_Init &rArr; smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_aes_cmac_init
</UL>
<BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_oob_exch
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_confirm_gen_rand
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[370]"></a>smpc_f4_complete</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, smpc_crypto.o(i.smpc_f4_complete))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smpc_f4_complete
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
</UL>

<P><STRONG><a name="[377]"></a>smpc_f5_complete</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, smpc_crypto.o(i.smpc_f5_complete))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smpc_f5_complete
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
</UL>

<P><STRONG><a name="[386]"></a>smpc_f5_init</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, smpc_crypto.o(i.smpc_f5_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = smpc_f5_init &rArr; smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_aes_cmac_init
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_init_mac_key_calculation
</UL>

<P><STRONG><a name="[379]"></a>smpc_f6_complete</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, smpc_crypto.o(i.smpc_f6_complete))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smpc_f6_complete
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
</UL>

<P><STRONG><a name="[387]"></a>smpc_f6_init</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, smpc_crypto.o(i.smpc_f6_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = smpc_f6_init &rArr; smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_aes_cmac_init
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_initiate_dhkey_verification
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_initiate_dhkey_check
</UL>

<P><STRONG><a name="[375]"></a>smpc_g2_complete</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, smpc_crypto.o(i.smpc_g2_complete))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smpc_g2_complete
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
</UL>

<P><STRONG><a name="[373]"></a>smpc_g2_init</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, smpc_crypto.o(i.smpc_g2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = smpc_g2_init &rArr; smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_aes_cmac_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[36d]"></a>smpc_generate_cfm</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, smpc.o(i.smpc_generate_cfm))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = smpc_generate_cfm &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_bdaddr
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_xor
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_use_enc_block_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
</UL>

<P><STRONG><a name="[388]"></a>smpc_generate_ci</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, smpc.o(i.smpc_generate_ci))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = smpc_generate_ci &rArr; smpc_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_csrk
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_xor
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_cont
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_command
</UL>

<P><STRONG><a name="[382]"></a>smpc_generate_e1</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, smpc.o(i.smpc_generate_e1))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = smpc_generate_e1 &rArr; smpc_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_bdaddr
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_xor
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_confirm_gen_rand
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[38a]"></a>smpc_generate_l</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, smpc.o(i.smpc_generate_l))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smpc_generate_l
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_csrk
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_cont
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_command
</UL>

<P><STRONG><a name="[374]"></a>smpc_generate_rand</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, smpc.o(i.smpc_generate_rand))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpc_generate_rand
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_tk_exch
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_oob_exch
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_confirm_gen_rand
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_public_key_pdu
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rsp_pdu
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rand_pdu
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_cfm_pdu
</UL>

<P><STRONG><a name="[319]"></a>smpc_generate_stk</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, smpc.o(i.smpc_generate_stk))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = smpc_generate_stk &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_use_enc_block_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler
</UL>

<P><STRONG><a name="[38b]"></a>smpc_get_key_sec_prop</STRONG> (Thumb, 256 bytes, Stack size 16 bytes, smpc.o(i.smpc_get_key_sec_prop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smpc_get_key_sec_prop
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_secure_connections_enabled
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_rsp
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rsp_pdu
</UL>

<P><STRONG><a name="[383]"></a>smpc_get_next_passkey_bit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, smpc.o(i.smpc_get_next_passkey_bit))
<BR><BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_confirm_gen_rand
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[273]"></a>smpc_handle_dh_key_check_complete</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, smpc.o(i.smpc_handle_dh_key_check_complete))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = smpc_handle_dh_key_check_complete &rArr; smpc_init_mac_key_calculation &rArr; smpc_f5_init &rArr; smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_init_mac_key_calculation
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_gen_dh_key_ind_handler
</UL>

<P><STRONG><a name="[314]"></a>smpc_handle_enc_change_evt</STRONG> (Thumb, 308 bytes, Stack size 24 bytes, smpc.o(i.smpc_handle_enc_change_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = smpc_handle_enc_change_evt &rArr; smpc_tkdp_rcp_start &rArr; smpc_tkdp_rcp_continue &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_state
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_link_encrypted
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_auth_get
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_send_start
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_rcp_start
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_secure_connections_enabled
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_enc_key_refr_evt_handler
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_enc_chg_evt_handler
</UL>

<P><STRONG><a name="[371]"></a>smpc_init_mac_key_calculation</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, smpc.o(i.smpc_init_mac_key_calculation))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = smpc_init_mac_key_calculation &rArr; smpc_f5_init &rArr; smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f5_init
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_nc_exch
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_dh_key_check_complete
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_confirm_gen_rand
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rand_pdu
</UL>

<P><STRONG><a name="[378]"></a>smpc_initiate_dhkey_check</STRONG> (Thumb, 208 bytes, Stack size 80 bytes, smpc.o(i.smpc_initiate_dhkey_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = smpc_initiate_dhkey_check &rArr; smpc_f6_init &rArr; smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f6_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_dhkey_check_pdu
</UL>

<P><STRONG><a name="[37a]"></a>smpc_initiate_dhkey_verification</STRONG> (Thumb, 206 bytes, Stack size 80 bytes, smpc.o(i.smpc_initiate_dhkey_verification))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = smpc_initiate_dhkey_verification &rArr; smpc_f6_init &rArr; smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f6_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_dhkey_check_pdu
</UL>

<P><STRONG><a name="[395]"></a>smpc_is_sec_mode_reached</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, smpc.o(i.smpc_is_sec_mode_reached))
<BR><BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_rsp
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rsp_pdu
</UL>

<P><STRONG><a name="[390]"></a>smpc_key_press_notification_ind</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, smpc_api.o(i.smpc_key_press_notification_ind))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smpc_key_press_notification_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_keypress_notification_pdu
</UL>

<P><STRONG><a name="[381]"></a>smpc_launch_rep_att_timer</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, smpc.o(i.smpc_launch_rep_att_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smpc_launch_rep_att_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set (via Veneer)
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_check_repeated_attempts
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
</UL>

<P><STRONG><a name="[255]"></a>smpc_pairing_csrk_exch</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, smpc_api.o(i.smpc_pairing_csrk_exch))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = smpc_pairing_csrk_exch &rArr; smpc_tkdp_send_continue &rArr; smpc_tkdp_rcp_start &rArr; smpc_tkdp_rcp_continue &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_send_continue
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_cfm_handler
</UL>

<P><STRONG><a name="[254]"></a>smpc_pairing_end</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, smpc.o(i.smpc_pairing_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_clear_timeout_timer
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_ind
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_launch_rep_att_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_send_continue
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_rcp_continue
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_recv
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_nc_exch
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_smp_timeout_timer_ind_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_cfm_handler
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rsp_pdu
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_fail_pdu
</UL>

<P><STRONG><a name="[258]"></a>smpc_pairing_irk_exch</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, smpc_api.o(i.smpc_pairing_irk_exch))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = smpc_pairing_irk_exch &rArr; smpc_tkdp_send_continue &rArr; smpc_tkdp_rcp_start &rArr; smpc_tkdp_rcp_continue &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_send_continue
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_cfm_handler
</UL>

<P><STRONG><a name="[257]"></a>smpc_pairing_ltk_exch</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, smpc_api.o(i.smpc_pairing_ltk_exch))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = smpc_pairing_ltk_exch &rArr; smpc_tkdp_send_continue &rArr; smpc_tkdp_rcp_start &rArr; smpc_tkdp_rcp_continue &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_enc_keysize_get
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_send_continue
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_cfm_handler
</UL>

<P><STRONG><a name="[25a]"></a>smpc_pairing_nc_exch</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, smpc_api.o(i.smpc_pairing_nc_exch))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = smpc_pairing_nc_exch &rArr; smpc_init_mac_key_calculation &rArr; smpc_f5_init &rArr; smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_init_mac_key_calculation
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_cfm_handler
</UL>

<P><STRONG><a name="[259]"></a>smpc_pairing_oob_exch</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, smpc_api.o(i.smpc_pairing_oob_exch))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = smpc_pairing_oob_exch &rArr; smpc_f4_Init &rArr; smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_rand
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f4_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_cfm_handler
</UL>

<P><STRONG><a name="[25c]"></a>smpc_pairing_req_handler</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, smpc_api.o(i.smpc_pairing_req_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = smpc_pairing_req_handler &rArr; smpc_send_pairing_req_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_req_ind
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_cmd_handler
</UL>

<P><STRONG><a name="[251]"></a>smpc_pairing_rsp</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, smpc_api.o(i.smpc_pairing_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = smpc_pairing_rsp &rArr; smpc_pdu_send &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_is_sec_con_pairing_supp
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_is_legacy_pairing_supp
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_req_ind
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_secure_connections_enabled
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_is_sec_mode_reached
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_get_key_sec_prop
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_check_max_key_size
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_check_key_distrib
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_cfm_handler
</UL>

<P><STRONG><a name="[25d]"></a>smpc_pairing_start</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, smpc_api.o(i.smpc_pairing_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = smpc_pairing_start &rArr; smpc_pdu_send &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_is_sec_con_pairing_supp
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_is_legacy_pairing_supp
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_check_pairing_feat
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_cmd_handler
</UL>

<P><STRONG><a name="[256]"></a>smpc_pairing_tk_exch</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, smpc_api.o(i.smpc_pairing_tk_exch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = smpc_pairing_tk_exch &rArr; smpc_generate_rand
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_secure_connections_enabled
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_rand
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_cfm_handler
</UL>

<P><STRONG><a name="[335]"></a>smpc_pdu_recv</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, smpc.o(i.smpc_pdu_recv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = smpc_pdu_recv &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_check_param
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_recv_ind_handler
</UL>

<P><STRONG><a name="[252]"></a>smpc_pdu_send</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, smpc.o(i.smpc_pdu_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = smpc_pdu_send &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set (via Veneer)
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_send_continue
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_security_req_send
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_recv
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_start
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_rsp
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_nc_exch
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_ltk_exch
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_irk_exch
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_csrk_exch
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_confirm_gen_rand
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_key_press_notification_cmd_handler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_cfm_handler
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_sec_req_pdu
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_public_key_pdu
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rsp_pdu
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_req_pdu
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rand_pdu
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_cfm_pdu
</UL>

<P><STRONG><a name="[36f]"></a>smpc_process_aes_cmac</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, smpc_crypto.o(i.smpc_process_aes_cmac))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = smpc_process_aes_cmac &rArr; smpc_aes_cmac_continue &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_aes_cmac_continue
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_aes_cmac_complete
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
</UL>

<P><STRONG><a name="[317]"></a>smpc_secure_connections_enabled</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, smpc.o(i.smpc_secure_connections_enabled))
<BR><BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_send_continue
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_rcp_continue
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_start_enc_cmd
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_get_key_sec_prop
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_check_key_distrib
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_tk_exch
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_rsp
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rsp_pdu
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_cfm_pdu
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler
</UL>

<P><STRONG><a name="[286]"></a>smpc_security_req_send</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, smpc_api.o(i.smpc_security_req_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = smpc_security_req_send &rArr; smpc_pdu_send &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_is_sec_con_pairing_supp
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_is_legacy_pairing_supp
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_security_cmd_handler
</UL>

<P><STRONG><a name="[399]"></a>smpc_send_gen_dh_key_cmd</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, smpc.o(i.smpc_send_gen_dh_key_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smpc_send_gen_dh_key_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_public_key_pdu
</UL>

<P><STRONG><a name="[318]"></a>smpc_send_ltk_req_rsp</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, smpc.o(i.smpc_send_ltk_req_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = smpc_send_ltk_req_rsp &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_state
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_encrypt_cfm
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ltk_request_evt_handler
</UL>

<P><STRONG><a name="[392]"></a>smpc_send_pairing_ind</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, smpc.o(i.smpc_send_pairing_ind))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = smpc_send_pairing_ind &rArr; gapc_auth_set
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_link_encrypted
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_auth_set
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_sign_info_pdu
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_sec_req_pdu
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_req_pdu
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_fail_pdu
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_mst_id_pdu
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_id_addr_info_pdu
</UL>

<P><STRONG><a name="[376]"></a>smpc_send_pairing_req_ind</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, smpc.o(i.smpc_send_pairing_req_ind))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = smpc_send_pairing_req_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_enc_keysize_get
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_send_continue
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_rsp
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_req_handler
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_confirm_gen_rand
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_public_key_pdu
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_pair_rsp_pdu
</UL>

<P><STRONG><a name="[36e]"></a>smpc_send_start_enc_cmd</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, smpc.o(i.smpc_send_start_enc_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = smpc_send_start_enc_cmd &rArr; gapc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_update_state
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_secure_connections_enabled
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_encrypt_start
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
</UL>

<P><STRONG><a name="[369]"></a>smpc_send_use_enc_block_cmd</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, smpc.o(i.smpc_send_use_enc_block_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_stk
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_cfm
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_aes_cmac_continue
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_aes_cmac_complete
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_aes_cmac_init
</UL>

<P><STRONG><a name="[289]"></a>smpc_sign_command</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, smpc_api.o(i.smpc_sign_command))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = smpc_sign_command &rArr; smpc_generate_ci &rArr; smpc_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_sign_counter
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_l
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_ci
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_sign_cmd_handler
</UL>

<P><STRONG><a name="[2e9]"></a>smpc_sign_cont</STRONG> (Thumb, 466 bytes, Stack size 64 bytes, smpc_api.o(i.smpc_sign_cont))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = smpc_sign_cont &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_sign_counter
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_requester
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation_ptr
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_xor
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_l
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_ci
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_subkeys
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_use_enc_block_ind_handler
</UL>

<P><STRONG><a name="[398]"></a>smpc_tkdp_rcp_continue</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, smpc.o(i.smpc_tkdp_rcp_continue))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = smpc_tkdp_rcp_continue &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_send_start
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_secure_connections_enabled
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
</UL>
<BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_rcp_start
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_sign_info_pdu
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_mst_id_pdu
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_id_info_pdu
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_id_addr_info_pdu
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_recv_enc_info_pdu
</UL>

<P><STRONG><a name="[38f]"></a>smpc_tkdp_rcp_start</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, smpc.o(i.smpc_tkdp_rcp_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = smpc_tkdp_rcp_start &rArr; smpc_tkdp_rcp_continue &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_rcp_continue
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_send_continue
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt
</UL>

<P><STRONG><a name="[391]"></a>smpc_tkdp_send_continue</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, smpc.o(i.smpc_tkdp_send_continue))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = smpc_tkdp_send_continue &rArr; smpc_tkdp_rcp_start &rArr; smpc_tkdp_rcp_continue &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_irk
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_bdaddr
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_address_type
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_rcp_start
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_req_ind
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_secure_connections_enabled
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
</UL>
<BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_send_start
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_ltk_exch
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_irk_exch
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_csrk_exch
</UL>

<P><STRONG><a name="[38e]"></a>smpc_tkdp_send_start</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, smpc.o(i.smpc_tkdp_send_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = smpc_tkdp_send_start &rArr;  smpc_tkdp_send_continue (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_send_continue
</UL>
<BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_rcp_continue
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt
</UL>

<P><STRONG><a name="[37c]"></a>smpc_xor</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, smpc.o(i.smpc_xor))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = smpc_xor
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_e1
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_ci
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_cfm
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_subkeys
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_cont
</UL>

<P><STRONG><a name="[365]"></a>sp_gatt_add_service</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, band.o(i.sp_gatt_add_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sp_gatt_add_service &rArr; gatt_add_service &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_service
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_peripheral_init
</UL>

<P><STRONG><a name="[18b]"></a>sp_start_adv</STRONG> (Thumb, 176 bytes, Stack size 48 bytes, ble_simple_peripheral.o(i.sp_start_adv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = sp_start_adv &rArr; gap_set_advertising_rsp_data &rArr; appm_set_scan_response_data &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_start_advertising
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_advertising_rsp_data
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_advertising_param
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_advertising_data
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_on
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lock_off
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_evt_cb
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
</UL>

<P><STRONG><a name="[30e]"></a>str_to_char</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, device_info_flash.o(i.str_to_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = str_to_char
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMotorData
</UL>

<P><STRONG><a name="[39b]"></a>system_set_clock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sys_utisl.o(i.system_set_clock))
<BR><BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_pclk (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_main
</UL>

<P><STRONG><a name="[33b]"></a>system_set_port_pull</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, sys_utisl.o(i.system_set_port_pull))
<BR><BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init
</UL>

<P><STRONG><a name="[35e]"></a>system_set_tx_power</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, sys_utisl.o(i.system_set_tx_power))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = system_set_tx_power &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_sub_init
</UL>

<P><STRONG><a name="[23a]"></a>system_sleep_disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_utisl.o(i.system_sleep_disable))
<BR><BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_sleep_imp (via Veneer)
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proj_init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_gatt_msg_handler
</UL>

<P><STRONG><a name="[366]"></a>system_sleep_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_utisl.o(i.system_sleep_enable))
<BR><BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_timer_handler
</UL>

<P><STRONG><a name="[199]"></a>trng_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, trng.o(i.trng_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = trng_init &rArr; host_trng_valid &rArr; trng_flow_w_specific_smp_cnt
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_trng_valid
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[19a]"></a>trng_read_rand_num</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, trng.o(i.trng_read_rand_num))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = trng_read_rand_num
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[19c]"></a>user_main</STRONG> (Thumb, 274 bytes, Stack size 32 bytes, proj_main.o(i.user_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = user_main &rArr; pmu_sub_init &rArr; pmu_ft_trim_config &rArr; flash_OTP_read
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_clock
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_sub_init
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_init
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_bond_manager_init
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_address_set
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eFuse_read
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_100us (via Veneer)
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_configure
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adc_init
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop (via Veneer)
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;proj_init
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main
</UL>

<P><STRONG><a name="[3a2]"></a>user_entry_before_sleep_imp</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, proj_main.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = user_entry_before_sleep_imp &rArr; pmu_port_wakeup_func_set &rArr; pmu_set_pin_to_PMU &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_to_PMU (via Veneer)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_pull (via Veneer)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_dir (via Veneer)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_port_wakeup_func_set (via Veneer)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_clear_isr_state
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_100us (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_enter_sleep
</UL>

<P><STRONG><a name="[3a3]"></a>user_entry_after_sleep_imp</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, proj_main.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = user_entry_after_sleep_imp &rArr; app_io_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sleep_disable (via Veneer)
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_port_mux (via Veneer)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_to_CPU (via Veneer)
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fr_uart_enableIrq (via Veneer)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_schedule_backward
</UL>

<P><STRONG><a name="[3a1]"></a>main_loop</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, proj_main.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = main_loop &rArr; sp_start_adv &rArr; gap_set_advertising_rsp_data &rArr; appm_set_scan_response_data &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sleep_disable (via Veneer)
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sp_start_adv (via Veneer)
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start (via Veneer)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_sleep_check
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_schedule_backward
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_schedule_allow
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_schedule
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_enter_sleep
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init (via Veneer)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_io_init (via Veneer)
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adc_init (via Veneer)
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_main (via Veneer)
</UL>

<P><STRONG><a name="[3c7]"></a>app_get_ota_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ota.o(ram_code))
<BR><BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
</UL>

<P><STRONG><a name="[1a2]"></a>app_set_ota_state</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ota.o(ram_code))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_deinit (via Veneer)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data (via Veneer)
</UL>

<P><STRONG><a name="[3ac]"></a>Crc32CalByByte</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ota.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Crc32CalByByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_crc_cal
</UL>

<P><STRONG><a name="[1af]"></a>app_otas_crc_cal</STRONG> (Thumb, 178 bytes, Stack size 56 bytes, ota.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_otas_crc_cal &rArr; Crc32CalByByte
</UL>
<BR>[Calls]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read (via Veneer)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_malloc (via Veneer)
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_free (via Veneer)
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Crc32CalByByte
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data (via Veneer)
</UL>

<P><STRONG><a name="[351]"></a>pmu_enable_isr</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, driver_pmu.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pmu_enable_isr &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
</UL>
<BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_port_wakeup_func_set (via Veneer)
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_start
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_lvd_en (via Veneer)
</UL>

<P><STRONG><a name="[50e]"></a>pmu_ioldosw_ctrl</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, driver_pmu.o(ram_code), UNUSED)

<P><STRONG><a name="[3ad]"></a>pmu_usb_pad_ctrl</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, driver_pmu.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
</UL>

<P><STRONG><a name="[3ae]"></a>pmu_set_gpio_value</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, driver_pmu.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
</UL>

<P><STRONG><a name="[3af]"></a>pmu_get_gpio_value</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, driver_pmu.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
</UL>

<P><STRONG><a name="[34b]"></a>pmu_clear_isr_state</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, driver_pmu.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = pmu_clear_isr_state &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_10us (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_before_sleep_imp
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_stop
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_restart (via Veneer)
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr
</UL>

<P><STRONG><a name="[13b]"></a>pmu_isr</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, driver_pmu.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = pmu_isr &rArr; system_lvd_protect_handle &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_clear_isr_state
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_gpio_isr (via Veneer)
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_lvd_protect_handle
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_get_rc_clk
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_restart (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_get_isr_state (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[50f]"></a>user_entry4</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, entry.o(ram_code), UNUSED)

<P><STRONG><a name="[3a5]"></a>ble_stack_schedule_allow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, entry.o(ram_code))
<BR><BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[3a6]"></a>ble_stack_schedule</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, entry.o(ram_code))
<BR><BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_schedule (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[3a7]"></a>ble_stack_sleep_check</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, entry.o(ram_code))
<BR><BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[3a8]"></a>ble_stack_enter_sleep</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, entry.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_stack_enter_sleep &rArr; user_entry_before_sleep_imp &rArr; pmu_port_wakeup_func_set &rArr; pmu_set_pin_to_PMU &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_before_sleep_imp
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_reset_internal_cnt (via Veneer)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_recalculate_sleep_time
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_us_2_lpcycles (via Veneer)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_save (via Veneer)
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_restore (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[3a9]"></a>ble_stack_schedule_backward</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, entry.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_stack_schedule_backward &rArr; user_entry_after_sleep_imp &rArr; app_io_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_sleep_imp
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_loop
</UL>

<P><STRONG><a name="[3b7]"></a>flash_wait_wel_clear</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, entry.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flash_wait_wel_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_100us (via Veneer)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qspi_stig_cmd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_status
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_write_protect_imp
</UL>

<P><STRONG><a name="[c]"></a>flash_erase_write_protect_imp</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, entry.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = flash_erase_write_protect_imp &rArr; flash_wait_wel_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_status_volatile (via Veneer)
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_status (via Veneer)
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wait_wel_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry.o(i.app_main)
</UL>
<P><STRONG><a name="[195]"></a>flash_write_status</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, entry.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = flash_write_status &rArr; flash_wait_wel_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wait_wel_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_flash_opration
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[11]"></a>rwip_slot_2_lpcycles_ram</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, entry.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = rwip_slot_2_lpcycles_ram &rArr; pmu_get_rc_clk &rArr; frspim_rd
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_get_rc_clk
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_div_64 (via Veneer)
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_mul_64 (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry.o(i.app_main)
</UL>
<P><STRONG><a name="[34e]"></a>flash_OTP_read</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, driver_flash.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = flash_OTP_read
</UL>
<BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qspi_stig_cmd (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_ft_trim_config (via Veneer)
</UL>

<P><STRONG><a name="[3bb]"></a>flash_OTP_write</STRONG> (Thumb, 224 bytes, Stack size 48 bytes, driver_flash.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_10us (via Veneer)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qspi_stig_cmd (via Veneer)
</UL>

<P><STRONG><a name="[3bc]"></a>flash_OTP_erase</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, driver_flash.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_10us (via Veneer)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qspi_stig_cmd (via Veneer)
</UL>

<P><STRONG><a name="[35a]"></a>system_osc_doubler_calibration</STRONG> (Thumb, 490 bytes, Stack size 32 bytes, sys_utisl.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = system_osc_doubler_calibration &rArr; frspim_rd
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_10us (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_sub_init (via Veneer)
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_restore_entry_imp
</UL>

<P><STRONG><a name="[510]"></a>system_set_internal_flash_clock_div</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, sys_utisl.o(ram_code), UNUSED)

<P><STRONG><a name="[3bd]"></a>system_enable_internal_flash_q_read</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, sys_utisl.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_100us (via Veneer)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qspi_stig_cmd (via Veneer)
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_wait_wip_clear (via Veneer)
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_set_read_quad (via Veneer)
</UL>

<P><STRONG><a name="[3b1]"></a>system_lvd_protect_handle</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, sys_utisl.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = system_lvd_protect_handle &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_100us (via Veneer)
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr
</UL>

<P><STRONG><a name="[3c0]"></a>flash_protect_enable</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, sys_utisl.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_100us (via Veneer)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qspi_stig_cmd (via Veneer)
</UL>

<P><STRONG><a name="[3c1]"></a>flash_protect_disable</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, sys_utisl.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_100us (via Veneer)
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qspi_stig_cmd (via Veneer)
</UL>

<P><STRONG><a name="[35b]"></a>pmu_calibration_start</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, sys_utisl.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pmu_calibration_start &rArr; pmu_enable_isr &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_delay_10us (via Veneer)
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_enable_isr
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_set (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_sub_init (via Veneer)
</UL>

<P><STRONG><a name="[35d]"></a>pmu_calibration_stop</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, sys_utisl.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pmu_calibration_stop &rArr; pmu_clear_isr_state &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_clear_isr_state
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_sub_init (via Veneer)
</UL>

<P><STRONG><a name="[35c]"></a>pmu_get_rc_clk</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, sys_utisl.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = pmu_get_rc_clk &rArr; frspim_rd
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_div_64 (via Veneer)
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_prevent_sleep_clear (via Veneer)
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_sleep_mul_64 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_sub_init (via Veneer)
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_slot_2_lpcycles_ram
</UL>

<P><STRONG><a name="[196]"></a>pmu_set_ioldo_ref_sel</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, sys_utisl.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pmu_set_ioldo_ref_sel &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_rd
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_save_entry_imp
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_restore_entry_imp
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main (via Veneer)
</UL>

<P><STRONG><a name="[33c]"></a>uart_init</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, sys_utisl.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_flush_rxfifo_noint (via Veneer)
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fr_uart_setLineControl (via Veneer)
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fr_uart_setBaudrate (via Veneer)
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fr_uart_init (via Veneer)
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fr_uart_enableFifos (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_init (via Veneer)
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_sleep_imp
</UL>

<P><STRONG><a name="[230]"></a>flash_write</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, sys_utisl.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_get_ota_state
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_flash_opration
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_flash_opration
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_table_set_static_keys (via Veneer)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_write_peer_svc_to_flash (via Veneer)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_write_info_to_flash (via Veneer)
</UL>

<P><STRONG><a name="[22f]"></a>flash_erase</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, sys_utisl.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = flash_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_get_ota_state
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_device_flash_opration
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_flash_opration
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_table_set_static_keys (via Veneer)
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_table_get_static_keys (via Veneer)
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_write_peer_svc_to_flash (via Veneer)
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_write_info_to_flash (via Veneer)
</UL>

<P><STRONG><a name="[a]"></a>rf_init_app</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, patch_rf.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rf_init_app
</UL>
<BR>[Calls]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_controller (via Veneer)
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_init_api (via Veneer)
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rf_em_init (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry.o(i.app_main)
</UL>
<P><STRONG><a name="[e]"></a>low_power_restore_entry_imp</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, patch_rf.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = low_power_restore_entry_imp &rArr; system_osc_doubler_calibration &rArr; frspim_rd
</UL>
<BR>[Calls]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_osc_doubler_calibration
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_ioldo_ref_sel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry.o(i.app_main)
</UL>
<P><STRONG><a name="[d]"></a>low_power_save_entry_imp</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, patch_rf.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = low_power_save_entry_imp &rArr; pmu_set_ioldo_ref_sel &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_ioldo_ref_sel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry.o(i.app_main)
</UL>
<P><STRONG><a name="[12e]"></a>rwble_isr_ram</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, patch_rf.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rwble_isr_ram &rArr; calib_lld_rx_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lld_rx_isr
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_lld_evt_end_isr
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_isr (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boot_vectors.o(RESET)
</UL>
<P><STRONG><a name="[16a]"></a>frspim_rd</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, patch_frspim.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = frspim_rd
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init (via Veneer)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_sub_init (via Veneer)
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_to_PMU (via Veneer)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_to_CPU (via Veneer)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_pull (via Veneer)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_dir (via Veneer)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_port_wakeup_func_set (via Veneer)
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_schedule_backward
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_enter_sleep
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_entry_after_sleep_imp
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_tx_power (via Veneer)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_osc_doubler_calibration
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_lvd_protect_handle
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_get_rc_clk
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_stop
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_start
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_restart (via Veneer)
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_get_gpio_value
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_gpio_value
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_enable_isr
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_xor_en (via Veneer)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_lvd_en (via Veneer)
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_get_isr_state (via Veneer)
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_cp_trim_config (via Veneer)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvd_threshold (via Veneer)
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_ioldo_ref_sel
</UL>

<P><STRONG><a name="[16b]"></a>frspim_wr</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, patch_frspim.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = frspim_wr
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_init (via Veneer)
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_sub_init (via Veneer)
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_to_PMU (via Veneer)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_to_CPU (via Veneer)
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_pull (via Veneer)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_dir (via Veneer)
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_port_wakeup_func_set (via Veneer)
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_clear_isr_state
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_schedule_backward
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_enter_sleep
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_set_tx_power (via Veneer)
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_lvd_protect_handle
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_stop
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_start
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_calibration_restart (via Veneer)
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_isr
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_gpio_value
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_usb_pad_ctrl
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_enable_isr
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_pin_xor_en (via Veneer)
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_reset_internal_cnt (via Veneer)
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_lvd_en (via Veneer)
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_cp_trim_config (via Veneer)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lvd_threshold (via Veneer)
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_recalculate_sleep_time
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pmu_set_ioldo_ref_sel
</UL>

<P><STRONG><a name="[3ce]"></a>calib_lld_send</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, adv_check_mode.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_read_clock (via Veneer)
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_acl_tx_alloc (via Veneer)
</UL>

<P><STRONG><a name="[3d0]"></a>calib_lld_receive</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, adv_check_mode.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_read_clock (via Veneer)
</UL>

<P><STRONG><a name="[3cc]"></a>calib_lld_rx_isr</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, adv_check_mode.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = calib_lld_rx_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_rxdesc_check (via Veneer)
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_meter_recv_msg (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_ram
</UL>

<P><STRONG><a name="[3d3]"></a>calib_lld_cancel</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, adv_check_mode.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_activity_free_set (via Veneer)
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lld_rxdesc_check (via Veneer)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_acl_tx_free (via Veneer)
</UL>
<BR>[Called By]<UL></UL>

<P><STRONG><a name="[3cd]"></a>calib_lld_evt_end_isr</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, adv_check_mode.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = calib_lld_evt_end_isr
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_activity_free_set (via Veneer)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_acl_tx_free (via Veneer)
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calib_meter_evt_end (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwble_isr_ram
</UL>

<P><STRONG><a name="[3d6]"></a>calib_lld_init</STRONG> (Thumb, 510 bytes, Stack size 24 bytes, adv_check_mode.o(ram_code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llm_activity_free_get (via Veneer)
</UL>

<P><STRONG><a name="[511]"></a>calib_set_freq_config</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, adv_check_mode.o(ram_code), UNUSED)

<P><STRONG><a name="[512]"></a>patch_handle_lld_con_env</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, patch_lld.o(ram_code), UNUSED)

<P><STRONG><a name="[b]"></a>con_sched_calc_target_patch_ram</STRONG> (Thumb, 134 bytes, Stack size 20 bytes, patch_lld.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = con_sched_calc_target_patch_ram
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry.o(i.app_main)
</UL>
<P><STRONG><a name="[3b4]"></a>rwip_recalculate_sleep_time</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, patch_rwip.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rwip_recalculate_sleep_time &rArr; frspim_wr
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frspim_wr
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rwip_time_get (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_enter_sleep
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[31]"></a>main_task_timer_handler</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, proj_main.o(i.main_task_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = main_task_timer_handler &rArr; keyTask &rArr; power_on &rArr; sp_start_adv &rArr; gap_set_advertising_rsp_data &rArr; appm_set_scan_response_data &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_task
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_stop
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyTask
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charge_task
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> proj_main.o(i.user_main)
</UL>
<P><STRONG><a name="[32]"></a>sleep_timer_handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, proj_main.o(i.sleep_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sleep_timer_handler &rArr; app_pwm_deinit &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sleep_enable
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_deinit
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adc_deinit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> proj_main.o(i.user_main)
</UL>
<P><STRONG><a name="[173]"></a>app_device_flash_opration</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, device_info_flash.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_device_flash_opration &rArr; flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_name_save (via Veneer)
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appID_list_save (via Veneer)
</UL>

<P><STRONG><a name="[30]"></a>sp_gatt_msg_handler</STRONG> (Thumb, 720 bytes, Stack size 40 bytes, band.o(i.sp_gatt_msg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = sp_gatt_msg_handler &rArr; dis_flash_data
</UL>
<BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ntf_data
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_init
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_string
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dis_flash_data
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_name_save
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_name_default
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appID_list_save
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appID_list_default
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;show_reg
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appID_list_init
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_req
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> band.o(i.sp_gatt_add_service)
</UL>
<P><STRONG><a name="[3aa]"></a>app_otas_flash_opration</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, ota.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_otas_flash_opration &rArr; flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Save (via Veneer)
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPU_SR_Restore (via Veneer)
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_status_volatile (via Veneer)
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_status
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_status (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_erase
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_save_data
</UL>

<P><STRONG><a name="[1ad]"></a>app_otas_save_data</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ota.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_otas_save_data &rArr; app_otas_flash_opration &rArr; flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_flash_opration
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data (via Veneer)
</UL>

<P><STRONG><a name="[1aa]"></a>app_otas_erase</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ota.o(ram_code))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_otas_erase &rArr; app_otas_flash_opration &rArr; flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_flash_opration
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data (via Veneer)
</UL>

<P><STRONG><a name="[2d]"></a>ota_gatt_msg_handler</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, ota_service.o(i.ota_gatt_msg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = ota_gatt_msg_handler &rArr; app_otas_recv_data &rArr; ota_start &rArr; os_timer_start &rArr; os_timer_stop &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_sleep_disable
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_init
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_deinit
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_recv_data
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_otas_read_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ota_service.o(i.ota_gatt_add_service)
</UL>
<P><STRONG><a name="[2f1]"></a>gatt_check_peer_svc</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, gatt_api.o(i.gatt_check_peer_svc))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gatt_check_peer_svc &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_zalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_discovery_peer_svc
</UL>

<P><STRONG><a name="[2ef]"></a>gatt_clr_peer_svc</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, gatt_api.o(i.gatt_clr_peer_svc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gatt_clr_peer_svc
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_client_uuid
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
</UL>

<P><STRONG><a name="[29]"></a>gatt_msg_default_handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gatt_api.o(i.gatt_msg_default_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = gatt_msg_default_handler &rArr; gatt_msg_default_handler_imp &rArr; gatt_store_peer_prf_info &rArr; prf_extract_svc_info_uuid_128 &rArr; attm_uuid_comp &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_api.o(i.gatt_service_init)
</UL>
<P><STRONG><a name="[2f4]"></a>gatt_msg_default_handler_imp</STRONG> (Thumb, 1720 bytes, Stack size 344 bytes, gatt_api.o(i.gatt_msg_default_handler_imp))
<BR><BR>[Stack]<UL><LI>Max Depth = 576<LI>Call Chain = gatt_msg_default_handler_imp &rArr; gatt_store_peer_prf_info &rArr; prf_extract_svc_info_uuid_128 &rArr; attm_uuid_comp &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_post
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_write_peer_svc_to_flash
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_active_service_id
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_store_peer_prf_info
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_regist_peer_prf_info
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clr_peer_svc
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler
</UL>

<P><STRONG><a name="[2ed]"></a>gatt_regist_peer_prf_info</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, gatt_api.o(i.gatt_regist_peer_prf_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gatt_regist_peer_prf_info
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_discovery_peer_svc
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_add_client_uuid
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
</UL>

<P><STRONG><a name="[28]"></a>gatt_servcie_added</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, gatt_api.o(i.gatt_servcie_added))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gatt_servcie_added
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_api.o(i.gatt_profile_task_add)
</UL>
<P><STRONG><a name="[145]"></a>gatt_service_connection_cleanup</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gatt_api.o(i.gatt_service_connection_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gatt_service_connection_cleanup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_api.o(.data)
</UL>
<P><STRONG><a name="[144]"></a>gatt_service_connection_created</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, gatt_api.o(i.gatt_service_connection_created))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gatt_service_connection_created
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_api.o(.data)
</UL>
<P><STRONG><a name="[143]"></a>gatt_service_destroy</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gatt_api.o(i.gatt_service_destroy))
<BR>[Address Reference Count : 1]<UL><LI> gatt_api.o(.data)
</UL>
<P><STRONG><a name="[142]"></a>gatt_service_init</STRONG> (Thumb, 728 bytes, Stack size 72 bytes, gatt_api.o(i.gatt_service_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = gatt_service_init &rArr; attm_svc_create_db_ext &rArr; attmdb_add_service &rArr; attmdb_svc_init &rArr; attm_uuid16_comp &rArr; attm_uuid_comp &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_zalloc
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;from_task_func_to_msg_handle
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db_ext
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_svc_create_db
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_value
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gatt_api.o(.data)
</UL>
<P><STRONG><a name="[2f7]"></a>gatt_store_peer_prf_info</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, gatt_api.o(i.gatt_store_peer_prf_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = gatt_store_peer_prf_info &rArr; prf_extract_svc_info_uuid_128 &rArr; attm_uuid_comp &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prf_extract_svc_info_uuid_128
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_zalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
</UL>

<P><STRONG><a name="[2f5]"></a>get_active_service_id</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gatt_api.o(i.get_active_service_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_active_service_id
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_msg_default_handler_imp
</UL>

<P><STRONG><a name="[f]"></a>ke_task_default_handler_get_patch</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, entry.o(i.ke_task_default_handler_get_patch))
<BR>[Address Reference Count : 1]<UL><LI> entry.o(i.app_main)
</UL>
<P><STRONG><a name="[2]"></a>jump_table_param_get</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, jump_table_host.o(i.jump_table_param_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = jump_table_param_get &rArr; jump_table_get_static_keys &rArr; flash_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_table_get_static_keys
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table_host.o(jump_table_4)
</UL>
<P><STRONG><a name="[3]"></a>jump_table_param_set</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, jump_table_host.o(i.jump_table_param_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = jump_table_param_set &rArr; jump_table_set_static_keys &rArr; flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_table_set_static_keys
</UL>
<BR>[Address Reference Count : 1]<UL><LI> jump_table_host.o(jump_table_4)
</UL>
<P><STRONG><a name="[342]"></a>free_time_evt_id</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, os_timer.o(i.free_time_evt_id))
<BR><BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_stop
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_destroy
</UL>

<P><STRONG><a name="[345]"></a>get_valid_tim_evt_id</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, os_timer.o(i.get_valid_tim_evt_id))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_valid_tim_evt_id
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_start
</UL>

<P><STRONG><a name="[344]"></a>timer_insert</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, os_timer.o(i.timer_insert))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = timer_insert &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_timer_init
</UL>

<P><STRONG><a name="[140]"></a>rf_init_api_null</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, patch_rf.o(ram_code))
<BR>[Address Reference Count : 1]<UL><LI> patch_rf.o(ram_code)
</UL>
<P><STRONG><a name="[141]"></a>rf_init_api_rssi_convert</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, patch_rf.o(ram_code))
<BR>[Address Reference Count : 1]<UL><LI> patch_rf.o(ram_code)
</UL>
<P><STRONG><a name="[3c]"></a>app_get_current_rssi_rsp</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, app_task.o(i.app_get_current_rssi_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_get_current_rssi_rsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[1dc]"></a>app_get_handler</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, app_task.o(i.app_get_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_get_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_msg_handler
</UL>

<P><STRONG><a name="[33]"></a>appm_msg_handler</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, app_task.o(i.appm_msg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = appm_msg_handler &rArr; app_update_params_update_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_get_handler
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_timer_handle
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_params_update_ind_func
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_phy_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>gapc_cmp_evt_handler</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, app_task.o(i.gapc_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gapc_cmp_evt_handler &rArr; app_update_phy_rejected_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_phy_rejected_ind_func
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_params_rejected_ind_func
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_update_params_complete_ind_func
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_master_encrypt_compeleted_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>gapc_connection_req_ind_handler</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, app_task.o(i.gapc_connection_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gapc_connection_req_ind_handler &rArr; ble_bond_check &rArr; app_connection_success_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatt_clear_remote_svc
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_bond_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>gapc_disconnect_ind_handler</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, app_task.o(i.gapc_disconnect_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gapc_disconnect_ind_handler &rArr; app_disconnect_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_disconnect_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>gapc_get_dev_info_req_ind_handler</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, app_task.o(i.gapc_get_dev_info_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapc_get_dev_info_req_ind_handler &rArr; gap_dev_name_get
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_dev_appearance
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_name_get
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>gapc_param_update_req_ind_handler</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, app_task.o(i.gapc_param_update_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapc_param_update_req_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>gapc_peer_features_ind_handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_task.o(i.gapc_peer_features_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapc_peer_features_ind_handler &rArr; app_get_info_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_get_info_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[43]"></a>gapc_peer_ver_ind_handler</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, app_task.o(i.gapc_peer_ver_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapc_peer_ver_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>gapc_set_dev_info_req_ind_handler</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, app_task.o(i.gapc_set_dev_info_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapc_set_dev_info_req_ind_handler &rArr; gap_dev_name_set
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_dev_name_set
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_dev_appearance
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[35]"></a>gapm_activity_created_ind_handler</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, app_task.o(i.gapm_activity_created_ind_handler))
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>gapm_activity_stopped_ind_handler</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, app_task.o(i.gapm_activity_stopped_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gapm_activity_stopped_ind_handler &rArr; app_adv_complete_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_scanning_completed_ind_func
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_per_sync_completed_ind_func
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_complete_ind_func
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_conn_complete_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>gapm_addr_solved_ind_handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, app_task.o(i.gapm_addr_solved_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapm_addr_solved_ind_handler &rArr; app_addr_resolve_result_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_addr_resolve_result_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>gapm_cmp_evt_handler</STRONG> (Thumb, 504 bytes, Stack size 80 bytes, app_task.o(i.gapm_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = gapm_cmp_evt_handler &rArr; jump_table_set_static_keys &rArr; flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_table_set_static_keys
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;jump_table_get_static_keys
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_add_svc
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_exc_activity_cmp
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_adv_recv_gapm_cmp
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_get_bond_status
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_start_conn
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_scan_recv_gapm_cmp
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_period_sync_recv_gapm_cmp
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appm_conn_recv_gapm_cmp
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_white_list_ind_func
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_set_dev_config_complete_ind_func
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_reset_complete_ind_func
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_db_init_complete_ind_func
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_addr_resolve_result_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>gapm_enc_block_ind_handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_task.o(i.gapm_enc_block_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapm_enc_block_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>gapm_ext_adv_report_ind_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_task.o(i.gapm_ext_adv_report_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapm_ext_adv_report_ind_handler &rArr; app_adv_report_ind_func
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_adv_report_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>gapm_gen_rand_nb_ind_handler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, app_task.o(i.gapm_gen_rand_nb_ind_handler))
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[34]"></a>gapm_profile_added_ind_handler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_task.o(i.gapm_profile_added_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = gapm_profile_added_ind_handler &rArr; mesh_set_runtime &rArr; prf_get_task_from_id
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mesh_set_runtime
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_svc_added_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>gapm_sync_established_ind_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, app_task.o(i.gapm_sync_established_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gapm_sync_established_ind_handler &rArr; app_per_sync_established_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_per_sync_established_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[46]"></a>gattc_event_ind_handler</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, app_task.o(i.gattc_event_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattc_event_ind_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.constdata)
</UL>
<P><STRONG><a name="[15]"></a>ble_bond_addr_resolve_cb</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, user_bond_manage.o(i.ble_bond_addr_resolve_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ble_bond_addr_resolve_cb &rArr; app_connection_success_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_init
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_set_evt_func
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_success_ind_func
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_req_ind_func
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_connection_send_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> user_bond_manage.o(i.ble_bond_check)
</UL>
<P><STRONG><a name="[47]"></a>app_sec_msg_dflt_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_sec.o(i.app_sec_msg_dflt_handler))
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[260]"></a>gap_paring_req_cb</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, app_sec.o(i.gap_paring_req_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gap_paring_req_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_bond_req_ind_handler
</UL>

<P><STRONG><a name="[4a]"></a>gapc_bond_ind_handler</STRONG> (Thumb, 338 bytes, Stack size 48 bytes, app_sec.o(i.gapc_bond_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gapc_bond_ind_handler &rArr; app_connection_slave_encrypted_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_disconnect_req
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_bdaddr
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_slave_encrypted_ind_func
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_paring_info_ind_func
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_master_encrypted_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>gapc_bond_req_ind_handler</STRONG> (Thumb, 426 bytes, Stack size 56 bytes, app_sec.o(i.gapc_bond_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gapc_bond_req_ind_handler &rArr; app_connection_paring_info_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand (via Veneer)
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_paring_req_cb
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_tk_exch_ind_func
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_paring_info_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[4c]"></a>gapc_encrypt_ind_handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_sec.o(i.gapc_encrypt_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gapc_encrypt_ind_handler &rArr; app_connection_slave_encrypted_ind_func &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_slave_encrypted_ind_func
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_connection_master_encrypted_ind_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[4b]"></a>gapc_encrypt_req_ind_handler</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, app_sec.o(i.gapc_encrypt_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gapc_encrypt_req_ind_handler &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_printf (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_sec_check_ediv_rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[48]"></a>gapc_security_ind_handler</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, app_sec.o(i.gapc_security_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gapc_security_ind_handler &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sec.o(.constdata)
</UL>
<P><STRONG><a name="[263]"></a>gapc_cleanup</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, gapc.o(i.gapc_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gapc_cleanup &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_operation_cleanup
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_init
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_con_cleanup
</UL>

<P><STRONG><a name="[264]"></a>gapc_operation_cleanup</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, gapc.o(i.gapc_operation_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_in_queue (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_clear_timeout_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_cleanup
</UL>

<P><STRONG><a name="[2c4]"></a>gapm_operation_cleanup</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gapm.o(i.gapm_operation_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_in_queue (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_update_state
</UL>
<BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init
</UL>

<P><STRONG><a name="[2fe]"></a>gattc_operation_cleanup</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, gattc.o(i.gattc_operation_cleanup))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattc_operation_cleanup
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_in_queue (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_cleanup
</UL>

<P><STRONG><a name="[52]"></a>hci_acl_data_handler</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, l2cc_task.o(i.hci_acl_data_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = hci_acl_data_handler &rArr; l2cc_pdu_unpack
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_util_buf_rx_free (via Veneer)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_unpack
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_rx_init
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_header_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l2cc_task.o(.constdata)
</UL>
<P><STRONG><a name="[51]"></a>hci_nb_cmp_pkts_evt_handler</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, l2cc_task.o(i.hci_nb_cmp_pkts_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hci_nb_cmp_pkts_evt_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set (via Veneer)
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_get_nb_buffer_available
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l2cc_task.o(.constdata)
</UL>
<P><STRONG><a name="[50]"></a>l2cc_dbg_pdu_send_cmd_handler</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, l2cc_task.o(i.l2cc_dbg_pdu_send_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = l2cc_dbg_pdu_send_cmd_handler &rArr; l2cc_send_cmp_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_tx_status
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_send_cmp_evt
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_max_mtu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l2cc_task.o(.constdata)
</UL>
<P><STRONG><a name="[4d]"></a>l2cc_default_msg_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, l2cc_task.o(i.l2cc_default_msg_handler))
<BR>[Address Reference Count : 1]<UL><LI> l2cc_task.o(.constdata)
</UL>
<P><STRONG><a name="[4f]"></a>l2cc_lecb_sdu_send_cmd_handler</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, l2cc_task.o(i.l2cc_lecb_sdu_send_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = l2cc_lecb_sdu_send_cmd_handler &rArr; l2cc_send_cmp_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_send_cmp_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l2cc_task.o(.constdata)
</UL>
<P><STRONG><a name="[53]"></a>l2cc_pdu_recv_ind_handler</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, l2cc_task.o(i.l2cc_pdu_recv_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = l2cc_pdu_recv_ind_handler &rArr; l2cc_sig_pdu_recv_handler &rArr; l2cc_sig_send_cmd_reject &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_sig_send_cmd_reject
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_sig_pdu_recv_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l2cc_task.o(.constdata)
</UL>
<P><STRONG><a name="[4e]"></a>l2cc_pdu_send_cmd_handler</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, l2cc_task.o(i.l2cc_pdu_send_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = l2cc_pdu_send_cmd_handler &rArr; l2cc_send_cmp_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_tx_status
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_send_cmp_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l2cc_task.o(.constdata)
</UL>
<P><STRONG><a name="[31c]"></a>host_trng_valid</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, trng.o(i.host_trng_valid))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = host_trng_valid &rArr; trng_flow_w_specific_smp_cnt
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trng_flow_w_specific_smp_cnt
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trng_init
</UL>

<P><STRONG><a name="[31d]"></a>trng_flow_w_specific_smp_cnt</STRONG> (Thumb, 166 bytes, Stack size 12 bytes, trng.o(i.trng_flow_w_specific_smp_cnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = trng_flow_w_specific_smp_cnt
</UL>
<BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_trng_valid
</UL>

<P><STRONG><a name="[19]"></a>os_default_task_func</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, os_task.o(i.os_default_task_func))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = os_default_task_func
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_task.o(i.from_task_func_to_msg_handle)
</UL>
<P><STRONG><a name="[60]"></a>gapc_bond_cfm_handler</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, gapc_task.o(i.gapc_bond_cfm_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = gapc_bond_cfm_handler &rArr; smpc_pairing_ltk_exch &rArr; smpc_tkdp_send_continue &rArr; smpc_tkdp_rcp_start &rArr; smpc_tkdp_rcp_continue &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_tk_exch
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_rsp
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_oob_exch
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_nc_exch
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_ltk_exch
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_irk_exch
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_csrk_exch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[5f]"></a>gapc_bond_cmd_handler</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, gapc_task.o(i.gapc_bond_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gapc_bond_cmd_handler &rArr; smpc_pairing_start &rArr; smpc_pdu_send &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_start
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_req_handler
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[76]"></a>gapc_cmp_evt_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gapc_task.o(i.gapc_cmp_evt_handler))
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>gapc_connection_cfm_handler</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, gapc_task.o(i.gapc_connection_cfm_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gapc_connection_cfm_handler &rArr; gapm_con_enable &rArr; gattc_con_enable &rArr; atts_process_pdu &rArr; atts_clear_rsp_data
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_con_enable
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_auth_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>gapc_default_msg_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gapc_task.o(i.gapc_default_msg_handler))
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[55]"></a>gapc_disconnect_cmd_handler</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gapc_task.o(i.gapc_disconnect_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gapc_disconnect_cmd_handler &rArr; gapc_send_error_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_error_evt
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[62]"></a>gapc_encrypt_cfm_handler</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gapc_task.o(i.gapc_encrypt_cfm_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gapc_encrypt_cfm_handler &rArr; smpc_encrypt_cfm &rArr; smpc_send_ltk_req_rsp &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_encrypt_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[61]"></a>gapc_encrypt_cmd_handler</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, gapc_task.o(i.gapc_encrypt_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gapc_encrypt_cmd_handler &rArr; smpc_encrypt_start &rArr; smpc_send_start_enc_cmd &rArr; gapc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_encrypt_start_handler
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_encrypt_start
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[6b]"></a>gapc_gen_dh_key_ind_handler</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gapc_task.o(i.gapc_gen_dh_key_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gapc_gen_dh_key_ind_handler &rArr; smpc_handle_dh_key_check_complete &rArr; smpc_init_mac_key_calculation &rArr; smpc_f5_init &rArr; smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_dh_key_check_complete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>gapc_get_dev_info_cfm_handler</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, gapc_task.o(i.gapc_get_dev_info_cfm_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapc_get_dev_info_cfm_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_att_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>gapc_get_info_cmd_handler</STRONG> (Thumb, 300 bytes, Stack size 40 bytes, gapc_task.o(i.gapc_get_info_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gapc_get_info_cmd_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_chan_sel_algo
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[6c]"></a>gapc_key_press_notification_cmd_handler</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gapc_task.o(i.gapc_key_press_notification_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gapc_key_press_notification_cmd_handler &rArr; smpc_pdu_send &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_active (via Veneer)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[5b]"></a>gapc_param_update_cfm_handler</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, gapc_task.o(i.gapc_param_update_cfm_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gapc_param_update_cfm_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation_ptr
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_sig_send_param_resp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>gapc_param_update_cmd_handler</STRONG> (Thumb, 276 bytes, Stack size 32 bytes, gapc_task.o(i.gapc_param_update_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gapc_param_update_cmd_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand (via Veneer)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_sanity
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[63]"></a>gapc_security_cmd_handler</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gapc_task.o(i.gapc_security_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gapc_security_cmd_handler &rArr; smpc_security_req_send &rArr; smpc_pdu_send &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_security_req_send
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[71]"></a>gapc_set_dev_info_cfm_handler</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, gapc_task.o(i.gapc_set_dev_info_cfm_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapc_set_dev_info_cfm_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_att_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[73]"></a>gapc_set_le_ping_to_handler</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, gapc_task.o(i.gapc_set_le_ping_to_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gapc_set_le_ping_to_handler &rArr; gapc_process_op &rArr; gapc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[74]"></a>gapc_set_le_pkt_size_handler</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gapc_task.o(i.gapc_set_le_pkt_size_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gapc_set_le_pkt_size_handler &rArr; gapc_process_op &rArr; gapc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[75]"></a>gapc_set_phy_cmd_handler</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gapc_task.o(i.gapc_set_phy_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gapc_set_phy_cmd_handler &rArr; gapc_process_op &rArr; gapc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[5e]"></a>gapc_set_pref_slave_latency_cmd_handler</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, gapc_task.o(i.gapc_set_pref_slave_latency_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gapc_set_pref_slave_latency_cmd_handler &rArr; gapc_process_op &rArr; gapc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_conhdl
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[64]"></a>gapc_sign_cmd_handler</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, gapc_task.o(i.gapc_sign_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = gapc_sign_cmd_handler &rArr; smpc_sign_command &rArr; smpc_generate_ci &rArr; smpc_xor
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_command
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[6a]"></a>gapc_smp_rep_attempts_timer_handler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gapc_task.o(i.gapc_smp_rep_attempts_timer_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapc_smp_rep_attempts_timer_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[69]"></a>gapc_smp_timeout_timer_ind_handler</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, gapc_task.o(i.gapc_smp_timeout_timer_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gapc_smp_timeout_timer_ind_handler &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[5d]"></a>gapc_update_conn_param_to_ind_handler</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gapc_task.o(i.gapc_update_conn_param_to_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gapc_update_conn_param_to_ind_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[68]"></a>gapm_cmp_evt_handler</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, gapc_task.o(i.gapm_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gapm_cmp_evt_handler &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[66]"></a>gapm_gen_rand_nb_ind_handler</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gapc_task.o(i.gapm_gen_rand_nb_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gapm_gen_rand_nb_ind_handler &rArr; smpc_confirm_gen_rand &rArr; smpc_init_mac_key_calculation &rArr; smpc_f5_init &rArr; smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_confirm_gen_rand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[67]"></a>gapm_use_enc_block_ind_handler</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gapc_task.o(i.gapm_use_enc_block_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = gapm_use_enc_block_ind_handler &rArr; smpc_calc_confirm_cont &rArr; smpc_initiate_dhkey_verification &rArr; smpc_f6_init &rArr; smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_sign_cont
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_calc_confirm_cont
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[6e]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, gapc_task.o(i.gattc_att_info_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattc_att_info_req_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_att_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[59]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gapc_task.o(i.gattc_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gattc_cmp_evt_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>gattc_read_ind_handler</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, gapc_task.o(i.gattc_read_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattc_read_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_requester
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[6f]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, gapc_task.o(i.gattc_read_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattc_read_req_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_is_pref_con_param_pres
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_att_handle
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_address_type
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[6d]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 224 bytes, Stack size 32 bytes, gapc_task.o(i.gattc_write_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gattc_write_req_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_att_handle
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[65]"></a>l2cc_cmp_evt_handler</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gapc_task.o(i.l2cc_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = l2cc_cmp_evt_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[5c]"></a>l2cc_pdu_recv_ind_handler</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, gapc_task.o(i.l2cc_pdu_recv_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = l2cc_pdu_recv_ind_handler &rArr; smpc_pdu_recv &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_recv
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_sig_pdu_recv_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_task.o(.constdata)
</UL>
<P><STRONG><a name="[293]"></a>gapm_actv_free</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gapm_actv.o(i.gapm_actv_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gapm_actv_free &rArr; gapm_scan_actv_clean &rArr; gapm_scan_clear_fragments
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_actv_clean
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_clear_fragments
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_init
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_deleted
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_created
</UL>

<P><STRONG><a name="[290]"></a>gapm_actv_get_next</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gapm_actv.o(i.gapm_actv_get_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_actv_get_next
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_stopped
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_deleted
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_stop_cmd_handler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_activity_delete_cmd_handler
</UL>

<P><STRONG><a name="[29e]"></a>gapm_actv_send_stopped_ind</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gapm_actv.o(i.gapm_actv_send_stopped_ind))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_actv_send_stopped_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_stopped
</UL>

<P><STRONG><a name="[2a0]"></a>gapm_addr_fsm</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, gapm_addr.o(i.gapm_addr_fsm))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gapm_addr_fsm &rArr; gapm_addr_renew_next_addr &rArr;  gapm_addr_fsm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_renew_next_addr
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_rand_addr_set_ind
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_addr_handler
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_cmp_evt_handler
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_renew_next_addr
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_set_rand_addr
</UL>

<P><STRONG><a name="[2a1]"></a>gapm_addr_renew_next_addr</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, gapm_addr.o(i.gapm_addr_renew_next_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = gapm_addr_renew_next_addr &rArr;  gapm_addr_fsm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_send_dev_bdaddr_ind
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_fsm
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_renew_cmd_handler
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_fsm
</UL>

<P><STRONG><a name="[2a3]"></a>gapm_addr_send_dev_bdaddr_ind</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gapm_addr.o(i.gapm_addr_send_dev_bdaddr_ind))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapm_addr_send_dev_bdaddr_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_renew_next_addr
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_addr_set_rand_addr
</UL>

<P><STRONG><a name="[9a]"></a>gapm_default_msg_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gapm_task.o(i.gapm_default_msg_handler))
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[b5]"></a>gapm_hci_handler</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, gapm_task.o(i.gapm_hci_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_hci_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[b4]"></a>gapm_unknown_task_msg_handler</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gapm_task.o(i.gapm_unknown_task_msg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_unknown_task_msg_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_task.o(.constdata)
</UL>
<P><STRONG><a name="[208]"></a>attmdb_svc_calc_len</STRONG> (Thumb, 452 bytes, Stack size 32 bytes, attm_db.o(i.attmdb_svc_calc_len))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = attmdb_svc_calc_len &rArr; attm_uuid16_comp &rArr; attm_uuid_comp &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_uuid16_comp
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_is_bt32_uuid
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_is_bt16_uuid
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_add_service
</UL>

<P><STRONG><a name="[209]"></a>attmdb_svc_init</STRONG> (Thumb, 458 bytes, Stack size 40 bytes, attm_db.o(i.attmdb_svc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = attmdb_svc_init &rArr; attm_uuid16_comp &rArr; attm_uuid_comp &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_uuid16_comp
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_add_service
</UL>

<P><STRONG><a name="[20e]"></a>atts_check_length_and_offset</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, atts.o(i.atts_check_length_and_offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = atts_check_length_and_offset &rArr; attmdb_get_max_len
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_max_len
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_signed
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_req
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_cmd
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_execute_write_req
</UL>

<P><STRONG><a name="[c3]"></a>atts_execute_write_req</STRONG> (Thumb, 372 bytes, Stack size 56 bytes, atts.o(i.atts_execute_write_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = atts_execute_write_req &rArr; atts_send_error &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_prep_data
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_attribute
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_error
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_dest_task
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_check_length_and_offset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> atts.o(.constdata)
</UL>
<P><STRONG><a name="[b9]"></a>atts_find_by_type_req</STRONG> (Thumb, 386 bytes, Stack size 88 bytes, atts.o(i.atts_find_by_type_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = atts_find_by_type_req &rArr; atts_find_value_by_uuid &rArr; atts_get_value &rArr; attm_get_value &rArr; attmdb_get_uuid &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_mtu
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_size (via Veneer)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_read_cache
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_uuid_comp
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_error
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_value_by_uuid
</UL>
<BR>[Address Reference Count : 1]<UL><LI> atts.o(.constdata)
</UL>
<P><STRONG><a name="[216]"></a>atts_find_end</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, atts.o(i.atts_find_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = atts_find_end &rArr; attmdb_get_attribute &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_uuid16_comp
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_service
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_attribute
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_value_by_uuid
</UL>

<P><STRONG><a name="[b8]"></a>atts_find_info_req</STRONG> (Thumb, 322 bytes, Stack size 56 bytes, atts.o(i.atts_find_info_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = atts_find_info_req &rArr; attmdb_get_uuid &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_mtu
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_uuid
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_error
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_next_att
</UL>
<BR>[Address Reference Count : 1]<UL><LI> atts.o(.constdata)
</UL>
<P><STRONG><a name="[214]"></a>atts_find_value_by_uuid</STRONG> (Thumb, 152 bytes, Stack size 80 bytes, atts.o(i.atts_find_value_by_uuid))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = atts_find_value_by_uuid &rArr; atts_get_value &rArr; attm_get_value &rArr; attmdb_get_uuid &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_uuid
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_uuid_comp
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_value
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_att_chk_perm
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_end
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_next_att
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_type_req
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_by_grp_type_req
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_by_type_req
</UL>

<P><STRONG><a name="[218]"></a>atts_get_att_chk_perm</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, atts.o(i.atts_get_att_chk_perm))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = atts_get_att_chk_perm &rArr; attmdb_att_get_permission &rArr; attmdb_get_attribute &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_lk_sec_lvl_get
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_is_sec_set
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_enc_keysize_get
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_att_get_permission
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_signed_cfm
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_event
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_signed
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_req
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_cmd
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_req
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_blob_req
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_prepare_write_req
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_value_by_uuid
</UL>

<P><STRONG><a name="[213]"></a>atts_get_dest_task</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, atts.o(i.atts_get_dest_task))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = atts_get_dest_task &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attmdb_get_service
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_update_elmt
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_prepare_write_req
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_value
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_execute_write_req
</UL>

<P><STRONG><a name="[219]"></a>atts_get_value</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, atts.o(i.atts_get_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = atts_get_value &rArr; attm_get_value &rArr; attmdb_get_uuid &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_read_cache
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_get_value
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_dest_task
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_req
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_mult_req
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_read_blob_req
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_value_by_uuid
</UL>

<P><STRONG><a name="[b7]"></a>atts_mtu_exc_req</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, atts.o(i.atts_mtu_exc_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = atts_mtu_exc_req &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_set_mtu
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_max_mtu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> atts.o(.constdata)
</UL>
<P><STRONG><a name="[c2]"></a>atts_prepare_write_req</STRONG> (Thumb, 244 bytes, Stack size 56 bytes, atts.o(i.atts_prepare_write_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = atts_prepare_write_req &rArr; atts_get_att_chk_perm &rArr; attmdb_att_get_permission &rArr; attmdb_get_attribute &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_front (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_error
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_store_prep_data
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_dest_task
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_att_chk_perm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> atts.o(.constdata)
</UL>
<P><STRONG><a name="[bd]"></a>atts_read_blob_req</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, atts.o(i.atts_read_blob_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = atts_read_blob_req &rArr; atts_get_value &rArr; attm_get_value &rArr; attmdb_get_uuid &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_mtu
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_read_cache
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_error
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_value
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_att_chk_perm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> atts.o(.constdata)
</UL>
<P><STRONG><a name="[bb]"></a>atts_read_by_grp_type_req</STRONG> (Thumb, 442 bytes, Stack size 88 bytes, atts.o(i.atts_read_by_grp_type_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = atts_read_by_grp_type_req &rArr; atts_find_value_by_uuid &rArr; atts_get_value &rArr; attm_get_value &rArr; attmdb_get_uuid &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_mtu
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_size (via Veneer)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_read_cache
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_error
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_value_by_uuid
</UL>
<BR>[Address Reference Count : 1]<UL><LI> atts.o(.constdata)
</UL>
<P><STRONG><a name="[ba]"></a>atts_read_by_type_req</STRONG> (Thumb, 420 bytes, Stack size 88 bytes, atts.o(i.atts_read_by_type_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = atts_read_by_type_req &rArr; atts_find_value_by_uuid &rArr; atts_get_value &rArr; attm_get_value &rArr; attmdb_get_uuid &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_mtu
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_size (via Veneer)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_read_cache
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_error
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_find_value_by_uuid
</UL>
<BR>[Address Reference Count : 1]<UL><LI> atts.o(.constdata)
</UL>
<P><STRONG><a name="[be]"></a>atts_read_mult_req</STRONG> (Thumb, 302 bytes, Stack size 56 bytes, atts.o(i.atts_read_mult_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = atts_read_mult_req &rArr; atts_get_value &rArr; attm_get_value &rArr; attmdb_get_uuid &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_mtu
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_size (via Veneer)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_read_cache
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_error
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_value
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_att_chk_perm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> atts.o(.constdata)
</UL>
<P><STRONG><a name="[bc]"></a>atts_read_req</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, atts.o(i.atts_read_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = atts_read_req &rArr; atts_get_value &rArr; attm_get_value &rArr; attmdb_get_uuid &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_mtu
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_read_cache
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_error
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_value
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_att_chk_perm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> atts.o(.constdata)
</UL>
<P><STRONG><a name="[220]"></a>atts_store_prep_data</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, atts.o(i.atts_store_prep_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = atts_store_prep_data
</UL>
<BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_insert_before (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_prepare_write_req
</UL>

<P><STRONG><a name="[224]"></a>atts_update_elmt</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, atts.o(i.atts_update_elmt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = atts_update_elmt &rArr; atts_get_dest_task &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_dest_task
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_signed_cfm
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_req
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_cmd
</UL>

<P><STRONG><a name="[bf]"></a>atts_write_cmd</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, atts.o(i.atts_write_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = atts_write_cmd &rArr; atts_get_att_chk_perm &rArr; attmdb_att_get_permission &rArr; attmdb_get_attribute &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_update_elmt
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_att_chk_perm
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_check_length_and_offset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> atts.o(.constdata)
</UL>
<P><STRONG><a name="[c0]"></a>atts_write_req</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, atts.o(i.atts_write_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = atts_write_req &rArr; atts_get_att_chk_perm &rArr; attmdb_att_get_permission &rArr; attmdb_get_attribute &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_error
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_update_elmt
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_att_chk_perm
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_check_length_and_offset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> atts.o(.constdata)
</UL>
<P><STRONG><a name="[c1]"></a>atts_write_signed</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, atts.o(i.atts_write_signed))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = atts_write_signed &rArr; atts_get_att_chk_perm &rArr; attmdb_att_get_permission &rArr; attmdb_get_attribute &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_get_att_chk_perm
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_check_length_and_offset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> atts.o(.constdata)
</UL>
<P><STRONG><a name="[dc]"></a>gapc_cmp_evt_handler</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gattc_task.o(i.gapc_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gapc_cmp_evt_handler &rArr; atts_process_pdu &rArr; atts_clear_rsp_data
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_process_pdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[db]"></a>gapc_sign_ind_handler</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, gattc_task.o(i.gapc_sign_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gapc_sign_ind_handler &rArr; atts_write_signed_cfm &rArr; atts_get_att_chk_perm &rArr; attmdb_att_get_permission &rArr; attmdb_get_attribute &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation_ptr
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_att_req
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_signed_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[d5]"></a>gattc_att_info_cfm_handler</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gattc_task.o(i.gattc_att_info_cfm_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gattc_att_info_cfm_handler &rArr; atts_process_pdu &rArr; atts_clear_rsp_data
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_process_pdu
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_error
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[d9]"></a>gattc_att_info_req_ind_handler</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gattc_task.o(i.gattc_att_info_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattc_att_info_req_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_svc_get_start_hdl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[ce]"></a>gattc_cmp_evt_handler</STRONG> (Thumb, 384 bytes, Stack size 64 bytes, gattc_task.o(i.gattc_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gattc_cmp_evt_handler &rArr; gattc_send_complete_evt &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_check_malloc (via Veneer)
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_front (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_requester
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation_ptr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[c4]"></a>gattc_default_msg_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gattc_task.o(i.gattc_default_msg_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gattc_default_msg_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[d2]"></a>gattc_disc_char_desc_ind_handler</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, gattc_task.o(i.gattc_disc_char_desc_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattc_disc_char_desc_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[d1]"></a>gattc_disc_char_ind_handler</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, gattc_task.o(i.gattc_disc_char_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattc_disc_char_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[c6]"></a>gattc_disc_cmd_handler</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, gattc_task.o(i.gattc_disc_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gattc_disc_cmd_handler &rArr; gattc_process_op &rArr; gattc_send_error_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_convert_to128
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_att_req
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[d0]"></a>gattc_disc_svc_incl_ind_handler</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, gattc_task.o(i.gattc_disc_svc_incl_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gattc_disc_svc_incl_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[cf]"></a>gattc_disc_svc_ind_handler</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, gattc_task.o(i.gattc_disc_svc_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gattc_disc_svc_ind_handler &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[c9]"></a>gattc_event_cfm_handler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gattc_task.o(i.gattc_event_cfm_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gattc_event_cfm_handler &rArr; attc_send_hdl_cfm &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_hdl_cfm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[c5]"></a>gattc_exc_mtu_cmd_handler</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gattc_task.o(i.gattc_exc_mtu_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gattc_exc_mtu_cmd_handler &rArr; gattc_process_op &rArr; gattc_send_error_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_max_mtu
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_att_req
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[ca]"></a>gattc_execute_write_cmd_handler</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, gattc_task.o(i.gattc_execute_write_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gattc_execute_write_cmd_handler &rArr; gattc_process_op &rArr; gattc_send_error_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_execute
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[302]"></a>gattc_process_op</STRONG> (Thumb, 162 bytes, Stack size 56 bytes, gattc_task.o(i.gattc_process_op))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gattc_process_op &rArr; gattc_send_error_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_src_id_get (via Veneer)
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_update_state
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_set_operation_ptr
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_error_evt
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation_ptr
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_write_cmd_handler
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_evt_cmd_handler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_sdp_svc_disc_cmd_handler
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_reg_to_peer_evt_cmd_handler
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_read_cmd_handler
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_execute_write_cmd_handler
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_exc_mtu_cmd_handler
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_disc_cmd_handler
</UL>

<P><STRONG><a name="[d3]"></a>gattc_read_cfm_handler</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, gattc_task.o(i.gattc_read_cfm_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gattc_read_cfm_handler &rArr; atts_process_pdu &rArr; atts_clear_rsp_data
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_process_pdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[c7]"></a>gattc_read_cmd_handler</STRONG> (Thumb, 292 bytes, Stack size 32 bytes, gattc_task.o(i.gattc_read_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gattc_read_cmd_handler &rArr; gattc_process_op &rArr; gattc_send_error_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_convert_to128
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_att_req
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[da]"></a>gattc_read_req_ind_handler</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, gattc_task.o(i.gattc_read_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattc_read_req_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_svc_get_start_hdl
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_svc_chg_ccc_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[cb]"></a>gattc_reg_to_peer_evt_cmd_handler</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, gattc_task.o(i.gattc_reg_to_peer_evt_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gattc_reg_to_peer_evt_cmd_handler &rArr; gattc_process_op &rArr; gattc_send_error_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_extract (via Veneer)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[cd]"></a>gattc_sdp_svc_disc_cmd_handler</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, gattc_task.o(i.gattc_sdp_svc_disc_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gattc_sdp_svc_disc_cmd_handler &rArr; gattc_process_op &rArr; gattc_send_error_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation_ptr
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[d7]"></a>gattc_send_evt_cmd_handler</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, gattc_task.o(i.gattc_send_evt_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = gattc_send_evt_cmd_handler &rArr; atts_send_event &rArr; atts_get_att_chk_perm &rArr; attmdb_att_get_permission &rArr; attmdb_get_attribute &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_read_cache
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_process_op
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[d6]"></a>gattc_send_svc_changed_cmd_handler</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, gattc_task.o(i.gattc_send_svc_changed_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gattc_send_svc_changed_cmd_handler &rArr; attm_att_set_value &rArr; attmdb_get_attribute &rArr; attmdb_get_service
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_att_set_value
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattm_svc_get_start_hdl
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_error_evt
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_svc_chg_en
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_svc_chg_ccc_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[cc]"></a>gattc_timeout_handler</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, gattc_task.o(i.gattc_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gattc_timeout_handler &rArr; gattc_send_complete_evt &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send_basic (via Veneer)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_is_disc_connection
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[d4]"></a>gattc_write_cfm_handler</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, gattc_task.o(i.gattc_write_cfm_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gattc_write_cfm_handler &rArr; atts_write_rsp_send &rArr; atts_send_error &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_process_pdu
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_read_cache
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_clear_prep_data
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_write_rsp_send
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_send_error
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[c8]"></a>gattc_write_cmd_handler</STRONG> (Thumb, 398 bytes, Stack size 40 bytes, gattc_task.o(i.gattc_write_cmd_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gattc_write_cmd_handler &rArr; gattc_process_op &rArr; gattc_send_error_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_mtu
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_lk_sec_lvl_get
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_is_sec_set
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_execute
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_att_req
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_process_op
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[d8]"></a>gattc_write_req_ind_handler</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, gattc_task.o(i.gattc_write_req_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gattc_write_req_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_svc_chg_ccc_set
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[de]"></a>l2cc_cmp_evt_handler</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gattc_task.o(i.l2cc_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = l2cc_cmp_evt_handler &rArr; gattc_send_complete_evt &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[dd]"></a>l2cc_pdu_recv_ind_handler</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, gattc_task.o(i.l2cc_pdu_recv_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = l2cc_pdu_recv_ind_handler &rArr; atts_l2cc_pdu_recv_handler &rArr; atts_process_pdu &rArr; atts_clear_rsp_data
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_send
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_l2cc_pdu_recv_handler
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atts_l2cc_pdu_recv_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gattc_task.o(.constdata)
</UL>
<P><STRONG><a name="[df]"></a>gattm_default_msg_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gattm_task.o(i.gattm_default_msg_handler))
<BR>[Address Reference Count : 1]<UL><LI> gattm_task.o(.constdata)
</UL>
<P><STRONG><a name="[e1]"></a>l2c_code_conn_param_upd_req_handler</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, l2cc_sig.o(i.l2c_code_conn_param_upd_req_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = l2c_code_conn_param_upd_req_handler &rArr; l2cc_sig_send_cmd_reject &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_forward (via Veneer)
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_sig_send_cmd_reject
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l2cc_sig.o(.constdata)
</UL>
<P><STRONG><a name="[e2]"></a>l2c_code_conn_param_upd_resp_handler</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, l2cc_sig.o(i.l2c_code_conn_param_upd_resp_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = l2c_code_conn_param_upd_resp_handler &rArr; l2cc_sig_send_cmd_reject &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_forward (via Veneer)
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_sig_send_cmd_reject
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l2cc_sig.o(.constdata)
</UL>
<P><STRONG><a name="[e0]"></a>l2c_code_reject_handler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, l2cc_sig.o(i.l2c_code_reject_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = l2c_code_reject_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_forward (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l2cc_sig.o(.constdata)
</UL>
<P><STRONG><a name="[2a]"></a>l2cm_l2cap_tx_handler</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, l2cm.o(i.l2cm_l2cap_tx_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = l2cm_l2cap_tx_handler &rArr; l2cc_data_send &rArr; l2cc_pdu_pack
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_set (via Veneer)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_event_clear (via Veneer)
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_data_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> l2cm.o(i.l2cm_init)
</UL>
<P><STRONG><a name="[f6]"></a>hci_auth_payl_to_exp_evt_handler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gapc_hci.o(i.hci_auth_payl_to_exp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hci_auth_payl_to_exp_evt_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send_basic (via Veneer)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[eb]"></a>hci_cmd_stat_event_handler</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, gapc_hci.o(i.hci_cmd_stat_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hci_cmd_stat_event_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_error_evt
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_reschedule_operation
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[f4]"></a>hci_disc_cmp_evt_handler</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gapc_hci.o(i.hci_disc_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = hci_disc_cmp_evt_handler &rArr; gapm_con_cleanup &rArr; l2cm_cleanup &rArr; l2cc_cleanup &rArr; l2cc_op_complete &rArr; l2cc_send_cmp_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_con_cleanup
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_error_evt
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_disconect_ind
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[f7]"></a>hci_enc_chg_evt_handler</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gapc_hci.o(i.hci_enc_chg_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = hci_enc_chg_evt_handler &rArr; smpc_handle_enc_change_evt &rArr; smpc_tkdp_rcp_start &rArr; smpc_tkdp_rcp_continue &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[f8]"></a>hci_enc_key_refr_evt_handler</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gapc_hci.o(i.hci_enc_key_refr_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = hci_enc_key_refr_evt_handler &rArr; smpc_handle_enc_change_evt &rArr; smpc_tkdp_rcp_start &rArr; smpc_tkdp_rcp_continue &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_handle_enc_change_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[ee]"></a>hci_le_con_update_cmp_evt_handler</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, gapc_hci.o(i.hci_le_con_update_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hci_le_con_update_cmp_evt_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_reschedule_operation
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[f0]"></a>hci_le_data_len_chg_evt_handler</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gapc_hci.o(i.hci_le_data_len_chg_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hci_le_data_len_chg_evt_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[f3]"></a>hci_le_ltk_request_evt_handler</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, gapc_hci.o(i.hci_le_ltk_request_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hci_le_ltk_request_evt_handler &rArr; smpc_send_ltk_req_rsp &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_ltk_req_rsp
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_secure_connections_enabled
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_stk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[f1]"></a>hci_le_phy_upd_cmp_evt_handler</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gapc_hci.o(i.hci_le_phy_upd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hci_le_phy_upd_cmp_evt_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[e8]"></a>hci_le_rd_phy_cmd_cmp_evt_handler</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, gapc_hci.o(i.hci_le_rd_phy_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hci_le_rd_phy_cmd_cmp_evt_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[ed]"></a>hci_le_rd_rem_feats_cmp_evt_handler</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, gapc_hci.o(i.hci_le_rd_rem_feats_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hci_le_rd_rem_feats_cmp_evt_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_requester
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[ef]"></a>hci_le_rem_con_param_req_evt_handler</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, gapc_hci.o(i.hci_le_rem_con_param_req_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hci_le_rem_con_param_req_evt_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[e7]"></a>hci_le_set_data_len_cmd_cmp_evt_handler</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gapc_hci.o(i.hci_le_set_data_len_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hci_le_set_data_len_cmd_cmp_evt_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[ec]"></a>hci_le_start_enc_stat_evt_handler</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gapc_hci.o(i.hci_le_start_enc_stat_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hci_le_start_enc_stat_evt_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[e5]"></a>hci_rd_auth_payl_to_cmd_cmp_evt_handler</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gapc_hci.o(i.hci_rd_auth_payl_to_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hci_rd_auth_payl_to_cmd_cmp_evt_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_requester
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[e4]"></a>hci_rd_chnl_map_cmd_cmp_evt_handler</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gapc_hci.o(i.hci_rd_chnl_map_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hci_rd_chnl_map_cmd_cmp_evt_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_requester
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[f5]"></a>hci_rd_rem_ver_info_cmp_evt_handler</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, gapc_hci.o(i.hci_rd_rem_ver_info_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = hci_rd_rem_ver_info_cmp_evt_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_requester
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[e3]"></a>hci_rd_rssi_cmd_cmp_evt_handler</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, gapc_hci.o(i.hci_rd_rssi_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hci_rd_rssi_cmd_cmp_evt_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_requester
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[ea]"></a>hci_vs_set_pref_slave_latency_cmd_cmp_evt_handler</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gapc_hci.o(i.hci_vs_set_pref_slave_latency_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hci_vs_set_pref_slave_latency_cmd_cmp_evt_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[e6]"></a>hci_wr_auth_payl_to_cmd_cmp_evt_handler</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gapc_hci.o(i.hci_wr_auth_payl_to_cmd_cmp_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hci_wr_auth_payl_to_cmd_cmp_evt_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_hci.o(.constdata)
</UL>
<P><STRONG><a name="[fa]"></a>l2c_code_conn_param_upd_req_handler</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gapc_sig.o(i.l2c_code_conn_param_upd_req_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = l2c_code_conn_param_upd_req_handler &rArr; gapc_sig_send_param_resp &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_param_update_sanity
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_sig_send_param_resp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_sig.o(.constdata)
</UL>
<P><STRONG><a name="[fb]"></a>l2c_code_conn_param_upd_resp_handler</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gapc_sig.o(i.l2c_code_conn_param_upd_resp_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = l2c_code_conn_param_upd_resp_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation_ptr
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_sig.o(.constdata)
</UL>
<P><STRONG><a name="[f9]"></a>l2c_code_reject_handler</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gapc_sig.o(i.l2c_code_reject_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = l2c_code_reject_handler &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_send_complete_evt
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation_ptr
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapc_sig.o(.constdata)
</UL>
<P><STRONG><a name="[2a7]"></a>gapm_adv_check_data_sanity</STRONG> (Thumb, 124 bytes, Stack size 56 bytes, gapm_adv.o(i.gapm_adv_check_data_sanity))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gapm_adv_check_data_sanity
</UL>
<BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4 (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_adv_data_cmd_handler
</UL>

<P><STRONG><a name="[2a8]"></a>gapm_adv_check_param</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, gapm_adv.o(i.gapm_adv_check_param))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_adv_check_param
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_address_type
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_create
</UL>

<P><STRONG><a name="[1c]"></a>gapm_adv_delete</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gapm_adv.o(i.gapm_adv_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_adv_delete &rArr; gapm_adv_send_hci_le_rmv_adv_set_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_rmv_adv_set_cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_adv.o(i.gapm_adv_create)
</UL>
<P><STRONG><a name="[2ab]"></a>gapm_adv_send_hci_le_rmv_adv_set_cmd</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gapm_adv.o(i.gapm_adv_send_hci_le_rmv_adv_set_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_adv_send_hci_le_rmv_adv_set_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_creating_handler
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_delete
</UL>

<P><STRONG><a name="[2ac]"></a>gapm_adv_send_hci_le_set_ext_adv_data_cmd</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, gapm_adv.o(i.gapm_adv_send_hci_le_set_ext_adv_data_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gapm_adv_send_hci_le_set_ext_adv_data_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_set_data
</UL>

<P><STRONG><a name="[2ad]"></a>gapm_adv_send_hci_le_set_ext_adv_en_cmd</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gapm_adv.o(i.gapm_adv_send_hci_le_set_ext_adv_en_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_adv_send_hci_le_set_ext_adv_en_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_starting_handler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_stop
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_start
</UL>

<P><STRONG><a name="[2aa]"></a>gapm_adv_send_hci_le_set_ext_adv_param_cmd</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, gapm_adv.o(i.gapm_adv_send_hci_le_set_ext_adv_param_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapm_adv_send_hci_le_set_ext_adv_param_cmd &rArr; gapm_actv_get_hci_own_addr_type
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_address_type
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_get_hci_own_addr_type
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_create
</UL>

<P><STRONG><a name="[2ae]"></a>gapm_adv_send_hci_le_set_ext_scan_rsp_data_cmd</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, gapm_adv.o(i.gapm_adv_send_hci_le_set_ext_scan_rsp_data_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gapm_adv_send_hci_le_set_ext_scan_rsp_data_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_set_data
</UL>

<P><STRONG><a name="[2af]"></a>gapm_adv_send_hci_le_set_per_adv_data_cmd</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, gapm_adv.o(i.gapm_adv_send_hci_le_set_per_adv_data_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapm_adv_send_hci_le_set_per_adv_data_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_set_data
</UL>

<P><STRONG><a name="[2b0]"></a>gapm_adv_send_hci_le_set_per_adv_en_cmd</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gapm_adv.o(i.gapm_adv_send_hci_le_set_per_adv_en_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_adv_send_hci_le_set_per_adv_en_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_adv_handler
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_starting_handler
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_stop
</UL>

<P><STRONG><a name="[2b1]"></a>gapm_adv_set_data</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gapm_adv.o(i.gapm_adv_set_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gapm_adv_set_data &rArr; gapm_adv_send_hci_le_set_ext_scan_rsp_data_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_per_adv_data_cmd
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_scan_rsp_data_cmd
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_adv_data_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_adv_data_cmd_handler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_adv_handler
</UL>

<P><STRONG><a name="[1a]"></a>gapm_adv_start</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, gapm_adv.o(i.gapm_adv_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapm_adv_start &rArr; gapm_adv_send_hci_le_set_ext_adv_en_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_adv_en_cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_adv.o(i.gapm_adv_create)
</UL>
<P><STRONG><a name="[1b]"></a>gapm_adv_stop</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gapm_adv.o(i.gapm_adv_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_adv_stop &rArr; gapm_adv_send_hci_le_set_per_adv_en_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_per_adv_en_cmd
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_adv_en_cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_adv.o(i.gapm_adv_create)
</UL>
<P><STRONG><a name="[315]"></a>hci_le_cmd_cmp_evt_creating_handler</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, gapm_adv.o(i.hci_le_cmd_cmp_evt_creating_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = hci_le_cmd_cmp_evt_creating_handler &rArr; gapm_actv_created &rArr; gapm_addr_set_rand_addr &rArr; gapm_addr_fsm &rArr; gapm_addr_renew_next_addr &rArr;  gapm_addr_fsm (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m_al_get_local_addr
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_created
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_rmv_adv_set_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_adv_handler
</UL>

<P><STRONG><a name="[316]"></a>hci_le_cmd_cmp_evt_starting_handler</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, gapm_adv.o(i.hci_le_cmd_cmp_evt_starting_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = hci_le_cmd_cmp_evt_starting_handler &rArr; gapm_actv_started &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_started
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_per_adv_en_cmd
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_adv_send_hci_le_set_ext_adv_en_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_adv_handler
</UL>

<P><STRONG><a name="[2cd]"></a>gapm_op_reset_continue</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, gapm_cfg.o(i.gapm_op_reset_continue))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gapm_op_reset_continue &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_set (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_basic_cmd_send_2_controller (via Veneer)
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cm_get_nb_buffer_available
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_buff_size_cmd_cmp_evt_handler
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_bd_addr_cmd_cmp_evt_handler
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_read_max_adv_data_len_cmd_cmp_evt_handler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_nb_supp_adv_sets_cmd_cmp_evt_handler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_buff_size_cmd_cmp_evt_handler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_basic_cmd_cmp_evt_cfg_handler
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_reset_cmd_handler
</UL>

<P><STRONG><a name="[2cf]"></a>gapm_op_setup_continue</STRONG> (Thumb, 298 bytes, Stack size 24 bytes, gapm_cfg.o(i.gapm_op_setup_continue))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = gapm_op_setup_continue &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_basic_cmd_send_2_controller (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_rd_bd_addr_cmd_cmp_evt_handler
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_local_p256_public_key_cmp_evt_handler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_basic_cmd_cmp_evt_rl_cfg_handler
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_basic_cmd_cmp_evt_cfg_handler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_set_dev_config_cmd_handler
</UL>

<P><STRONG><a name="[1f]"></a>gapm_init_delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gapm_init.o(i.gapm_init_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapm_init_delete &rArr; gapm_actv_deleted &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_deleted
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_init.o(i.gapm_init_create)
</UL>
<P><STRONG><a name="[2c8]"></a>gapm_init_send_hci_le_ext_create_con_cmd</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, gapm_init.o(i.gapm_init_send_hci_le_ext_create_con_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapm_init_send_hci_le_ext_create_con_cmd &rArr; gapm_actv_get_hci_own_addr_type
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_get_hci_own_addr_type
</UL>
<BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_connection_ind
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_start
</UL>

<P><STRONG><a name="[1d]"></a>gapm_init_start</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, gapm_init.o(i.gapm_init_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gapm_init_start &rArr; gapm_init_send_hci_le_ext_create_con_cmd &rArr; gapm_actv_get_hci_own_addr_type
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set (via Veneer)
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_init_send_hci_le_ext_create_con_cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_init.o(i.gapm_init_create)
</UL>
<P><STRONG><a name="[1e]"></a>gapm_init_stop</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gapm_init.o(i.gapm_init_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_init_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_clear (via Veneer)
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_basic_cmd_send_2_controller (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_init.o(i.gapm_init_create)
</UL>
<P><STRONG><a name="[2ca]"></a>gapm_list_add_next_entry</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, gapm_list.o(i.gapm_list_add_next_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_list_add_next_entry
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_list_handler
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_set_cmd_handler
</UL>

<P><STRONG><a name="[2cb]"></a>gapm_list_rmv_next_entry</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gapm_list.o(i.gapm_list_rmv_next_entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_list_rmv_next_entry
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_list_handler
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_list_rmv_cmd_handle
</UL>

<P><STRONG><a name="[2cc]"></a>gapm_list_send_list_size_ind</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gapm_list.o(i.gapm_list_send_list_size_ind))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_list_send_list_size_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_wlst_size_cmd_cmp_evt_handler
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_ral_size_cmd_cmp_evt_handler
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_rd_pal_size_cmd_cmp_evt_handler
</UL>

<P><STRONG><a name="[22]"></a>gapm_per_sync_delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gapm_per_sync.o(i.gapm_per_sync_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapm_per_sync_delete &rArr; gapm_actv_deleted &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_deleted
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_per_sync.o(i.gapm_per_sync_create)
</UL>
<P><STRONG><a name="[2d2]"></a>gapm_per_sync_get_activity</STRONG> (Thumb, 80 bytes, Stack size 20 bytes, gapm_per_sync.o(i.gapm_per_sync_get_activity))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gapm_per_sync_get_activity
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_per_adv_sync_lost_evt_handler
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_per_adv_sync_est_evt_handler
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_per_adv_report_evt_handler
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_start
</UL>

<P><STRONG><a name="[2d1]"></a>gapm_per_sync_send_adv_report_ind</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, gapm_per_sync.o(i.gapm_per_sync_send_adv_report_ind))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapm_per_sync_send_adv_report_ind
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_per_adv_report_evt_handler
</UL>

<P><STRONG><a name="[20]"></a>gapm_per_sync_start</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, gapm_per_sync.o(i.gapm_per_sync_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = gapm_per_sync_start &rArr; gapm_per_sync_get_activity
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_per_sync_get_activity
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_per_sync.o(i.gapm_per_sync_create)
</UL>
<P><STRONG><a name="[21]"></a>gapm_per_sync_stop</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gapm_per_sync.o(i.gapm_per_sync_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gapm_per_sync_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_basic_cmd_send_2_controller (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_per_sync.o(i.gapm_per_sync_create)
</UL>
<P><STRONG><a name="[2da]"></a>gapm_scan_add_to_filter</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, gapm_scan.o(i.gapm_scan_add_to_filter))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapm_scan_add_to_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_filter_packet
</UL>

<P><STRONG><a name="[2d9]"></a>gapm_scan_clear_fragments</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gapm_scan.o(i.gapm_scan_clear_fragments))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapm_scan_clear_fragments
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_adv_report_evt_handler
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_actv_clean
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_store_fragment
</UL>

<P><STRONG><a name="[25]"></a>gapm_scan_delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gapm_scan.o(i.gapm_scan_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gapm_scan_delete &rArr; gapm_actv_deleted &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_deleted
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_scan.o(i.gapm_scan_create)
</UL>
<P><STRONG><a name="[2db]"></a>gapm_scan_filter_packet</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, gapm_scan.o(i.gapm_scan_filter_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gapm_scan_filter_packet &rArr; gapm_scan_add_to_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_add_to_filter
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_adv_report_ind
</UL>

<P><STRONG><a name="[2dc]"></a>gapm_scan_send_adv_report_ind</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, gapm_scan.o(i.gapm_scan_send_adv_report_ind))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = gapm_scan_send_adv_report_ind &rArr; gapm_scan_filter_packet &rArr; gapm_scan_add_to_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_free (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_free (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_filter_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_adv_report_evt_handler
</UL>

<P><STRONG><a name="[2dd]"></a>gapm_scan_send_hci_le_set_ext_scan_en_cmd</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gapm_scan.o(i.gapm_scan_send_hci_le_set_ext_scan_en_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapm_scan_send_hci_le_set_ext_scan_en_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_cmd_cmp_evt_scan_handler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_stop
</UL>

<P><STRONG><a name="[2de]"></a>gapm_scan_send_hci_le_set_ext_scan_param_cmd</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, gapm_scan.o(i.gapm_scan_send_hci_le_set_ext_scan_param_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gapm_scan_send_hci_le_set_ext_scan_param_cmd &rArr; gapm_actv_get_hci_own_addr_type
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_send_2_controller (via Veneer)
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_actv_get_hci_own_addr_type
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_start
</UL>

<P><STRONG><a name="[23]"></a>gapm_scan_start</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gapm_scan.o(i.gapm_scan_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = gapm_scan_start &rArr; gapm_scan_send_hci_le_set_ext_scan_param_cmd &rArr; gapm_actv_get_hci_own_addr_type
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_hci_le_set_ext_scan_param_cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_scan.o(i.gapm_scan_create)
</UL>
<P><STRONG><a name="[24]"></a>gapm_scan_stop</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gapm_scan.o(i.gapm_scan_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapm_scan_stop &rArr; gapm_scan_send_hci_le_set_ext_scan_en_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_send_hci_le_set_ext_scan_en_cmd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_scan.o(i.gapm_scan_create)
</UL>
<P><STRONG><a name="[2df]"></a>gapm_scan_store_fragment</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, gapm_scan.o(i.gapm_scan_store_fragment))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gapm_scan_store_fragment &rArr; gapm_scan_clear_fragments
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_malloc (via Veneer)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_scan_clear_fragments
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hci_le_ext_adv_report_evt_handler
</UL>

<P><STRONG><a name="[2e4]"></a>gapm_smp_encrypt_req</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gapm_smp.o(i.gapm_smp_encrypt_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gapm_smp_encrypt_req
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_encrypt (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_use_enc_block_cmd_handler
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_resolv_op_cont
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_rand_rsp
</UL>

<P><STRONG><a name="[26]"></a>gapm_smp_encrypt_rsp</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, gapm_smp.o(i.gapm_smp_encrypt_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = gapm_smp_encrypt_rsp &rArr; gapm_smp_resolv_op_cont &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_resolv_op_cont
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_smp.o(i.gapm_smp_encrypt_req)
</UL>
<P><STRONG><a name="[2bf]"></a>gapm_smp_rand_req</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gapm_smp.o(i.gapm_smp_rand_req))
<BR><BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_rand (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_use_enc_block_cmd_handler
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_gen_rand_addr_cmd_handler
</UL>

<P><STRONG><a name="[27]"></a>gapm_smp_rand_rsp</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, gapm_smp.o(i.gapm_smp_rand_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gapm_smp_rand_rsp &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_state_get (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_operation
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_irk
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_encrypt_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gapm_smp.o(i.gapm_smp_rand_req)
</UL>
<P><STRONG><a name="[2d8]"></a>gapm_smp_resolv_op_cont</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, gapm_smp.o(i.gapm_smp_resolv_op_cont))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = gapm_smp_resolv_op_cont &rArr; gapm_send_complete_evt &rArr; gapm_operation_cleanup &rArr; gapm_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_send_complete_evt
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_requester
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_encrypt_req
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_resolv_addr_cmd_handler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_smp_encrypt_rsp
</UL>

<P><STRONG><a name="[107]"></a>smpc_construcpublic_key_t_pdu</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, smpc_util.o(i.smpc_construcpublic_key_t_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpc_construcpublic_key_t_pdu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[108]"></a>smpc_construct_dhkey_check_pdu</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, smpc_util.o(i.smpc_construct_dhkey_check_pdu))
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[101]"></a>smpc_construct_enc_info_pdu</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, smpc_util.o(i.smpc_construct_enc_info_pdu))
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[104]"></a>smpc_construct_id_addr_info_pdu</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, smpc_util.o(i.smpc_construct_id_addr_info_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = smpc_construct_id_addr_info_pdu
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_bdaddr
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_address_type
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[103]"></a>smpc_construct_id_info_pdu</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, smpc_util.o(i.smpc_construct_id_info_pdu))
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[109]"></a>smpc_construct_keypress_notification_pdu</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, smpc_util.o(i.smpc_construct_keypress_notification_pdu))
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[102]"></a>smpc_construct_mst_id_pdu</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, smpc_util.o(i.smpc_construct_mst_id_pdu))
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[fe]"></a>smpc_construct_pair_cfm_pdu</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, smpc_util.o(i.smpc_construct_pair_cfm_pdu))
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[100]"></a>smpc_construct_pair_fail_pdu</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, smpc_util.o(i.smpc_construct_pair_fail_pdu))
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[ff]"></a>smpc_construct_pair_rand_pdu</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, smpc_util.o(i.smpc_construct_pair_rand_pdu))
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[fc]"></a>smpc_construct_pair_req_pdu</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, smpc_util.o(i.smpc_construct_pair_req_pdu))
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[fd]"></a>smpc_construct_pair_rsp_pdu</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, smpc_util.o(i.smpc_construct_pair_rsp_pdu))
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[106]"></a>smpc_construct_sec_req_pdu</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, smpc_util.o(i.smpc_construct_sec_req_pdu))
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[105]"></a>smpc_construct_sign_info_pdu</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, smpc_util.o(i.smpc_construct_sign_info_pdu))
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[116]"></a>smpc_recv_dhkey_check_pdu</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, smpc_util.o(i.smpc_recv_dhkey_check_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = smpc_recv_dhkey_check_pdu &rArr; smpc_initiate_dhkey_verification &rArr; smpc_f6_init &rArr; smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_initiate_dhkey_verification
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_initiate_dhkey_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[10f]"></a>smpc_recv_enc_info_pdu</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, smpc_util.o(i.smpc_recv_enc_info_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = smpc_recv_enc_info_pdu &rArr; smpc_tkdp_rcp_continue &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_rcp_continue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[112]"></a>smpc_recv_id_addr_info_pdu</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, smpc_util.o(i.smpc_recv_id_addr_info_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = smpc_recv_id_addr_info_pdu &rArr; smpc_tkdp_rcp_continue &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_rcp_continue
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_ind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[111]"></a>smpc_recv_id_info_pdu</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, smpc_util.o(i.smpc_recv_id_info_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = smpc_recv_id_info_pdu &rArr; smpc_tkdp_rcp_continue &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_rcp_continue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[117]"></a>smpc_recv_keypress_notification_pdu</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, smpc_util.o(i.smpc_recv_keypress_notification_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = smpc_recv_keypress_notification_pdu &rArr; log_printf &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_set (via Veneer)
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_timer_active (via Veneer)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_key_press_notification_ind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[110]"></a>smpc_recv_mst_id_pdu</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, smpc_util.o(i.smpc_recv_mst_id_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = smpc_recv_mst_id_pdu &rArr; smpc_tkdp_rcp_continue &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_enc_keysize_get
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_rcp_continue
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_ind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[10c]"></a>smpc_recv_pair_cfm_pdu</STRONG> (Thumb, 240 bytes, Stack size 24 bytes, smpc_util.o(i.smpc_recv_pair_cfm_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = smpc_recv_pair_cfm_pdu &rArr; smpc_pdu_send &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_secure_connections_enabled
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_rand
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[10e]"></a>smpc_recv_pair_fail_pdu</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, smpc_util.o(i.smpc_recv_pair_fail_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = smpc_recv_pair_fail_pdu &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_ind
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[10d]"></a>smpc_recv_pair_rand_pdu</STRONG> (Thumb, 496 bytes, Stack size 32 bytes, smpc_util.o(i.smpc_recv_pair_rand_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = smpc_recv_pair_rand_pdu &rArr; smpc_init_mac_key_calculation &rArr; smpc_f5_init &rArr; smpc_aes_cmac_init &rArr; smpc_send_use_enc_block_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_local_public_key
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_init_mac_key_calculation
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_get_next_passkey_bit
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_rand
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_e1
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_g2_init
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_f4_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[10a]"></a>smpc_recv_pair_req_pdu</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, smpc_util.o(i.smpc_recv_pair_req_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = smpc_recv_pair_req_pdu &rArr; smpc_pdu_send &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_is_sec_con_pairing_supp
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_is_legacy_pairing_supp
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_ind
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_check_repeated_attempts
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[10b]"></a>smpc_recv_pair_rsp_pdu</STRONG> (Thumb, 292 bytes, Stack size 24 bytes, smpc_util.o(i.smpc_recv_pair_rsp_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = smpc_recv_pair_rsp_pdu &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_is_legacy_pairing_supp
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_local_public_key
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_req_ind
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_secure_connections_enabled
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_is_sec_mode_reached
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_get_key_sec_prop
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_rand
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_check_pairing_feat
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_check_max_key_size
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_check_key_distrib
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pairing_end
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[115]"></a>smpc_recv_public_key_pdu</STRONG> (Thumb, 210 bytes, Stack size 24 bytes, smpc_util.o(i.smpc_recv_public_key_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = smpc_recv_public_key_pdu &rArr; smpc_pdu_send &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf_level
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_printf
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_local_public_key
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_req_ind
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_gen_dh_key_cmd
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_generate_rand
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[114]"></a>smpc_recv_sec_req_pdu</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, smpc_util.o(i.smpc_recv_sec_req_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = smpc_recv_sec_req_pdu &rArr; smpc_pdu_send &rArr; l2cc_pdu_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_is_legacy_pairing_supp
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_ind
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_check_repeated_attempts
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_pdu_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[113]"></a>smpc_recv_sign_info_pdu</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, smpc_util.o(i.smpc_recv_sign_info_pdu))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = smpc_recv_sign_info_pdu &rArr; smpc_tkdp_rcp_continue &rArr; smpc_pairing_end &rArr; gapc_send_complete_evt &rArr; gapc_operation_cleanup &rArr; smpc_clear_timeout_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_role
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_tkdp_rcp_continue
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smpc_send_pairing_ind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> smpc_util.o(.constdata)
</UL>
<P><STRONG><a name="[122]"></a>attc_err_rsp_handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, attc.o(i.attc_err_rsp_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = attc_err_rsp_handler &rArr; gattc_send_complete_evt &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> attc.o(.constdata)
</UL>
<P><STRONG><a name="[118]"></a>attc_exc_mtu_rsp_handler</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, attc.o(i.attc_exc_mtu_rsp_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = attc_exc_mtu_rsp_handler &rArr; gattc_send_complete_evt &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_set_mtu
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapm_get_max_mtu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> attc.o(.constdata)
</UL>
<P><STRONG><a name="[121]"></a>attc_exe_wr_rsp_handler</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, attc.o(i.attc_exe_wr_rsp_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = attc_exe_wr_rsp_handler &rArr; gattc_send_complete_evt &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation_ptr
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> attc.o(.constdata)
</UL>
<P><STRONG><a name="[11a]"></a>attc_find_by_type_rsp_handler</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, attc.o(i.attc_find_by_type_rsp_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = attc_find_by_type_rsp_handler &rArr; gattc_send_complete_evt &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_reschedule_operation
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_requester
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation_ptr
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> attc.o(.constdata)
</UL>
<P><STRONG><a name="[119]"></a>attc_find_info_rsp_handler</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, attc.o(i.attc_find_info_rsp_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = attc_find_info_rsp_handler &rArr; gattc_send_complete_evt &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_reschedule_operation
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_requester
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation_ptr
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> attc.o(.constdata)
</UL>
<P><STRONG><a name="[123]"></a>attc_hdl_val_ntf_ind_handler</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, attc.o(i.attc_hdl_val_ntf_ind_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = attc_hdl_val_ntf_ind_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gapc_get_dest_task
</UL>
<BR>[Address Reference Count : 1]<UL><LI> attc.o(.constdata)
</UL>
<P><STRONG><a name="[120]"></a>attc_prep_wr_rsp_handler</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, attc.o(i.attc_prep_wr_rsp_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = attc_prep_wr_rsp_handler &rArr; gattc_send_complete_evt &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp (via Veneer)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_reschedule_operation
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation_ptr
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> attc.o(.constdata)
</UL>
<P><STRONG><a name="[11c]"></a>attc_rd_by_grp_type_rsp_handler</STRONG> (Thumb, 242 bytes, Stack size 48 bytes, attc.o(i.attc_rd_by_grp_type_rsp_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = attc_rd_by_grp_type_rsp_handler &rArr; attm_uuid_comp &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_reschedule_operation
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_requester
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation_ptr
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_uuid_comp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> attc.o(.constdata)
</UL>
<P><STRONG><a name="[11b]"></a>attc_rd_by_type_rsp_handler</STRONG> (Thumb, 616 bytes, Stack size 48 bytes, attc.o(i.attc_rd_by_type_rsp_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = attc_rd_by_type_rsp_handler &rArr; attm_uuid_comp &rArr; attm_convert_to128
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_mtu
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;l2cc_pdu_alloc
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_reschedule_operation
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_requester
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation_ptr
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attm_uuid_comp
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_att_req
</UL>
<BR>[Address Reference Count : 1]<UL><LI> attc.o(.constdata)
</UL>
<P><STRONG><a name="[11e]"></a>attc_rd_mult_rsp_handler</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, attc.o(i.attc_rd_mult_rsp_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = attc_rd_mult_rsp_handler &rArr; gattc_send_complete_evt &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_alloc (via Veneer)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_requester
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation_ptr
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> attc.o(.constdata)
</UL>
<P><STRONG><a name="[11d]"></a>attc_rd_rsp_handler</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, attc.o(i.attc_rd_rsp_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = attc_rd_rsp_handler &rArr; gattc_send_complete_evt &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy (via Veneer)
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_mtu
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ke_msg_send (via Veneer)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_push_back (via Veneer)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;co_list_pop_front (via Veneer)
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_reschedule_operation
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation_ptr
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;attc_send_read_ind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> attc.o(.constdata)
</UL>
<P><STRONG><a name="[11f]"></a>attc_wr_rsp_handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, attc.o(i.attc_wr_rsp_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = attc_wr_rsp_handler &rArr; gattc_send_complete_evt &rArr; gattc_update_state
</UL>
<BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_send_complete_evt
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattc_get_operation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> attc.o(.constdata)
</UL>
<P><STRONG><a name="[161]"></a>_fp_digits</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[15f]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vprintf
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[164]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[163]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
